Started making log
Format:
	Date,
	Description - Filename,
	SideNotes


May 20,
@ Creating a found model and route - (routes/api/found, models/found.model),

  @Creating a validation for found of the submition are empty - validation/found.js

  @Included the /api/found api endpoint in the server - 
  server.js

  @Upgrade Sequelize Version in from 5.21.5 to 5.21.10
  - package.json

  @Apply the routes in the client
  	> @ Creating a reducer for Found reports
  		-client/action/types.js
  		- client/reducers/lafReducer.js

  	  @ Created a action for getting and adding found reports with reducers
  	  	- client/action/lafActions.js

 May 21,
 @ Finished LostItemForm component (working)
 	- AddFound.js

 @Created Reducers and action for found process
 	- lafReducer.js
 	- lafActions.js


4:36 PM
	- Implementing the delete action button in found process
	- Delete Action Implemented in  the SOA Head Found page

7:35 PM
@ Setting the found table component for student page
	-putting a snackbar in reports list in students page
	-Finish the Found data reports in st/FoundTable.js


May 22, 
	Working for Org Description Components

@Created a Org Table and Button Component 
	-OrgListAdmin.js
@Created a reducers for OrgDesc Component
	-actions/types.js
	-reducers/orgDescReducer.js
@Created actions with reducers or OrgDesc Component
	-actions/orgDescActions.js
@ Create a component for organization add records
	-OrgAddForm.js


**** May 23 Include states and work the addOrgDesc Action

May 24,

Working for the adding form of organizations
	- OrgListAdmin.js

Implemented delete action with redux
	- OrgListAdmin.js

Created a component for updating datas of organizations
	- OrgUpdateForm.js

Finished the CRUD Actions in Organization Records

May 25

	9:33 PM
	@Created a model schema and route file for org registrations
	- org.model.js
	- org.js


	@Creating a validation for registration route
	-validation/registration.js
	@Finished the rework of Register route
	- routes/api/users.js

May 27, 

	1:17 PM
	@Creating the client side for registration of accnt for organizations
		-OrgAccountList.js

	6:12 PM
	@Finished the data table and Form components for user inputs of Organization Account Registration
		- OrgAccountListAddForm.js

	7:20 PM
	@Creating Reducers for orgAccount Registration
	- reducers/index.js
	- reducers/orgReducer.js
	- actions/types.js

	7:56 PM
	@Created actions with reducer 
	- actions/orgActions

	9:01 PM
	@Implementing the Registration action;
	- reducers/orgReducer.js
	- actions/orgActions.js

May 28

	2:14 AM
	@Fetch the corresponding campus for what the user will select in the selection for organization name
	-OrgAccountListAddForm.js

	4:10 PM
	Implementing the actions for org

	7:08 PM
	LESSON LEARNED - Use only two api if necessary so data will not be complicated in what api to go
	Weired javascript behavior.

	Finished the process of organization registration of accounts 
	-OrgAccountListAddForm.js


May 29

	1:46 PM
	@Created a model schema and creating route api's for idreplacement transaction
	-models/idreplacement.model
	-routes/api/idreplacement.js

	Created get and post api for idreplacements

May 30 
	3:58 PM
	@Creating the update router for idreplacement
	- routes/api/idreplacement.js

	8:11 PM
	+Having a strange behavior for setting a model schema as integer
	-idreplacements.model.js

Jun 1
	8:00 PM
	@Change creating the client side for ID replacement
	- actions/types.js
	- reducers/idreplacementReducer.js
	- actions/idrepslacementActions.js

Jun 2
	7:39 PM

	@Created a component for add form of ID Replacement
	- ad/IDReplacementAddForm.js

Jun 4
	1:41 PM
	@Continutaion of component for add form of ID Replacement
	- ad/IDReplacementAddForm.js

	4:52 PM
	@Implemented the GETTIng all the details for the idreplacement

	7:53 PM
	@Finished POST and GET api for idreplacement

	8:18 PM
	@Created a GET route that fetch data with its specific ID
	@Added a link for updating a route in the App.js


********* Implement the update route in the client side 

Jun 5
	@Implementing update route and action with redux

	!:28 PM
	@Finished the ID Replacement Process

	5:58 PM
	@Creating the database for request_activities

	@Implementing the name of the org to access in their page
	// Including the username in routes/api/users.js in login route and in the client side

	@Fetch the Orgname by its specifc orgname

Jun 6

	12:46 PM
	@Organizing the client side of the organization index
	-client/OrgIndex.js

	********* The menu for Organization
			- Home
			- Calendar
			- File Formats
			- Activity Request(Request_Activities and Reports Submittion)
			- Activity Assessment

	6:33 PM
	@Finished Organizing the home page for Student organization DashBoard
	- client/org/OrgIndex.js

	7:30 PM
	@Creating the React component for Activities(Request, Reports) Component
	- client/org/ActivityRequestReports.js

Jun 8 
	8:11 AM
	-Creating the component Request Activity Form
	-client/org/RequestActivityComponent.js

	!:28 PM
	-Finished Creating the component for RequestActivityComponent

	3:45 PM
	Creating the Table component for the history of files
	- client/org/RequestActivityHistoryTableComponent.js

	Finished Form and table components in RequestActivityComponent
	-client/org/RequestActivityComponent

Jun 9
	10:20 AM
	- Creating the Model for the Request Activities
	 / +Request Activities
	 	- id
	 	- activity_title
	 	- file(The file for activity Request)
	 	- description
	 	- orgname(The orgname for the organization who is online)
	 	- campus(THe campus where the org is Regitered)
	 	- status
	 	- created_at
	 ++ For the History Use the model and fetch some specifc data's above

	 / +Feed 
	 	- username
	 	- orgname
	 	- Message (Just only for submitting activities and reports submittion)
	 	- created_at

	 /	+Notification
	 	-username
	 	-orgname
	 	-notification(The message of what action the SOA Head or the Admin done )
	 	-reason( default is null, will only have value if the status of the request activity is Declined1 or Declined2)
	 	-status(read or '') defaultValue is ''
	 	-created_at

	 ++THe notification will be count WHERE THE STATUS IS EQUAL TO ''

	 11:06 PM
	 -CReated table in the database
	 Databas table: request_activities, org_feeds, notifications

	 @Creating the models for the table mentioned Above
	 -request_activities.model.js
	 -notifications.model.js
	 -org_feeds.model.js 

	 @Finished the models mention above

Jun 10
	10:53 PM
	@Installed multer library package
	-package.json

	11:02 PM
	@Finished the post method with a file attached in the body
	-routes/api/request_activities.js
	@Fixed the directory proccedings for the express statice folder for the directory of the files submitted
	-server.js

Jun 11
	2:09 PM
	@Applying the api routes in the client side
	-client/org/OrgIndex.js
	-client/org/RequestActivityComponent.js

	@Setup the reducer for request_activities process
	- client/reducers/requestActivitiesReducer.js

	8:05 PM
	@Created actions for request_activities
	-client/actions/requestActivitiesActions.js

	@Finished Fetching the OrgFeeds

	@added username in the routes of request_activities
	-routes/api/request_activities.js

Jun 12
	10:29 AM
	@Applying the action for submitting the activity request

	11:26 PM
	@ Finished the request Activities part with help of a prop
	- A snippet of code where a form values turned into a formed data is located at
	client/org/formData.js
	- client/org/formData.js
	- route/api/request_activities.js

Jun 20
	12:56 PM
	@Creating the client side for getting the reports that will filter what campus the activity submitted is
	*** Adding a table column of request_activities table with "notif", This will be the basis of how many notification the
	 head have.
	*** The notifications will have "read0" for SOA hEAD and "read1" for admin

	@Added notif in the model schema of the request_activities.model
	@Added notif object value in the newRequestActivities variable of request_activities api
	- model/request_activities.model.js
	- route/api/request_activities.js

	@Edited Some front-end structure of the Organization feeds in OrgIndex.
	- client/org/OrgIndex.js

	@Creating a route for counting the notifications for SOA Head
	- route/api/request_activities.js

	@Implementing the count in the the DashboardHead Component
	- client/layouts/DashboardHead.js

	3:30 PM
	@Change the GET api for counting the notification to POST Method
	- route/api/request_activities.js

	@Creating the Reducer and the actions for getting the count of notfi with request_activities in SOA HEad Dashboard
	- actions/type.js
	- reducers/requestActivitiesReducer.js
	- actions/requestActivitiesActions.js

	@Applying the action with reducer of counting notification in DashboardHead Component
	-client/layouts/DashboardHead.js

	@Rework the http request for counthead api endpoint. Added a param for the Reading  of campus
	- route/api/request_activities.js

	9:50 PM
	Finished the updating of the notification

Jun 21
	1:18 PM
	@Building the client side of the request_activities in SOA Head Page

	6:38 PM
	@Connect the authentication state for the Filtering of data in RequestedActivities Component
	-client/h/RequestedActivities.js

	@Added "request", "approvedByHead", "declinedByHead" as a state that serves as an array of the requested activities
	and what action the head give
	- client/reducers/requestActivitiesReducer.js

Jun 27
	9:39 PM
	@Fetching the data from the request_activities table
		-client/h/RequestActivities.js
		-client/actions/types.js
		-client/reducers/requestActivitiesReducer.js

Jun 28
	11:07 PM
	@Getting the data table for SOA Head at table for request activities structure

	@Using the update router of the notifications
	-client/actions/types.js
	-client/reducers/requestActivitiesReducer.js
	-client/layout/ListItemLink.js
	-client/layout/DashboardHead.js

	@Creating a two post api for the action of soa Head if
	the request_activity is approved or declined
	-route/api/request_activities
	  @Created the api if the action is approved
		-route/api/request_activities
	  @Creating the api if the activity is declined
		-route/api/request_activities

Jun 29 
	4:24 PM
	@Finished the API for declining a request activity
	-client/h/RequestACtivities.js

Jun 30
	4:45 PM
	@Creating a modal for confirmation of approved and declined 
	  Action
	 -client/h/RequestActivities.js

	@Creatin reducer type for request Activity
	 - client/actions/types.js
	 - client/actions/requestActivitiesReducer.js

	@Implementing the Actions for of approved and declined by head in the client side
	 - client/h/RequestActivities.js

Jul 4
	5:56 PM
	@Implemented actions and success message for approved and decliend confirmation message
	-client/h/Requestedctivities.js

	8:00 PM
	@CReating to new api for notifications
	-route/api/request_activities.js

	@Change the api request for approve and decliend http request
	- client/actions/requestActivitiesActions.js

Jul 11
	3:28 PM
	@Creating api that will count the notification for organizations
	- route/api/request_activities.js
	
	@ Changing the Navbar2 to functional component
	- client/layout/Navbar2.js