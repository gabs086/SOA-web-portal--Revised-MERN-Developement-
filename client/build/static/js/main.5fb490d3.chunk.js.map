{"version":3,"sources":["components/img/640x640_12988565.png","components/img/images.png","components/img/reports.png","components/img/indexhead.jpg","components/img/indexnewpic.png","components/img/download.png","components/img/request.png","components/img/files-sharing.jpg","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/lafReducer.js","reducers/orgDescReducer.js","reducers/orgReducer.js","reducers/idreplacementReducer.js","reducers/requestActivitiesReducer.js","reducers/announcementReducer.js","reducers/assessmentsReducer.js","reducers/registeredStudentsReducer.js","reducers/reportsReducer.js","reducers/fileSharingReducer.js","reducers/index.js","store.js","utils/setAuthToken.js","actions/authActions.js","components/Index.js","components/layouts/SideListNavbar.js","actions/fileSharingActions.js","components/st/StudentFileDownload.js","components/layouts/Navbar.js","components/st/StudentIndex.js","components/st/SuccessMsg.js","components/st/LostAndFoundContent.js","actions/lafActions.js","components/st/LostItemForm.js","components/st/LostItemReports.js","components/st/FoundTable.js","components/st/StudentCalendar.js","components/st/StudentEventSingle.js","components/st/StudentEvents.js","components/st/Activities.js","actions/registeredStudentsActions.js","components/st/JoinActivity.js","actions/requestActivitiesActions.js","components/layouts/SideListNavbar2.js","components/org/OrgFileDownload.js","components/layouts/Navbar2.js","components/org/OrgIndex.js","components/org/ActivityRequestReports.js","components/org/RequestActivitiesHistory.js","components/org/FormConfirmationMsg.js","components/org/RequestActivityComponent.js","components/org/formData.js","components/org/OrgNotifications.js","components/org/CalendarOrg.js","components/org/OrgEventSingle.js","components/org/OrgEvents.js","components/org/Assessment.js","actions/assessmentActions.js","components/org/AddAssessment.js","components/org/CheckRegisteredStudentsOrg.js","components/org/UpdateAssessment.js","components/org/SendOrgReports.js","actions/reportsActions.js","components/layouts/ListItemLink.js","components/layouts/DashboardHead.js","components/h/HeadIndex.js","components/h/FormConfirmationMsg.js","components/h/AnnounceEvents.js","actions/announcementActions.js","components/h/FoundSuccessMsg.js","components/h/ClaimedSuccessMsg.js","components/h/LostAndFoundTable2.js","components/h/LostAndFound.js","actions/orgDescActions.js","components/h/OrgList.js","components/h/RequestedActivities.js","components/h/ActivityAssessment.js","components/h/LostOrFound.js","components/h/FoundReportSuccessMsg.js","components/h/FoundDeleteMsg.js","components/h/Found.js","components/h/AddFound.js","components/h/HeadEventSingle.js","components/h/HeadEvents.js","components/h/AddEventFormHead.js","components/h/UpdateEventFormHead.js","components/h/CheckRegisteredStudents.js","components/layouts/DashboardAdmin.js","components/ad/AdminIndex.js","components/ad/FormConfirmationMsg.js","components/ad/AnnounceEvents.js","components/ad/AddEventForm.js","components/ad/UpdateEventForm.js","components/ad/OrgAddFormSuccessMsg.js","components/ad/OrgUpdateFormSuccessMsg.js","components/ad/OrgListAdminDeleteMsg.js","components/ad/OrgListAdmin.js","components/ad/RequestedActivitiesAdmin.js","components/ad/FilesAndReports.js","actions/idreplacementActions.js","components/ad/IDReplacement.js","components/ad/OrgAddForm.js","components/ad/OrgUpdateFormErrorMsg.js","components/ad/OrgUpdateForm.js","actions/orgActions.js","components/ad/OrgAccountListSuccessfulMsg.js","components/ad/OrgAccountList.js","components/ad/OrgAccountListAddForm.js","components/ad/IDReplacementAddForm.js","components/ad/IDReplacementUpdateForm.js","components/ad/AdminEventSingle.js","components/ad/AdminEvents.js","components/ad/ViewOrgReports.js","components/ad/ShareFiles.js","components/ad/ViewSharedFiles.js","private-route/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GET_ERRORS","isEmpty","require","initialState","isAuthenticated","user","loading","lost","found","reports","added","updated","deleted","records","registered","accounts","replaced","submitted","feeds","request","approvedByHead","declinedByHead","countNotif","approvedByAdmin","declinedByAdmin","approved","declined","pendingAgain","fullReq","registererdInHead","inactive","shared","orgs","students","loadingStudent","loadingOrg","combineReducers","auth","state","action","type","payload","errors","laf","map","report","i","status","filter","item","id","orgDesc","record","org","idreplacement","requestActivities","announcement","assessment","registeredStudents","fileSharing","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","_","dispatch","localStorage","removeItem","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","flexGrow","paper","marginTop","display","flexDirection","alignItems","form","width","table","minWidth","wrapper","margin","spacing","unit","position","buttonProgress","green","top","left","marginLeft","connect","loginUser","userData","post","then","res","data","setItem","jwt_decode","catch","err","response","props","useState","username","password","login","setLogin","getErrors","showPassword","setShowPassword","setPic","setPicBool","users","getUsers","setLoading","setError","loadingAuth","setLoadingAuth","handleClickShowPassword","handleMouseDownPassword","e","preventDefault","handleChange","prop","target","value","useEffect","get","history","push","classes","rows","className","Container","component","maxWidth","CssBaseline","onClick","src","indexnewpic","alt","indexhead","noValidate","onSubmit","loginData","usernotfound","TextField","error","required","fullWidth","label","name","autoFocus","onChange","helperText","passwordincorrect","InputProps","endAdornment","InputAdornment","IconButton","edge","aria-label","onMouseDown","Button","submit","disable","CircularProgress","size","Box","mt","mb","Table","TableHead","TableRow","TableCell","TableBody","row","key","scope","passwordTxt","campus","SideListNavbar","handleClick","bind","open","this","setState","class","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","onClickDownloads","style","Component","withStyles","nested","paddingLeft","loadingFiles","loadingFilesStudents","loadingFilesOrg","mapDispatchToProps","getRecordsInStudents","sort","a","b","created_at","Dialog","onClose","handleClose","aria-labelledby","DialogTitle","ListItemAvatar","file","fileName","Transition","Slide","direction","Navbar","toggleDrawer","side","handleMenuClose","handleActivityOpen","handleSettingsClose","handleSettingsOpen","onLogoutClick","onModalLogoutClick","onHandleLogoutClickClose","handleModalFiles","anchorEl","anchorDropDownEl","modalLogout","downloadFiles","right","currentTarget","isMenuOpen","Boolean","isSettingsOpen","renderMenu","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","renderSettings","TransitionComponent","keepMounted","aria-describedby","DialogContent","DialogContentText","DialogActions","AppBar","Toolbar","background","title","noWrap","sectionDesktop","aria-owns","undefined","aria-haspopup","sectionMobile","Drawer","anchor","tabIndex","role","onKeyDown","list","breakpoints","up","ListItemLink","StudentIndex","paddingTop","Paper","elevation","mixins","gutters","paddingBottom","backgroundColor","palette","input","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","dark","amber","icon","fontSize","iconVariant","opacity","marginRight","message","other","Icon","SnackbarContent","classNames","close","SuccessMsg","Snackbar","autoHideDuration","React","LostAndFoundContent","event","reason","cardGrid","Grid","container","justify","xs","sm","md","Card","card","CardMedia","cardMedia","image","lostandfound","CardContent","cardContent","gutterBottom","CardActions","textAlign","height","setReportToFound","setReportToClaimed","setReportLoading","LostItemForm","previousPage","handleSubmit","chooseContactOption","getCampuses","yr","department","course","details","contact","campuses","departments","loadingCampuses","loadingDepartments","contactValue","console","log","getDepartments","window","location","newLostReport","addLostReport","contactTextField","formControl","InputLabelProps","shrink","autoComplete","layout","closeIcon","FormControl","InputLabel","htmlFor","Select","inputProps","campusname","multiline","rowsMax","sx","FormLabel","RadioGroup","group","FormControlLabel","control","Radio","lostReports","flexWrap","marginBottom","padding","float","StyledTableCell","head","white","body","useStyles1","flexShrink","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","disabled","Math","ceil","max","useStyles2","root2","tableWrapper","overflowX","spinner","reportButton","link","getLostReport","setPage","setRowsPerPage","search","setSearch","setOpen","setLoadingCampuses","setInterval","clearInterval","emptyRows","min","length","Breadcrumbs","aria-current","select","SelectProps","native","rowSpan","colSpan","slice","TableFooter","TablePagination","rowsPerPageOptions","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","FoundTable","getReports","res2","founditem","date","StudentCalendar","events","setEvents","plugins","dayGridPlugin","interactionPlugin","initialView","weekends","eventContent","eventInfo","_def","publicId","timeText","dateClick","arg","dateStr","media","avatar","red","StudentEventSingle","setEvent","match","params","CardHeader","Avatar","subheader","moment","dateDate","format","setBy","poster","venue","description","disableSpacing","ifError","setIfError","timeFeed","registerStudentFalse","getRecords","searchCampus","setSearchCampus","searchAct","setSearchAct","openConfirmation","setOpenConfirmation","activity","Collapse","in","timeout","unmountOnExit","activityRequirements","toLowerCase","registerStudent","notif","getActivity","setLoadingDepartments","activityId","activityTitle","studentName","srCode","section","contactNumber","values","setValues","orgname","createdBy","notification","readOnly","paddingRight","setRecordLoading","withRouter","setCount","notifUpdated","setNotifUpdated","read","handleUpdateNotif","Badge","badgeContent","onClickDownload","getRecordsInOrg","setAnchorEl","setAnchorDropDownEl","setModalLogout","bottom","setSide","getOrgFeeds","orgOnline","setOrgOnline","loadingOrgFeeds","setOrgFeeds","fromNow","textDecoration","ActivityRequestReports","to","RequestActivitiesHistory","getActivities","activity_title","propType","PropTypes","object","isRequired","FormConfirmationMsg","submitRequest","setOrgName","obj","setObj","_formData","createFormData","namespace","formData","FormData","property","hasOwnProperty","formKey","append","toISOString","File","encType","files","inline","preloader","notifs","getNotifs","notifLoading","setNotifLoading","secondary","CalendarOrg","OrgEventSingle","OrgEvents","addActivityAssessmentFalse","updateActivityAssessmentFalse","activities","setAdded","setUpdated","setTimeout","addActivityAssessment","getCreatedBy","selectedDate","setSelectedDate","selectedTime","setSelectedTime","dateTime","newAssessment","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","time","keyboardIcon","getStudents","openModalState","setOpenModalState","getId","complete","setComplete","undo","setUndo","setFilter","handleModalClose","newOrgFeed","Tooltip","placement","setFullRequirements","undoEvent","updateActivityAssessment","errorsAll","getErrorsAll","all","textPrimary","submitReport","orgFeed","submitReportFalse","errorOrgName","setSubmitted","reportTitle","reportDesc","fd","renderLink","useMemo","forwardRef","itemProps","ref","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","whiteSpace","drawerOpen","drawerClose","toolbar","justifyContent","content","countNotifHead","updateCountNotif","modalOpen","setModalOpen","clsx","m","children","HeadIndex","themeSystem","styles","addAnnouncementFalseHead","updateAnnouncementFalseHead","getEvents","setUpdate","deleteModal","openDeleteModal","handleDeleteModalClose","addedHead","updateHead","deletedHead","deleteAnnouncement","FoundSuccessMsg","ClaimedSuccessMsg","ClaimedButton","setFound","claimed","setClaimed","foundData","claimedData","setAsClaimed","confirm","updateStatusClaimed","fetchReports","today","dd","String","getDate","padStart","mm","getMonth","yyyy","dateFilter","updateStatusFound","setAsFound","getOrgDesc","mapDisPatchToProps","searchDept","setSearchDept","orgpresname","orgadvisername","quantitymembers","quantityofficers","getActivitiesHead","setApprovedHead","data2","setDeclinedHead","setId","setUsername","setNotification","setReason","approvedModal","openApprovedModal","declinedModal","openDeclinedModal","openApproved","setOpenApproved","openDeclined","setOpenDeclined","handleApprovedModalClose","handleDeclinedModalClose","approvedBody","notifBody","declinedBody","handleApproved","handleDeclined","mapDispatchToProp","setAsApproved","setAsApprovedFalse","setAsDeclined","setAsDeclinedFalse","setAgainToPending","setAgainToPendingFalse","setUserName","setNotif","pendingModal","openPendingModal","approve","setApprove","setDeclined","pending","setPending","handlePending","handlePendingModalClose","LostOrFound","FoundReportSuccessMsg","FoundDeleteMsg","getFoundReports","deleteFoundReport","delete","open1","setOpen1","findername","addFoundReports","foundReports","setFinderName","setFoundItem","setCampus","newFoundRecord","HeadEventSingle","HeadEvents","addAnnouncementHead","bgColor","getPoster","enctype","method","split","join","updateAnnouncementHead","errorAll","setErrorAll","CheckRegisteredStudents","setDeleteModal","setDeleted","handleDeleteModal","AdminIndex","OrgAddFormSuccessMsg","addAnnouncementFalse","updateAnnouncementFalse","deleteAnnouncementFalse","handleDelete","addAnnouncement","updateAnnouncement","OrgUpdateFormSuccessMsg","OrgListAdminDeleteMsg","deleteOrgDesc","openDelete","setOpenDelete","openUpdate","setOpenUpdate","setApprovedAdmin","setDeclinedAdmin","countData","getCountData","approvedFinal","declinedFinal","FilesAndReports","setIdReplacementsLoading","getIdReplacements","searchName","setSearchName","openAdded","setOpenAdded","openUpdated","setOpenUpdated","year","idreason","otherinfo","addOrgDesc","orgdesc","setDept","setOrgPresName","setOrgAdviserName","setQuantityMembers","setQuantityOfficers","setDescription","newOrgRecord","OrgUpdateFormErrorMsg","errMsg","updateOrgDesc","setAccountsLoading","OrgAccountListSuccessfulMsg","getAccntRecords","addAccntRecords","orgLoading","orgArr","orgArrFilter","datas","addIdReplacment","replacement","updateIdReplacement","AdminEventSingle","AdminEvents","searchByOrg","setSearchByOrg","LinkRouter","Router","breadcrumb","shareFiles","stud","labelId","shareFilesFalse","deleteFiles","deleteFilesFalse","setShared","rest","render","jwtToken","currentTime","now","exp","App","exact","path","Index","LostItemReports","StudentEvents","Activities","JoinActivity","OrgIndex","RequestActivityComponent","OrgNotifications","Assessment","AddAssessment","CheckRegisteredStudentsOrg","UpdateAssessment","SendOrgReports","AnnounceEvent","LostAndFound","Found","AddFound","OrgList","RequestedActivities","ActivityAssessment","AddEventFormHead","UpdateEventFormHead","AnnounceEvents","AddEventForm","UpdateEventForm","OrgListAdmin","OrgAddForm","OrgUpdateForm","OrgAccountList","OrgAccountListAddForm","RequestedActivitesAdmin","IDReplacement","IDReplacementAddForm","IDReplacementUpdateForm","ViewOrgReports","ShareFiles","ViewSharedFiles","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,kOCC9BC,EAAa,aCIpBC,EAAUC,EAAQ,KAGlBC,EAAe,CACjBC,iBAAiB,EACjBC,KAAM,GACNC,SAAS,GCTPH,EAAe,G,QCUfA,EAAe,CACjBI,MAAM,EACNC,OAAO,EACPC,QAAS,GACTH,SAAS,GCPPH,EAAe,CACpBO,OAAO,EACPC,SAAS,EACTC,SAAS,EACTC,QAAQ,GACRP,SAAS,GCPJH,EAAe,CACpBW,YAAY,EACZC,SAAU,GACVT,SAAS,GCFJH,EAAe,CACpBO,OAAO,EACPM,UAAU,EACVH,QAAS,GACTP,SAAS,GCOJH,EAAe,CAEpBc,WAAW,EACXJ,QAAS,GACTK,MAAM,GAGNC,QAAS,GACTC,gBAAgB,EAChBC,gBAAgB,EAChBC,WAAY,EAEZC,iBAAiB,EACjBC,iBAAiB,EAEjBlB,SAAS,GCfJH,EAAe,CACpBO,OAAO,EACPC,SAAS,EACTC,SAAS,GCJJT,EAAe,CACpBO,OAAO,EACPC,SAAS,EAETc,UAAU,EACVC,UAAU,EAEVC,cAAc,EAEdd,QAAU,GACVP,SAAS,GChBJH,EAAe,CACpBW,YAAY,EACZc,SAAS,EAETC,mBAAmB,EACnBC,UAAU,GCVL3B,EAAe,CACpBc,WAAW,EACXJ,QAAS,GACTP,SAAS,GCOJH,EAAe,CACpB4B,QAAQ,EACRnB,SAAS,EACToB,KAAM,GACNC,SAAU,GACVpB,QAAS,GACTP,SAAS,EACT4B,gBAAgB,EAChBC,YAAY,GCTEC,cAAgB,CAC3BC,KZFW,WAAyC,IAA/BC,EAA8B,uDAAtBnC,EAAcoC,EAAQ,uCACnD,OAAQA,EAAOC,MAEX,IDfwB,mBCgBpB,OAAO,2BACAF,GADP,IAEIlC,iBAAkBH,EAAQsC,EAAOE,SACjCpC,KAAMkC,EAAOE,UAErB,IDtBoB,eCuBhB,OAAO,2BACAH,GADP,IAEIhC,SAAS,IAEjB,QACI,OAAOgC,IYZfI,OXdW,WAAyC,IAA/BJ,EAA8B,uDAAtBnC,EAAcoC,EAAQ,uCACnD,OAAQA,EAAOC,MACX,KAAKxC,EACD,OAAOuC,EAAOE,QAClB,QACI,OAAOH,IWUfK,IVAW,WAAwC,IAA9BL,EAA6B,uDAArBnC,EAAcoC,EAAO,uCAClD,OAAOA,EAAOC,MAEV,IHfuB,kBGgBnB,OAAO,2BACAF,GADP,IAEI/B,MAAM,EACNE,QAAQ,CAAE8B,EAAOE,SAAV,mBAAsBH,EAAM7B,YAG3C,IHnB2B,sBG6B3B,IH5B6B,wBG6BzB,kCACO6B,GADP,IAEI7B,QAAS6B,EAAM7B,QAAQmC,KAAI,SAACC,EAAOC,GAAR,OAAoB,IAANA,EAAA,2BAE9BD,GAF8B,IAGjCE,OAAQR,EAAOE,UAEjBI,OAGd,IH1CwB,kBGkDxB,IH7CyB,oBG8CrB,OAAO,2BACAP,GADP,IAEI7B,QAAS8B,EAAOE,QAChBnC,SAAS,IAEjB,IHlDwB,mBGmDpB,OAAO,2BACAgC,GADP,IAEI9B,OAAO,EACPC,QAAQ,CAAE8B,EAAOE,SAAV,mBAAsBH,EAAM7B,YAE3C,IHvD2B,uBGwDvB,OAAO,2BACA6B,GADP,IAEI7B,QAAS6B,EAAM7B,QACFuC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOX,EAAOE,aAEvD,IHnEsB,iBGoElB,OAAO,2BACAH,GADP,IAEIhC,SAAS,IAEjB,QACI,OAAOgC,IU9Dfa,QTHW,WAAwC,IAA9Bb,EAA6B,uDAArBnC,EAAcoC,EAAO,uCACrD,OAAOA,EAAOC,MACb,IJDyB,cIExB,OAAO,2BACHF,GADJ,IAECzB,QAAS0B,EAAOE,QAChBnC,SAAQ,IAEV,IJNyB,cIOxB,OAAO,2BACHgC,GADJ,IAEC5B,OAAO,EACPG,QAAQ,CAAE0B,EAAOE,SAAV,mBAAsBH,EAAMzB,YAErC,IJX4B,iBIY3B,OAAO,2BACHyB,GADJ,IAEC3B,SAAQ,EACRE,QAASyB,EAAMzB,QAAQ+B,KAAI,SAACQ,EAAQN,GAAT,OAAqB,IAANA,EAC1C,CAECM,OAAQb,EAAOE,SAGdW,OAIJ,IJxB4B,iBIyB3B,OAAO,2BACHd,GADJ,IAECzB,QAASyB,EAAM7B,QACXuC,QAAO,SAAAI,GAAM,OAAIA,EAAOF,KAAOX,EAAOE,aAE5C,IJ7B4B,iBI8B3B,OAAO,2BACHH,GADJ,IAEChC,SAAS,IAEX,QACC,OAAOgC,ISpCNe,IRRW,WAAuC,IAA9Bf,EAA6B,uDAArBnC,EAAcoC,EAAO,uCACpD,OAAOA,EAAOC,MAEb,ILS4B,iBKR3B,OAAO,2BACHF,GADJ,IAECvB,SAAUwB,EAAOE,QACjBnC,SAAS,IAIX,ILEgC,qBKD/B,OAAO,2BACHgC,GADJ,IAECxB,YAAY,EACZC,SAAS,CAAEwB,EAAOE,SAAV,mBAAsBH,EAAMvB,aAEtC,ILH4B,iBKI3B,OAAO,2BACHuB,GADJ,IAEChC,SAAS,IAEV,QACC,OAAOgC,IQdPgB,cPNW,WAAwC,IAA9BhB,EAA6B,uDAArBnC,EAAcoC,EAAO,uCACrD,OAAOA,EAAOC,MACb,INYiC,sBMXhC,OAAO,2BACHF,GADJ,IAECzB,QAAS0B,EAAOE,QAChBnC,SAAS,IAEX,INOgC,qBMN/B,OAAO,2BACHgC,GADJ,IAEC5B,OAAO,EACPG,QAAQ,CAAE0B,EAAOE,SAAV,mBAAsBH,EAAMzB,YAUrC,INLmC,wBMMlC,OAAO,2BACHyB,GADJ,IAECtB,UAAU,EACVH,QAASyB,EAAMzB,QAAQ+B,KAAI,SAACQ,EAAQN,GAAT,OAAqB,IAANA,EAC1C,CACCM,OAAQb,EAAOE,SAEbW,OAGL,INfoC,yBMgBnC,OAAO,2BACHd,GADJ,IAEChC,SAAS,IAEX,QACC,OAAOgC,IOhCNiB,kBNcW,WAAuC,IAA9BjB,EAA6B,uDAArBnC,EAAcoC,EAAO,uCACpD,OAAOA,EAAOC,MAIb,IPJ2B,gBOK3B,kCACIF,GADJ,IAECpB,MAAOqB,EAAOE,QACdnC,SAAS,IAGV,IPVoC,yBOWnC,OAAO,2BACJgC,GADH,IAEAzB,QAAS0B,EAAOE,QAChBnC,SAAS,IAGV,IPhBuC,4BOiBtC,OAAO,2BACHgC,GADJ,IAECrB,WAAW,EACXJ,QAAQ,CAAE0B,EAAOE,SAAV,mBAAsBH,EAAMzB,YAIrC,IPrB4C,iCOsB3C,OAAO,2BACHyB,GADJ,IAGChB,WAAYiB,EAAOE,UAErB,IP1ByC,8BO2BxC,OAAO,2BACHH,GADJ,IAECnB,QAASoB,EAAOE,QAChBnC,SAAS,IAEX,IP/BgC,qBOgC/B,OAAO,2BACHgC,GADJ,IAEChB,WAAYiB,EAAOE,UAErB,IPnCkD,uCOoCjD,OAAO,2BACHH,GADJ,IAEClB,gBAAgB,IAElB,IPvCkD,uCOwCjD,OAAO,2BACHkB,GADJ,IAECjB,gBAAgB,IAGlB,IP3CmD,wCO4ClD,OAAO,2BACHiB,GADJ,IAECf,iBAAiB,IAGnB,IPhDmD,wCOiDlD,OAAO,2BACHe,GADJ,IAECd,iBAAiB,IAGnB,IP/DwC,6BOgEvC,OAAO,2BACHc,GADJ,IAEChC,SAAS,IAEX,QACC,OAAOgC,IMtFNkB,aLCW,WAAwC,IAA/BlB,EAA8B,uDAAtBnC,EAAcoC,EAAQ,uCACrD,OAAOA,EAAOC,MACb,IR0BoC,yBQzBnC,OAAO,2BACHF,GADJ,IAEC5B,OAAM,IAER,IRsB0C,+BQrBzC,OAAO,2BACH4B,GADJ,IAEC5B,OAAO,IAGT,IRiBuC,4BQhBtC,OAAO,2BACH4B,GADJ,IAEC3B,SAAS,IAEX,IRa6C,kCQZ5C,OAAO,2BACH2B,GADJ,IAEC3B,SAAS,IAGX,IRQuC,4BQPtC,OAAO,2BACH2B,GADJ,IAEC1B,SAAS,IAEX,IRI6C,kCQH5C,OAAO,2BACH0B,GADJ,IAEC1B,SAAS,IAGX,QACC,OAAO0B,IKpCNmB,WJMW,WAAyC,IAA/BnB,EAA8B,uDAAtBnC,EAAcoC,EAAQ,uCACtD,OAAOA,EAAOC,MACb,IT4BqC,0BS3BpC,OAAO,2BACHF,GADJ,IAEC5B,OAAO,IAET,ITwB2C,gCSvB1C,OAAO,2BACH4B,GADJ,IAEC5B,OAAO,IAGT,ITmBwC,6BSlBvC,OAAO,2BACH4B,GADJ,IAEC3B,SAAS,IAEX,ITe8C,mCSd7C,OAAO,2BACH2B,GADJ,IAEC3B,SAAS,IAGX,ITUqC,0BSTpC,OAAO,2BACH2B,GADJ,IAECb,UAAU,IAEZ,ITM2C,gCSL1C,OAAO,2BACHa,GADJ,IAECb,UAAU,IAEZ,ITEqC,0BSDpC,OAAO,2BACHa,GADJ,IAECZ,UAAU,IAEZ,ITF2C,gCSG1C,OAAO,2BACHY,GADJ,IAECZ,UAAU,IAGZ,ITPoC,yBSQnC,OAAO,2BACHY,GADJ,IAECX,cAAe,IAEjB,ITX0C,+BSYzC,OAAO,2BACHW,GADJ,IAECX,cAAa,IAEf,QACC,OAAOW,II7DNoB,mBHNW,WAAyC,IAA/BpB,EAA8B,uDAAtBnC,EAAcoC,EAAQ,uCACrD,OAAOA,EAAOC,MACb,IVqDuC,6BUpDtC,OAAO,2BACHF,GADJ,IAECxB,YAAY,IAEd,IViD6C,mCUhD5C,OAAO,2BACHwB,GADJ,IAECxB,YAAY,IAGd,QACC,OAAOwB,IGPP7B,QFdW,WAAyC,IAA/B6B,EAA8B,uDAAtBnC,EAAcoC,EAAQ,uCACrD,OAAOA,EAAOC,MACb,IXwEwB,cWvEvB,OAAO,2BACHF,GADJ,IAECzB,QAAS0B,EAAOE,QAChBnC,SAAS,IAEX,IXgEwB,cW/DvB,OAAO,2BACHgC,GADJ,IAECrB,WAAW,EACXJ,QAAQ,CAAE0B,EAAOE,SAAV,mBAAsBH,EAAMzB,YAErC,IX2D8B,oBW1D7B,OAAO,2BACHyB,GADJ,IAECrB,WAAW,IAEb,IXwD6B,mBWvD5B,OAAO,2BACHqB,GADJ,IAEChC,SAAS,IAEX,QACC,OAAQgC,IEVRqB,YDAW,WAAwC,IAA/BrB,EAA8B,uDAAtBnC,EAAcoC,EAAQ,uCACrD,OAAOA,EAAOC,MACb,IZ6DyB,cY5DxB,OAAO,2BACHF,GADJ,IAECP,QAAQ,EACRlB,QAAQ,CAAE0B,EAAOE,SAAV,mBAAsBH,EAAMzB,YAErC,IZwD+B,oBYvD9B,OAAO,2BACHyB,GADJ,IAECP,QAAQ,IAGV,IZmDgC,qBYlD/B,OAAO,2BACHO,GADJ,IAEC1B,SAAS,EACTC,QAASyB,EAAMzB,QACTmC,QAAO,SAAAI,GAAM,OAAIA,EAAOF,KAAOX,EAAOE,aAE9C,IZ6CsC,2BY5CrC,OAAO,2BACHH,GADJ,IAEC1B,SAAS,IAGX,IZ0CwB,aYzCvB,OAAO,2BACH0B,GADJ,IAECzB,QAAS0B,EAAOE,QAChBnC,SAAS,IAEX,IZkCuC,4BYjCtC,OAAO,2BACHgC,GADJ,IAECL,SAAUM,EAAOE,QACjBP,gBAAgB,IAElB,IZ6BkC,uBY5BjC,OAAO,2BACHI,GADJ,IAECN,KAAMO,EAAOE,QACbN,YAAY,IAGd,IZwBkC,uBYvBjC,OAAO,2BACHG,GADJ,IAEChC,SAAS,IAEX,IZoB0C,+BYnBzC,OAAO,2BACHgC,GADJ,IAECJ,gBAAgB,IAElB,IZgBsC,2BYfrC,OAAO,2BACHI,GADJ,IAECH,YAAY,IAGd,QACC,OAAOG,MErFJsB,EAAa,CAACC,KAYLC,EATDC,YACVC,EALiB,GAOjBC,YACIC,IAAe,WAAf,EAAmBN,K,mECAZO,EAVM,SAAAC,GACbA,EAEAC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,e,kBCyBFC,EAAiB,SAAAC,GAC1B,MAAO,CAAElC,KhBhCmB,mBgBgCKC,QAASiC,IASjCC,EAAa,SAAAC,GAAC,OAAI,SAAAC,GAE3BC,aAAaC,WAAW,YAExBZ,GAAa,GAEbU,EAASJ,EAAe,O,kNCT5B,SAASO,KACL,OACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACnD,kBACD,kBAACC,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,KAA3B,0CAEI,KACH,IAAIC,MAAOC,cACX,KAMb,IAAMC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,GAEdC,MAAO,CACHC,UAAW,GACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,KAAM,CACFC,MAAO,OACPL,UAAW,IAEdM,MAAO,CACJC,SAAU,KAEdC,QAAS,CACTC,OAAQb,EAAMc,QAAQC,KACtBC,SAAU,YAGXC,eAAgB,CACfzB,MAAO0B,IAAM,KACbF,SAAU,WACVG,IAAK,MACLC,KAAM,MACNhB,WAAY,GACZiB,YAAa,QAgTjB,IAKeC,gBALS,SAAA3E,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,UAKd,CAAEwE,UD9XmB,SAAAC,GAAQ,OAAI,SAAAtC,GACjCR,IAAM+C,KAAK,mBAAoBD,GAC1BE,MAAK,SAAAC,GAAO,IAGDlD,EAAUkD,EAAIC,KAAdnD,MACRU,aAAa0C,QAAQ,WAAYpD,GAEjCD,EAAaC,GAEb,IAAMM,EAAU+C,IAAWrD,GAC3BS,EAASJ,EAAeC,OAE3BgD,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CAGnBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,aC2WnBN,EAjTf,SAAgBY,GAAQ,IAAD,EAGOC,mBAAS,CAC/BC,SAAU,GACVC,SAAU,KALK,mBAGZC,EAHY,KAGLC,EAHK,OAQSJ,mBAAS,IARlB,mBAQZpF,EARY,KAQJyF,EARI,OAUqBL,oBAAS,GAV9B,mBAUZM,EAVY,KAUEC,EAVF,OAWUP,oBAAS,GAXnB,mBAWZQ,EAXY,KAWJC,EAXI,OAaOT,mBAAS,IAbhB,mBAaZU,EAbY,KAaLC,EAbK,OAcWX,oBAAS,GAdpB,mBAcHY,GAdG,aAeOZ,oBAAS,GAfhB,mBAeLa,GAfK,aAgBmBb,oBAAS,GAhB5B,mBAgBZc,EAhBY,KAgBCC,EAhBD,KAsBbC,EAA0B,SAAAlE,GAC5ByD,GAAiBD,IAGfW,EAA0B,SAAAC,GAC5BA,EAAEC,kBAGAC,EAAe,SAAAC,GAAI,OAAI,SAAAH,GACzBd,EAAS,2BAAID,GAAL,kBAAakB,EAAOH,EAAEI,OAAOC,WAezCC,qBAAU,SAAA1E,GACNP,IAAMkF,IAAI,eACTlC,MAAK,SAAAC,GACFmB,EAASnB,EAAIC,MACbmB,GAAW,MAEdhB,OAAM,SAAAC,GACCA,EAAIC,UACNe,GAAS,QAGjB,IAEFW,qBAAU,SAAA1E,GACHiD,EAAMxF,KAAKjC,kBACoB,UAAzByH,EAAMxF,KAAKhC,KAAKmC,MACjBqF,EAAM2B,QAAQC,KAAK,OAEM,SAAzB5B,EAAMxF,KAAKhC,KAAKmC,MAChBqF,EAAM2B,QAAQC,KAAK,MAEM,QAAzB5B,EAAMxF,KAAKhC,KAAKmC,MAChBqF,EAAM2B,QAAQC,KAAK,QAEM,YAAzB5B,EAAMxF,KAAKhC,KAAKmC,MAChBqF,EAAM2B,QAAQC,KAAK,UAG7B,CAAC5B,EAAMxF,KAAKjC,kBAEdkJ,qBAAU,SAAA1E,GACHiD,EAAMnF,SACLyF,EAAUN,EAAMnF,QAChBmG,GAAe,MAErB,CAAChB,EAAMnF,SAEL,IAAMgH,EAAUjE,KAGVkE,EAAOnB,EAIb,OACI,yBAAKoB,UAAWF,EAAQ9D,MACpB,kBAACiE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjC,kBAACC,EAAA,EAAD,MADJ,IAEI,yBAAKJ,UAAWF,EAAQ5D,OAEpB,uBAAGR,KAAK,IAAI2E,QA9Ed,SAAArF,GACd2D,GAAYD,KA+EYA,EACG,yBAAK4B,IAAKC,IAAaC,IAAI,mBAC3B,yBAAKF,IAAKG,IAAWD,IAAI,oBAIpC,kBAACnF,EAAA,EAAD,CAAY6E,UAAU,KAAK5E,QAAQ,MAAnC,WAIA,0BAAM0E,UAAWF,EAAQvD,KAAMmE,YAAU,EAACC,SA1E7C,SAAAvB,GACbA,EAAEC,iBACFJ,GAAgBD,GAEhB,IAAM4B,EAAY,CACdzC,SAAUE,EAAMF,SAChBC,SAAUC,EAAMD,UAGpBH,EAAMX,UAAUsD,KAmEQ9H,EAAOqF,UAAYrF,EAAO+H,aAE1B,kBAACC,EAAA,EAAD,CACAlE,OAAO,SACPmE,OAAK,EACLC,UAAQ,EACRC,WAAS,EACT3H,GAAG,WACH4H,MAAM,WACNC,KAAK,WACLC,WAAS,EACTC,SAAU/B,EAAa,YACvBgC,WAAYxI,EAAOqF,UAAYrF,EAAO+H,eAGtC,kBAACC,EAAA,EAAD,CACAlE,OAAO,SACPoE,UAAQ,EACRC,WAAS,EACT3H,GAAG,WACH4H,MAAM,WACNC,KAAK,WACLC,WAAS,EACTC,SAAU/B,EAAa,cAKvBxG,EAAOsF,UAAYtF,EAAOyI,kBAE1B,kBAACT,EAAA,EAAD,CACAC,OAAK,EACDnE,OAAO,SACPoE,UAAQ,EACRC,WAAS,EACTE,KAAK,WACLD,MAAM,WACN5H,GAAG,WACHV,KAAM4F,EAAe,OAAS,WAC9BiB,MAAOpB,EAAMD,SACbiD,SAAU/B,EAAa,YACvBkC,WAAY,CACRC,aACI,kBAACC,GAAA,EAAD,CAAgB3E,SAAS,OACrB,kBAAC4E,GAAA,EAAD,CACIC,KAAK,MACLC,aAAW,6BACXxB,QAASnB,EACT4C,YAAa3C,GAEZX,EAAe,kBAAC,KAAD,MAAoB,kBAAC,KAAD,SAKpD8C,WAAYxI,EAAOsF,UAAYtF,EAAOyI,oBAG1C,kBAACT,EAAA,EAAD,CACIlE,OAAO,SACPoE,UAAQ,EACRC,WAAS,EACTE,KAAK,WACLD,MAAM,WACN5H,GAAG,WACHV,KAAM4F,EAAe,OAAS,WAC9BiB,MAAOpB,EAAMD,SACbiD,SAAU/B,EAAa,YACvBkC,WAAY,CACRC,aACI,kBAACC,GAAA,EAAD,CAAgB3E,SAAS,OACrB,kBAAC4E,GAAA,EAAD,CACIC,KAAK,MACLC,aAAW,6BACXxB,QAASnB,EACT4C,YAAa3C,GAEZX,EAAe,kBAAC,KAAD,MAAoB,kBAAC,KAAD,WAO5D,6BAUA,yBAAKwB,UAAWF,EAAQnD,SAExB,kBAACoF,EAAA,EAAD,CACInJ,KAAK,SACLqI,WAAS,EACT3F,QAAQ,WACRC,MAAM,UACNyE,UAAWF,EAAQkC,OACnBC,QAASjD,GAERA,EACG,kBAAC,WAAD,KACA,kBAACkD,EAAA,EAAD,CAAkBC,KAAM,GAAInC,UAAWF,EAAQ9C,iBAD/C,cAIE,WAId,6BAEJ,kBAACoF,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACZ,kBAAClH,GAAD,OAGF,kBAACC,EAAA,EAAD,CAAY6E,UAAU,KAAK5E,QAAQ,MAAnC,2BAIF,kBAACiH,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,OAClB,kBAAC+F,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,iBACA,kBAACA,GAAA,EAAD,CAAWlH,MAAM,SAAjB,YACA,kBAACkH,GAAA,EAAD,CAAWlH,MAAM,SAAjB,eACA,kBAACkH,GAAA,EAAD,CAAWlH,MAAM,SAAjB,YAIJ,kBAACmH,GAAA,EAAD,KACG5C,EAAK/G,KAAI,SAAA4J,GAAG,OACX,kBAACH,GAAA,EAAD,CAAUI,IAAKD,EAAItJ,IACjB,kBAACoJ,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIzE,UAEP,kBAACuE,GAAA,EAAD,CAAWlH,MAAM,SAASoH,EAAIG,aAC9B,kBAACL,GAAA,EAAD,CAAWlH,MAAM,SAEF,YAAboH,EAAIhK,KAEJ,UAEA,kBAAC,WAAD,KAEiB,QAAbgK,EAAIhK,KAEJ,wBAEA,kBAAC,WAAD,KAEqB,SAAbgK,EAAIhK,KAEJ,WAEA,eAOd,kBAAC8J,GAAA,EAAD,CAAWlH,MAAM,SAASoH,EAAII,oB,uPClV1DC,G,oDACF,WAAYhF,GAAO,IAAD,+BACd,cAAMA,IACDiF,YAAc,EAAKA,YAAYC,KAAjB,iBAEnB,EAAKzK,MAAQ,CACT0K,MAAM,GALI,E,2DAUdC,KAAKC,SAAS,CACVF,MAAOC,KAAK3K,MAAM0K,S,+BAKFC,KAAKpF,MAAjB6B,QACSuD,KAAK3K,MAAd0K,KACYC,KAAKH,YACzB,OACI,yBAAKlD,UAAWqD,KAAKpF,MAAMsF,OACtB,kBAACC,GAAA,EAAD,KAGD,kBAACC,GAAA,EAAD,CAAUC,QAAM,EAACxD,UAAU,IAAIxE,KAAK,OAChC,kBAACiI,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,UAI1B,kBAACJ,GAAA,EAAD,CAAUC,QAAM,EAACxD,UAAU,IAAIxE,KAAK,wBAChC,kBAACiI,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBAI1B,kBAACJ,GAAA,EAAD,CAAUC,QAAM,EAACxD,UAAU,IAAIxE,KAAK,KAChC,kBAACiI,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,2BAI1B,kBAACJ,GAAA,EAAD,CAAUC,QAAM,EAACxD,UAAU,IAAIxE,KAAK,+BAChC,kBAACiI,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,aAK5B,kBAACC,GAAA,EAAD,MAEA,kBAACN,GAAA,EAAD,KAEA,kBAACC,GAAA,EAAD,CAAUC,QAAM,EAACxD,UAAU,IAAIxE,KAAK,kBAE1B,kBAACiI,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,iBAoBhC,kBAACC,GAAA,EAAD,MAEA,kBAACN,GAAA,EAAD,KAEM,kBAACC,GAAA,EAAD,CAAUC,QAAM,EAACrD,QAASgD,KAAKpF,MAAM8F,kBACjC,kBAACJ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,wBAG1B,kBAACJ,GAAA,EAAD,CAAUO,MAAO,CAAEzI,MAAO,OAASmI,QAAM,EAACrD,QAASgD,KAAKpF,MAAMoC,SAC1D,kBAACsD,GAAA,EAAD,KACI,kBAAC,KAAD,CAAsBpI,MAAM,WAEhC,kBAACqI,GAAA,EAAD,CACAC,QAAQ,kB,GAvGHI,aAgHdC,iBAtHA,SAAAnI,GAAK,MAAK,CACrBoI,OAAQ,CACJC,YAAarI,EAAMc,QAAQ,OAoHpBqH,CAAmBjB,ICpHrBoB,GAAe,SAAArJ,GAC3B,MAAO,CAAEpC,KnB6E0B,yBmB1EvB0L,GAAuB,SAAAtJ,GACnC,MAAO,CAAEpC,KnB0EkC,iCmBvE/B2L,GAAkB,SAAAvJ,GAC9B,MAAO,CAAEpC,KnBuE8B,6B,8BoBjDxC,IAIM4L,GAAqB,CAAEC,qBDmBO,SAAAzJ,GAAC,OAAI,SAAAC,GACxCA,EAASqJ,IACT7J,IAAMkF,IAAI,6BACTlC,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnBiBuC,4BmBhBvCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAIA,QCxBAV,gBANS,SAAA3E,GAAK,MAAK,CACjCqB,YAAarB,EAAMqB,eAKoByK,GAAzBnH,EA7Cf,SAA6BY,GAE5ByB,qBAAU,SAAA1E,GACTiD,EAAMwG,yBACL,IAEF,IAAM1E,EAAO9B,EAAMlE,YAAY1B,SAASqM,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAE1F,OACC,kBAACC,GAAA,EAAD,CAAQC,QAAS9G,EAAM+G,YACvBC,kBAAgB,sBAChB7B,KAAMnF,EAAMmF,MAEX,kBAAC8B,GAAA,EAAD,CAAa5L,GAAG,uBAAhB,gCACD,kBAACkK,GAAA,EAAD,KAEEvF,EAAMlE,YAAYzB,eAElB,kBAACmL,GAAA,EAAD,KACU,kBAACG,GAAA,EAAD,CAAcC,QAAQ,gBAGzB9D,EAAK/G,KAAI,SAAA4J,GAAG,OACX,kBAACa,GAAA,EAAD,CAAUZ,IAAKD,EAAItJ,IAChB,kBAAC6L,GAAA,EAAD,KACE,uBAAGzJ,KAAMkH,EAAIwC,KAAM5F,OAAO,UACV,kBAAC,KAAD,QAGlB,kBAACoE,GAAA,EAAD,CAAcC,QAASjB,EAAIyC,oB,oICcpCC,GAAa,SAAArH,GACf,OAAO,kBAACsH,GAAA,EAAD,eAAOC,UAAU,MAASvH,KAI/BwH,G,oDACF,WAAYxH,GAAQ,IAAD,+BACf,cAAMA,IAiCVyH,aAAe,SAACC,EAAMvC,GAAP,OAAgB,WAC3B,EAAKE,SAAL,eACKqC,EAAOvC,MAjCZ,EAAKwC,gBAAkB,EAAKA,gBAAgBzC,KAArB,iBACvB,EAAK0C,mBAAqB,EAAKA,mBAAmB1C,KAAxB,iBAE1B,EAAK2C,oBAAsB,EAAKA,oBAAoB3C,KAAzB,iBAC3B,EAAK4C,mBAAqB,EAAKA,mBAAmB5C,KAAxB,iBAE1B,EAAK6C,cAAgB,EAAKA,cAAc7C,KAAnB,iBACrB,EAAK8C,mBAAqB,EAAKA,mBAAmB9C,KAAxB,iBAC1B,EAAK+C,yBAA2B,EAAKA,yBAAyB/C,KAA9B,iBAChC,EAAKgD,iBAAmB,EAAKA,iBAAiBhD,KAAtB,iBACxB,EAAK6B,YAAc,EAAKA,YAAY7B,KAAjB,iBACnB,EAAKY,iBAAmB,EAAKA,iBAAiBZ,KAAtB,iBAGxB,EAAKuC,aAAe,EAAKA,aAAavC,KAAlB,iBAEpB,EAAKzK,MAAQ,CAET0N,SAAU,KAEVC,iBAAkB,KAElBC,aAAa,EACbC,eAAe,EAGfC,OAAO,GA7BI,E,gEAwCApH,GACfiE,KAAKC,SAAS,CAAE8C,SAAUhH,EAAEqH,kB,wCAI5BpD,KAAKC,SAAS,CAAE8C,SAAU,S,yCAGXhH,GACfiE,KAAKC,SAAS,CAAE+C,iBAAkBjH,EAAEqH,kB,4CAIpCpD,KAAKC,SAAS,CAAE+C,iBAAkB,S,2CAKlChD,KAAKC,SAAS,CAAEgD,aAAa,IAC7BjD,KAAKC,SAAS,CAAE+C,iBAAkB,S,iDAIlChD,KAAKC,SAAS,CAAEgD,aAAa,M,sCAK7BjD,KAAKpF,MAAMlD,e,yCAIXsI,KAAKC,SAAS,CAAE+C,iBAAkB,OAClChD,KAAKC,SAAS,CAAEiD,eAAe,M,oCAI/BlD,KAAKC,SAAS,CAAEiD,eAAe,M,yCAI/BlD,KAAKC,SAAS,CAAEiD,eAAe,IAC/BlD,KAAKC,SAAS,CAAE+C,iBAAkB,S,+BAG5B,IACEvG,EAAYuD,KAAKpF,MAAjB6B,QADH,EAE8DuD,KAAK3K,MAAhE0N,EAFH,EAEGA,SAAUC,EAFb,EAEaA,iBAAkBC,EAF/B,EAE+BA,YAAaC,EAF5C,EAE4CA,cAC3CG,EAAaC,QAAQP,GACrBQ,EAAiBD,QAAQN,GAGzBQ,EACF,kBAAC,KAAD,CACIT,SAAUA,EACVU,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,SAChD5D,KAAMsD,EACN3B,QAAS1B,KAAKuC,iBAEd,kBAACsB,GAAA,EAAD,CAAU7G,QAASgD,KAAKuC,iBAAxB,gBACA,kBAACsB,GAAA,EAAD,CAAU7G,QAASgD,KAAKuC,iBAAxB,iBAIFuB,EACF,kBAAC,KAAD,CACIf,SAAUC,EACVS,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,SAChD5D,KAAMwD,EACN7B,QAAS1B,KAAKyC,qBAEd,kBAACoB,GAAA,EAAD,CAAU7G,QAASgD,KAAK8C,kBAAxB,uBACA,kBAACe,GAAA,EAAD,CAAU7G,QAASgD,KAAK4C,mBAAoBjC,MAAO,CAAEzI,MAAO,QAA5D,YAIR,OACI,yBAAKyE,UAAWF,EAAQ9D,MAEpB,kBAAC,GAAD,CAAqBgJ,YAAa3B,KAAK2B,YAAa5B,KAAMmD,IAG1D,kBAACzB,GAAA,EAAD,CACI1B,KAAMkD,EACNc,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAAS1B,KAAK6C,yBACdjB,kBAAgB,2BAChBqC,mBAAiB,kCAEjB,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,eAEL,kBAACiO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,gCAIJ,kBAACmO,GAAA,EAAD,KACI,kBAAC1F,EAAA,EAAD,CAAQ1B,QAASgD,KAAK6C,yBAA0B5K,QAAQ,WAAWC,MAAM,WAAzE,UAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAASgD,KAAK2C,cAAe1K,QAAQ,WAAWC,MAAM,aAA9D,YAQR,kBAACmM,GAAA,EAAD,CAAQ3K,SAAS,UACb,kBAAC4K,GAAA,EAAD,CAAS3D,MAAO,CAAE4D,WAAY,YAC1B,kBAACvM,EAAA,EAAD,CAAY2E,UAAWF,EAAQ+H,MAAOvM,QAAQ,KAAKC,MAAM,UAAUuM,QAAM,GAAzE,kBAIA,yBAAK9H,UAAWF,EAAQiI,gBACpB,kBAAChG,EAAA,EAAD,CAAQxG,MAAM,UAAUG,KAAK,OAA7B,QACA,kBAACqG,EAAA,EAAD,CAAQxG,MAAM,UAAUG,KAAK,wBAA7B,cAIA,kBAACqG,EAAA,EAAD,CAAQxG,MAAM,UAAUG,KAAK,cAA7B,UACA,kBAACqG,EAAA,EAAD,CACIiG,YAAWtB,EAAa,uBAAoBuB,EAC5CC,gBAAc,OAEd3M,MAAM,UACNG,KAAK,kBALT,cASA,kBAACqG,EAAA,EAAD,CACIxG,MAAM,UACNyM,YAAWpB,EAAiB,uBAAoBqB,EAChDC,gBAAc,OACd7H,QAASgD,KAAK0C,oBAEd,kBAAC,KAAD,QAKR,yBAAK/F,UAAWF,EAAQqI,eACpB,kBAACpG,EAAA,EAAD,CACI1B,QAASgD,KAAKqC,aAAa,SAAQ,GAAOnK,MAAM,WAChD,kBAAC,KAAD,QAIR,kBAAC6M,GAAA,EAAD,CAAQC,OAAO,QAAQjF,KAAMC,KAAK3K,MAAM8N,MACxCzB,QAAS1B,KAAKqC,aAAa,SAAQ,IAEnC,yBACI4C,SAAU,EACVC,KAAK,SAKLC,UAAWnF,KAAKqC,aAAa,SAAS,IAEtC,kBAAC,GAAD,CAAgBnC,MAAOzD,EAAQ2I,KAAMpI,QAASgD,KAAK4C,mBAAoBlC,iBAAkBV,KAAKU,uBAQzG8C,EACAM,O,GAtNIlD,aAwON5G,gBAJS,SAAA3E,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,QAGwB,CAAEsC,cAA3BsC,CAAyC6G,cA3QzC,SAAAnI,GAAK,YAAK,CACrBC,KAAM,CACFQ,MAAO,QAEXqL,OAAK,GACDzL,QAAS,QADR,cAEAL,EAAM2M,YAAYC,GAAG,MAAQ,CAC1BvM,QAAS,UAHZ,yBAKS,GALT,GAOL2L,eAAe,aACX3L,QAAS,QACRL,EAAM2M,YAAYC,GAAG,MAAQ,CAC1BvM,QAAS,SAGjB+L,cAAc,aACV/L,QAAS,QACRL,EAAM2M,YAAYC,GAAG,MAAQ,CAC1BvM,QAAS,SAKjBqM,KAAK,CACDjM,MAAO,QAiPyC0H,CAAmBuB,K,yECzP3E,SAASmD,GAAa3K,GAClB,OAAO,kBAACwF,GAAA,EAAD,eAAUC,QAAM,EAACxD,UAAU,KAAQjC,I,IAGxC4K,G,2KAEQ,IACE/I,EAAYuD,KAAKpF,MAAjB6B,QACR,OACI,6BACI,kBAAC,GAAD,MACA,kBAACG,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAC/B,kBAACC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,IAC3C,kBAAC3N,EAAA,EAAD,CAAYC,QAAQ,KAAK4E,UAAU,MAAnC,gCAGI,6BACA,kBAAC7E,EAAA,EAAD,CAAY6E,UAAU,KAAtB,yCAIJ,yBAAKF,UAAWF,EAAQ9D,MACpB,kBAACwH,GAAA,EAAD,CAAMtD,UAAU,OAEZ,kBAAC0I,GAAD,CAAclN,KAAK,wBACf,kBAACiI,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,2CAY1B,kBAAC+E,GAAD,CAAclN,KAAK,cACnB,kBAACiI,GAAA,EAAD,KACQ,kBAAC,KAAD,OAER,kBAACC,GAAA,EAAD,CAAcC,QAAQ,6BAGtB,kBAAC+E,GAAD,CAAclN,KAAK,gBACnB,kBAACiI,GAAA,EAAD,KACQ,kBAAC,KAAD,OAER,kBAACC,GAAA,EAAD,CAAcC,QAAQ,qDAGtB,kBAAC+E,GAAD,CAAclN,KAAK,gBACnB,kBAACiI,GAAA,EAAD,KACQ,kBAAC,KAAD,OAER,kBAACC,GAAA,EAAD,CAAcC,QAAQ,yEAI9B,wC,GA1DWI,aA2EZC,iBAnGA,SAAAnI,GAAK,MAAK,CACrBC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,WAoFF8H,CAAmB2E,I,yKC1G5BU,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCKK,G,2KAtBX,OACE,6BACE,kBAACC,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAACgF,GAAD,CACEhF,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAQ,UACRiP,QAAQ,8B,GAhBKS,IAAM/G,W,iHCtCzBgH,G,oDACF,WAAYhN,GAAO,IAAD,+BACd,cAAMA,IAED+G,YAAc,EAAKA,YAAY7B,KAAjB,iBAEnB,EAAKzK,MAAQ,CAAG0K,MAAM,GALR,E,iEASXC,KAAKpF,MAAMlF,IAAIpC,MACd0M,KAAKC,SAAS,CACVF,MAAM,M,kCAKN8H,EAAOC,GACD,cAAXA,GAIH9H,KAAKC,SAAS,CACVF,MAAM,M,+BAIL,IACGtD,EAAYuD,KAAKpF,MAAjB6B,QACAsD,EAASC,KAAK3K,MAAd0K,KACF4B,EAAc3B,KAAK2B,YAEzB,OACI,6BAEI,kBAAC,GAAD,CAAY5B,KAAMA,EAAM2B,QAASC,IAGrC,kBAAC,GAAD,MAEI,kBAAC/E,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAC3B,kBAACC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,IAGvC,kBAAC/I,EAAA,EAAD,CAAWD,UAAWF,EAAQsL,SAAUjL,SAAS,MAC7C,kBAACkL,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,EAAG0O,QAAQ,UAE5B,kBAACF,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACzB,kBAACC,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MACtB,kBAACC,GAAA,EAAD,CACI7L,UAAWF,EAAQgM,UACnBC,MAAOC,KACPnE,MAAM,gBAGV,kBAACoE,GAAA,EAAD,CAAajM,UAAWF,EAAQoM,aAC5B,kBAAC7Q,EAAA,EAAD,CAAY8Q,cAAY,EAAC7Q,QAAQ,KAAK4E,UAAU,MAAhD,mBAGA,kBAAC7E,EAAA,EAAD,2JAIJ,kBAAC+Q,GAAA,EAAD,KACI,kBAACrK,EAAA,EAAD,CAAQrG,KAAK,sCAAsCyG,KAAK,QAAQ7G,QAAQ,WAAWC,MAAM,aAAzF,oBAQhB,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACrB,kBAACC,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MACtB,kBAACC,GAAA,EAAD,CACI7L,UAAWF,EAAQgM,UACnBC,MAAOpV,KACPkR,MAAM,gBAEV,kBAACoE,GAAA,EAAD,CAAajM,UAAWF,EAAQoM,aAC5B,kBAAC7Q,EAAA,EAAD,CAAY8Q,cAAY,EAAC7Q,QAAQ,KAAK4E,UAAU,MAAhD,0BAGA,kBAAC7E,EAAA,EAAD,6KAIJ,kBAAC+Q,GAAA,EAAD,KACG,kBAACrK,EAAA,EAAD,CAAQrG,KAAK,mCAAmCyG,KAAK,QAAQ7G,QAAQ,WAAWC,MAAM,aAAtF,6BASf,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACtB,kBAACC,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MACrB,kBAACC,GAAA,EAAD,CACI7L,UAAWF,EAAQgM,UACnBC,MAAOnV,KACPiR,MAAM,gBAEV,kBAACoE,GAAA,EAAD,CAAajM,UAAWF,EAAQoM,aAC5B,kBAAC7Q,EAAA,EAAD,CAAY8Q,cAAY,EAAC7Q,QAAQ,KAAK4E,UAAU,MAAhD,2BAGA,kBAAC7E,EAAA,EAAD,8LAIJ,kBAAC+Q,GAAA,EAAD,KACA,kBAACrK,EAAA,EAAD,CAAQrG,KAAK,wCAAwCyG,KAAK,QAAQ7G,QAAQ,WAAWC,MAAM,aAA3F,uC,GAjHV0I,aA4InB5G,gBAJS,SAAA3E,GAAK,MAAK,CAC9BK,IAAIL,EAAMK,OAGCsE,CAEb6G,cA3Ka,SAAAnI,GAAK,MAAK,CACrBC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjCX,MAAO,CACHmQ,UAAW,SACXC,OAAQ,KAEZlB,SAAU,CACNtC,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,IAE/B+O,KAAM,CACJU,OAAQ,OACRlQ,QAAS,OACTC,cAAe,UAEjByP,UAAW,CACThD,WAAY,UAEdoD,YAAa,CACXjQ,SAAU,MAoJhBiI,CAAmB+G,KCzJRsB,GAAmB,SAACjT,EAAIqE,GAAL,OAAc,SAAA1C,GAC1CR,IAAM+C,KAAN,mCAAuClE,GAAMqE,GAC5CF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CAClBrC,KzBjC2B,sByBkC3BC,QAAQ6E,EAAIC,UAEfG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACnBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,YAMjB6O,GAAqB,SAAClT,EAAIqE,GAAL,OAAc,SAAA1C,GAC5CR,IAAM+C,KAAN,qCAAyClE,GAAMqE,GAC9CF,MAAK,SAAAC,GAAG,OAAKzC,EAAS,CAClBrC,KzB9C4B,wByB+C5BC,QAAS6E,EAAIC,UAEjBG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACnBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,YAuCjB8O,GAAmB,SAAAzR,GAC5B,MAAO,CAAEpC,KzB7FiB,mB,sE0BwDxB8T,G,oDACF,WAAYzO,GAAO,IAAD,+BACd,cAAMA,IACD0O,aAAe,EAAKA,aAAaxJ,KAAlB,iBACpB,EAAK7D,aAAe,EAAKA,aAAa6D,KAAlB,iBACpB,EAAKyJ,aAAe,EAAKA,aAAazJ,KAAlB,iBACpB,EAAK0J,oBAAsB,EAAKA,oBAAoB1J,KAAzB,iBAC3B,EAAK2J,YAAc,EAAKA,YAAY3J,KAAjB,iBAEnB,EAAKzK,MAAQ,CAETyI,KAAM,GACNb,IAAK,GACLyM,GAAI,GACJ/J,OAAQ,GACRgK,WAAY,GACZC,OAAO,GACPC,QAAQ,GACRC,QAAQ,GAERC,SAAS,GACTC,YAAa,GACbC,iBAAiB,EACjBC,oBAAoB,EAEpBC,aAAc,GAEd1U,OAAQ,IA1BE,E,2DA+BJ,IAAD,OACT2B,IAAMkF,IAAI,iBACTlC,MAAK,SAAAC,GACF,EAAK4F,SAAS,CAEV8J,SAAU1P,EAAIC,KAEd2P,iBAAiB,OAGxBxP,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,Q,uCAGb,IAAD,OACZtD,IAAMkF,IAAI,oBACTlC,MAAK,SAAAC,GACF,EAAK4F,SAAS,CAEV+J,YAAa3P,EAAIC,KACjB4P,oBAAoB,OAG3BzP,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,Q,0CAI3BsF,KAAKyJ,cACLzJ,KAAKsK,iBAEFtK,KAAKpF,MAAMlF,IAAIpC,MACjB0M,KAAKpF,MAAM2B,QAAQC,KAAK,sC,0CAIRT,GAChBiE,KAAKC,SAAS,CACVkK,aAAcpO,EAAEI,OAAOC,U,mCAIlBL,GACTiE,KAAKC,SAAL,eACKlE,EAAEI,OAAO2B,KAAO/B,EAAEI,OAAOC,U,mCAIrBL,GACTA,EAAEC,iBACFuO,OAAOC,SAASnS,KAAO,yB,mCAGd0D,GACTA,EAAEC,iBADS,MAI6DgE,KAAK3K,MAEvEoV,EAAgB,CAClB3M,KAPO,EAIHA,KAGEb,IAPC,EAIGA,IAGCyM,GAPJ,EAIQA,GAGA/J,OAPR,EAIYA,OAGIgK,WAPhB,EAIoBA,WAGQC,OAP5B,EAIgCA,OAGIC,QAPpC,EAIwCA,QAGKC,QAP7C,EAIiDA,SAM5D9J,KAAKpF,MAAM8P,cAAcD,K,+BAezB,IAAIE,EAC2B,UAA5B3K,KAAK3K,MAAM8U,eACVQ,EACA,kBAAClN,EAAA,EAAD,CACAE,UAAQ,EACR1H,GAAG,UACH4H,MAAM,iBACNC,KAAK,UACL1B,MAAO4D,KAAK3K,MAAMyU,QAClB9L,SAAUgC,KAAK/D,aACf1G,KAAK,SACLoH,UAAWqD,KAAKpF,MAAMgQ,YACtBC,gBAAiB,CACfC,QAAQ,GAEVvR,OAAO,YAIoB,UAA5ByG,KAAK3K,MAAM8U,eACVQ,EACA,kBAAClN,EAAA,EAAD,CACIE,UAAQ,EACR1H,GAAG,UACH6H,KAAK,UACLD,MAAM,SACND,WAAS,EACTjB,UAAWqD,KAAKpF,MAAMgQ,YACtBxO,MAAO4D,KAAK3K,MAAMyU,QAClBiB,aAAa,UACbxV,KAAK,QACLyI,SAAUgC,KAAK/D,gBAhCnB,IAoCIQ,EAAYuD,KAAKpF,MAAjB6B,QApCJ,EAqCwGuD,KAAK3K,MAAzGyI,EArCJ,EAqCIA,KAAMb,EArCV,EAqCUA,IAAKyM,EArCf,EAqCeA,GAAI/J,EArCnB,EAqCmBA,OAAQgK,EArC3B,EAqC2BA,WAAYC,EArCvC,EAqCuCA,OAAQC,EArC/C,EAqC+CA,QAASI,EArCxD,EAqCwDA,gBAAiBC,EArCzE,EAqCyEA,mBAAoBzU,EArC7F,EAqC6FA,OAC3F6T,EAAetJ,KAAKsJ,aACpBrN,EAAe+D,KAAK/D,aACpBsN,EAAevJ,KAAKuJ,aAE1B,OACI,yBAAK5M,UAAWF,EAAQ9D,MAEpB,0BAAMgE,UAAWF,EAAQuO,QACrB,kBAACtF,GAAA,EAAD,CAAO/I,UAAWF,EAAQ5D,OAEtB,kBAAC,KAAD,CAAWmE,QAASsM,EAAc3M,UAAWF,EAAQwO,YAErD,kBAACjT,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,yBAGA,6BACA,kBAACH,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAIA,0BAAMoF,YAAU,EAACC,SAAUiM,GAE3B,kBAACvB,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAGzB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIE,GAAI,IACf,kBAAC5K,EAAA,EAAD,CACIxH,GAAG,OACH6H,KAAK,OACL1B,MAAO0B,EACPD,MAAM,YACND,WAAS,EACTmN,aAAa,OACb/M,SAAU/B,IAEjB,0BAAM0E,MAAO,CAAEzI,MAAO,QAClBzC,EAAOqI,OAKR,kBAACkK,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACvB,kBAAC3K,EAAA,EAAD,CACIxH,GAAG,MACH6H,KAAK,MACL1B,MAAOa,EACPY,MAAM,UACND,WAAS,EACTmN,aAAa,MACb/M,SAAU/B,IAElB,0BAAM0E,MAAO,CAAEzI,MAAO,QACjBzC,EAAOwH,MAIR,kBAAC+K,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GAEvB,kBAAC8C,GAAA,EAAD,CAAavO,UAAWF,EAAQmO,aACxB,kBAACO,GAAA,EAAD,CAAYC,QAAQ,aAApB,gBACA,kBAACC,GAAA,EAAD,CACIjP,MAAOsN,EACP1L,SAAU/B,EACVqP,WAAY,CACZxN,KAAM,KACN7H,GAAI,cAGJ,kBAAC4N,GAAA,EAAD,CAAUzH,MAAO,OAAjB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAO,OAAjB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAO,OAAjB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAO,OAAjB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAO,OAAjB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAO,mBAAjB,qBAGhB,0BAAMuE,MAAO,CAAEzI,MAAO,QACjBzC,EAAOiU,KAKR,kBAAC1B,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IAEX,kBAAC+C,GAAA,EAAD,CAAavO,UAAWF,EAAQmO,aAEhC,kBAACO,GAAA,EAAD,CAAYC,QAAQ,iBAApB,UAEI,kBAACC,GAAA,EAAD,CACIjP,MAAOuD,EACP3B,SAAU/B,EACVqP,WAAY,CACZxN,KAAM,SACN7H,GAAI,kBAIHgU,EAED,kBAACpG,GAAA,EAAD,MAEA7D,KAAK3K,MAAM0U,SAASpU,KAAI,SAACgK,EAAO1J,GAC5B,OAAS,kBAAC4N,GAAA,EAAD,CAAUrE,IAAKvJ,EAAImG,MAAOuD,EAAO4L,YAAa5L,EAAO4L,iBAQ1E,0BAAM5K,MAAO,CAAEzI,MAAO,QACzBzC,EAAOkK,SAMR,kBAACqI,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACnB,kBAAC8C,GAAA,EAAD,CAAavO,UAAWF,EAAQmO,aAE5B,kBAACO,GAAA,EAAD,CAAYC,QAAQ,qBAApB,cAEA,kBAACC,GAAA,EAAD,CACAjP,MAAOuN,EACP3L,SAAU/B,EACVqP,WAAY,CACZxN,KAAM,aACN7H,GAAI,sBAIHiU,EAED,kBAACrG,GAAA,EAAD,MAEA7D,KAAK3K,MAAM2U,YAAYrU,KAAI,SAACgU,EAAW1T,GACvC,OAAS,kBAAC4N,GAAA,EAAD,CAAUrE,IAAKvJ,EAAImG,MAAOuN,EAAWA,YAAaA,EAAWA,iBAQ9E,0BAAMhJ,MAAO,CAAEzI,MAAO,QACrBzC,EAAOkU,aAKR,kBAAC3B,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACvB,kBAAC3K,EAAA,EAAD,CACIxH,GAAG,SACH6H,KAAK,SACL1B,MAAOwN,EACP/L,MAAM,SACND,WAAS,EACTmN,aAAa,SACb/M,SAAU/B,IAEd,0BAAM0E,MAAO,CAAEzI,MAAO,QACrBzC,EAAOmU,SAKR,kBAAC5B,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACf,kBAAC1K,EAAA,EAAD,CACIxH,GAAG,UACH6H,KAAK,UACLD,MAAM,uBACN2N,WAAS,EACTC,QAAQ,IACRrP,MAAOyN,EACP7L,SAAU/B,EACVU,UAAWF,EAAQmO,YACnBrR,OAAO,WAEf,0BAAMoH,MAAO,CAAEzI,MAAO,QACjBzC,EAAOoU,UAKR,kBAAC7B,GAAA,EAAD,CAAMhS,MAAI,EAAC0V,GAAI,IACX,kBAACR,GAAA,EAAD,CAAarO,UAAU,WAAWF,UAAWF,EAAQmO,aACjD,kBAACe,GAAA,EAAD,CAAW9O,UAAU,UAArB,WAEA,kBAAC+O,GAAA,EAAD,CACApN,aAAW,UACXV,KAAK,UACLnB,UAAWF,EAAQoP,MACnBzP,MAAO4D,KAAK3K,MAAM8U,aAClBnM,SAAUgC,KAAKwJ,qBAEX,kBAACsC,GAAA,EAAD,CAAkB1P,MAAM,QAAQ2P,QAAS,kBAACC,GAAA,EAAD,MAAWnO,MAAM,UAE1D,kBAACiO,GAAA,EAAD,CAAkB1P,MAAM,QAAQ2P,QAAS,kBAACC,GAAA,EAAD,MAAWnO,MAAM,aAQtE,kBAACmK,GAAA,EAAD,KACK2C,EACT,0BAAMhK,MAAO,CAAEzI,MAAO,QACjBzC,EAAOqU,UAMR,kBAACpL,EAAA,EAAD,CACAnJ,KAAK,SACLqI,WAAS,EACT3F,QAAQ,YACRC,MAAM,UACNyE,UAAWF,EAAQkC,QALnB,kB,gDAvQI/D,EAAOvF,GAMnC,GAJGuF,EAAMlF,IAAIpC,MACTsH,EAAM2B,QAAQC,KAAK,oCAGnB5B,EAAMnF,OACN,MAAO,CAAEA,OAAQmF,EAAMnF,Y,GAvGRmL,aA4YZ5G,gBANS,SAAA3E,GAAK,MAAK,CAC9BK,IAAIL,EAAMK,IACVD,OAAQJ,EAAMI,UAMd,CAAEiV,cDrbuB,SAAAuB,GAAW,OAAI,SAAArU,GACxCR,IAAM+C,KAAK,2BAA4B8R,GACtC7R,MAAK,SAAAC,GAAG,OACLzC,EAAS,CACLrC,KzBvBmB,kByBwBnBC,QAAS6E,EAAIC,UAEpBG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACnBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,aC0afN,CAGb6G,cAxba,SAAAnI,GAAK,MAAK,CACrBC,KAAM,CACFI,QAAS,OACTmT,SAAU,QAEdlB,OAAO,aACH7R,MAAO,OACPY,WAAYrB,EAAMc,QAAQ,GAC1ByN,YAAavO,EAAMc,QAAQ,IAC1Bd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDL,MAAO,IACPY,WAAY,OACZkN,YAAa,SAGjBpO,MAAM,aACJC,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG3ByR,UAAW,CACPoB,MAAO,QACPnU,MAAO,OAEX0S,YAAa,CAEXvR,SAAU,SAEZsF,OAAO,CACL7F,UAAWJ,EAAMc,QAAQ,IAE3B+N,MAAO,CACH6E,QAAS1T,EAAMc,UAAY,MAmZnCqH,CAAmBwI,K,6LC5afiD,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAczD,IAAMmL,GAAa7U,aAAY,SAAAC,GAAK,MAAK,CACvCC,KAAM,CACJQ,MAAO,QAEToU,MAAO,CACLpU,MAAO,OACP2M,cAAe,SAEjB1M,MAAO,CACLC,SAAU,KAEZmU,aAAc,CACZC,UAAW,QAEbC,QAAS,CACP3U,QAAS,OACT,YAAa,CACXgB,WAAYrB,EAAMc,QAAQ,IAE5BV,UAAW,OACXmQ,OAAQ,QAEV0E,aAAc,CACZ7U,UAAU,IAEV8U,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,QAyQZ,IAKM9H,GAAqB,CAAE0M,cFjZA,SAAAlW,GAAC,OAAI,SAAAC,GAC9BA,EAASwR,IACThS,IAAMkF,IAAI,+BACTlC,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CAClBrC,KzBXwB,kByBYxBC,QAAS6E,EAAIC,UAEhBG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,SE4YfV,gBAPS,SAAA3E,GAAK,MAAK,CAChCK,IAAIL,EAAMK,OAM4ByL,GAAzBnH,EA3Qf,SAAyBY,GACvB,IAAM6B,EAAU6Q,KADc,EAGNzS,mBAAS,GAHH,mBAGvBkS,EAHuB,KAGjBe,EAHiB,OAIQjT,mBAAS,GAJjB,mBAIvBmS,EAJuB,KAIVe,EAJU,OAOFlT,mBAAS,IAPP,mBAOvBmT,EAPuB,KAOfC,EAPe,OAQEpT,mBAAS,IARX,mBAQvBkP,EARuB,KAQbN,EARa,OAWN5O,oBAAS,GAXH,mBAWvBkF,EAXuB,KAWjBmO,EAXiB,OAcArT,oBAAS,GAdT,mBAcvBxH,EAduB,KAcdoI,EAdc,OAegBZ,oBAAS,GAfzB,mBAevBoP,EAfuB,KAeNkE,EAfM,KA0B5B9R,qBAAU,WACLzB,EAAMlF,IAAIpC,MACX4a,GAAQ,KAET,CAACtT,EAAMlF,IAAIpC,OAEhB+I,qBAAU,WAEV,IAAMpG,EAAKmY,aAAa,SAAAzW,GACpBiD,EAAMiT,gBACNpS,GAAW,GAGf,yCAAC,WAAM9D,GAAN,gBAAA2J,EAAA,sEACiBlK,IAAMkF,IAAI,iBAD3B,OACKjC,EADL,OAECoP,EAAYpP,EAAIC,MAChB6T,GAAmB,GAHpB,2CAAD,0DAMG,KAGD,OAAO,WACLE,cAAcpY,MAEhB,IAGF,IAeMyG,EAAO9B,EAAMlF,IAAIlC,QAAQ6N,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAC/EzL,QAAO,SAAAwJ,GAAG,OAAIA,EAAII,SAAWqO,KAG1BM,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAG3E,OACE,6BAEE,kBAAC,GAAD,CAAYjN,KAAMA,EAAM2B,QA7DR,SAACmG,EAAOC,GACZ,cAAXA,GAGHoG,GAAQ,MA4DR,kBAAC,GAAD,MAIA,kBAACtR,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE9B,kBAACgJ,GAAA,EAAD,CAAajQ,aAAW,cACrB,kBAACpG,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,uBAAuBsE,UAAWF,EAAQmR,MACnE,kBAAC,KAAD,CAAUjR,UAAWF,EAAQoK,OAD/B,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,mCACLqW,eAAa,QAEf,kBAAC,KAAD,CAAiB/R,UAAWF,EAAQoK,OALpC,iBAYF,kBAACnB,GAAA,EAAD,CAAO/I,UAAWF,EAAQ8Q,OAExB,kBAACrC,GAAA,EAAD,CAAatN,WAAS,GACpB,kBAACH,EAAA,EAAD,CACIxH,GAAG,kCACH0Y,QAAM,EACN9Q,MAAM,mBACNzB,MAAO4R,EACPhQ,SAlDS,SAAAjC,GACnBkS,EAAUlS,EAAEI,OAAOC,QAkDTwS,YAAa,CACXC,QAAQ,IAGN5E,EAEA,iCAGA,kBAAC,WAAD,KACI,iCACCF,EAASpU,KAAI,SAACgK,EAAO1J,GACpB,OACA,4BAAQuJ,IAAKvJ,EAAImG,MAAOuD,EAAO4L,YAAa5L,EAAO4L,mBAU/D,6BACN,kBAAC7F,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MACxB,yBAAKgE,UAAWF,EAAQ+Q,cACtB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE9C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACkN,GAAD,qBACA,kBAACA,GAAD,CAAiBnU,MAAM,QAAvB,WACA,kBAACmU,GAAD,CAAiBnU,MAAM,QAAvB,gBACA,kBAACmU,GAAD,CAAiBnU,MAAM,QAAvB,UACA,kBAACmU,GAAD,CAAiBnU,MAAM,QAAvB,cACA,kBAACmU,GAAD,CAAiBnU,MAAM,QAAvB,kBACA,kBAACmU,GAAD,CAAiBnU,MAAM,QAAvB,qBACA,kBAACmU,GAAD,CAAiBnU,MAAM,QAAvB,mBACA,kBAACmU,GAAD,CAAiBnU,MAAM,QAAvB,mBAKA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAKJ,kBAAC,WAAD,KAEc,KAAX8V,GAAiC,IAAhBtR,EAAK8R,OACtB,kBAACnP,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACtD,kBAAC,KAAD,MAAmB,6BADnB,iDAKAgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GACF/G,KAAI,SAAA4J,GAAG,OACP,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIzB,MAEP,kBAACuB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAItC,KAC7B,kBAACoC,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAImK,IAC7B,kBAACrK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAII,QAC7B,kBAACN,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIoK,YAC7B,kBAACtK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIqK,QAC7B,kBAACvK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsK,SAC7B,kBAACxK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIuK,SAIZ,sBAAfvK,EAAIzJ,OACF,kBAACuJ,GAAA,EAAD,CAAWlH,MAAM,OAAOwI,MAAO,CAAEzI,MAAO,QAAUqH,EAAIzJ,QAExD,kBAAC,WAAD,KAIiB,uBAAfyJ,EAAIzJ,OACF,kBAACuJ,GAAA,EAAD,CAAWlH,MAAM,OAAOwI,MAAO,CAAEzI,MAAO,SAAWqH,EAAIzJ,QAEvD,kBAACuJ,GAAA,EAAD,CAAWlH,MAAM,OAAOwI,MAAO,CAAEzI,MAAO,UAAYqH,EAAIzJ,cAUrEwY,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aAtLS,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IAsLMC,oBAnLgB,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAkLMyB,iBAAkB3C,UAU9B,kBAAClO,EAAA,EAAD,CAAQ/B,UAAWF,EAAQkR,aAAc1V,QAAQ,YAAYC,MAAM,UAAUG,KAAK,uCAAlF,qB,qBC9WAiU,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAezD,IAAMmL,GAAa7U,aAAY,SAAAC,GAAK,MAAK,CACvCC,KAAM,CACJQ,MAAO,QAEToU,MAAO,CACLpU,MAAO,OACP2M,cAAe,SAEjB1M,MAAO,CACLC,SAAU,KAEZmU,aAAc,CACZC,UAAW,QAEbC,QAAS,CACP3U,QAAS,OACT,YAAa,CACXgB,WAAYrB,EAAMc,QAAQ,IAE5BV,UAAW,OACXmQ,OAAQ,QAEV0E,aAAc,CACZ7U,UAAU,IAEX8U,KAAM,CACL7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,QAmNGuG,OA9Md,SAAoB5U,GACnB,IAAM6B,EAAU6Q,KADS,EAGDzS,mBAAS,GAHR,mBAGlBkS,EAHkB,KAGZe,EAHY,OAIajT,mBAAS,GAJtB,mBAIlBmS,EAJkB,KAILe,EAJK,OAMIlT,mBAAS,IANb,mBAMjBmT,EANiB,KAMTC,EANS,OASOpT,mBAAS,IAThB,mBASlBkP,EATkB,KASRN,EATQ,OAUsB5O,oBAAS,GAV/B,mBAUjBoP,EAViB,KAUAkE,EAVA,OAaMtT,mBAAS,IAbf,mBAajBrH,EAbiB,KAaRic,EAbQ,OAcM5U,oBAAS,GAdf,mBAcjBxH,EAdiB,KAcRoI,EAdQ,KA+BzBY,qBAAW,SAAA1E,GAEX,IAAM1B,EAAKmY,aAAa,SAAAzW,IAGvB,yCAAC,WAAMA,GAAN,kBAAA2J,EAAA,sEACiBlK,IAAMkF,IAAI,iBAD3B,cACKjC,EADL,OAECoP,EAAYpP,EAAIC,MAChB6T,GAAmB,GAHpB,SAKmB/W,IAAMkF,IAAI,iCAL7B,OAKMoT,EALN,OAMCD,EAAWC,EAAKpV,MAChBmB,GAAW,GAPZ,4CAAD,0DAUE,KAEH,OAAO,SAAA9D,GACN0W,cAAcpY,MAIb,IAEF,IAAMyG,EAAOlJ,EAAQ6N,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KACpEzL,QAAO,SAAAwJ,GAAG,OAAIA,EAAII,SAAWqO,KAGzBM,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAE3E,OACE,6BAEC,kBAAC,GAAD,MAEE,kBAACpQ,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE/B,kBAACgJ,GAAA,EAAD,CAAajQ,aAAW,cACpB,kBAACpG,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,uBAAuBsE,UAAWF,EAAQmR,MACnE,kBAAC,KAAD,CAAUjR,UAAWF,EAAQoK,OAD/B,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,wCACLqW,eAAa,QAEf,kBAAC,KAAD,CAAU/R,UAAWF,EAAQoK,OAL7B,iBAYL,kBAACnB,GAAA,EAAD,CAAO/I,UAAWF,EAAQ8Q,OAExB,kBAACrC,GAAA,EAAD,CAAatN,WAAS,GACpB,kBAACH,EAAA,EAAD,CACIxH,GAAG,kCACH0Y,QAAM,EACN9Q,MAAM,mBACNzB,MAAO4R,EACPhQ,SA7EU,SAAAjC,GACnBkS,EAAUlS,EAAEI,OAAOC,QA6EVwS,YAAa,CACXC,QAAQ,IAGN5E,EAEA,iCAGA,kBAAC,WAAD,KACI,iCACCF,EAASpU,KAAI,SAACgK,EAAO1J,GACpB,OACA,4BAAQuJ,IAAKvJ,EAAImG,MAAOuD,EAAO4L,YAAa5L,EAAO4L,mBAUrE,6BAGE,kBAAC7F,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAC1B,yBAAKgE,UAAWF,EAAQ+Q,cACtB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE9C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,0BACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,+BACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,oBAKA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAKJ,kBAAC,WAAD,KAEc,KAAX8V,GAAiC,IAAhBtR,EAAK8R,OACtB,kBAACnP,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACtD,kBAAC,KAAD,MAAmB,6BADnB,iDAKAgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GACF/G,KAAI,SAAA4J,GAAG,OACP,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIoQ,WAEP,kBAACtQ,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIqQ,MAC7B,kBAACvQ,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAII,aAOpC2O,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aAxKS,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IAwKMC,oBArKgB,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAoKMyB,iBAAkB3C,a,8BCtU9BpU,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,YAgEF8W,OA3Df,SAAyBjV,GACxB,IAAM6B,EAAUjE,KADe,EAGAqC,mBAAS,IAHT,mBAGrBiV,EAHqB,KAGbC,EAHa,KAkC/B,OA7BG1T,qBAAU,SAAA1E,GACNP,IAAMkF,IAAI,uBACTlC,MAAK,SAAAC,GAAG,OAAI0V,EAAU1V,EAAIC,SAC1BG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QAC5B,IA0BJ,6BACc,kBAAC,GAAD,MAEA,kBAACkC,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE9B,kBAACC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,IAE1C,kBAAC,KAAD,CACLqK,QAAS,CAAEC,KAAgBC,MAC3BC,YAAY,eACZC,UAAU,EACKN,OAAQA,EACRO,aA7BG,SAAAC,GAAS,OAC5B,kBAAC,WAAD,KAGA,uBAAGjY,KAAI,qBAAgBiY,EAAUzI,MAAM0I,KAAKC,WAC1C,0BAAM7P,MAAO,CAACzI,MAAO,QAAS6N,gBAAgB,GAAD,OAAIuK,EAAUvK,mBAE1D,2BAAIuK,EAAUG,UAFf,QAGE,8BAAOH,EAAUzI,MAAMrD,WAsBXkM,UArCN,SAAAC,GAEd/V,EAAM2B,QAAQC,KAAd,2BAAuCmU,EAAIC,iB,kGCb7CpY,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEb6U,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAETV,KAAM,CACN8D,MAAO,SACNvP,SAAU,KAEZ+T,MAAO,CACL7H,UAAW,UAEb8H,OAAQ,CACN/K,gBAAiBgL,KAAI,UAuGVC,OAlGf,SAA4BpW,GAC3B,IAAM6B,EAAUjE,KADkB,EAGRqC,mBAAS,IAHD,mBAG3BgN,EAH2B,KAGpBoJ,EAHoB,KAalC,OARA5U,qBAAU,SAAA1E,GACTP,IAAMkF,IAAN,6BAAgC1B,EAAMsW,MAAMC,OAAOlb,KAClDmE,MAAK,SAAAC,GAAG,OAAI4W,EAAS5W,EAAIC,SACzBG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QACzB,IAKA,6BAEE,kBAAC,GAAD,MAEE,kBAACkC,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAEjC,kBAACgJ,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SACvD,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,aAAasE,UAAWF,EAAQmR,MACzD,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OADpC,YAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAI,sCAAiCuC,EAAMsW,MAAMC,OAAOlb,IACxDyY,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OANlC,UAaK,kBAACmB,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAC7B,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAEb,kBAACG,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MAC1B,kBAAC6I,GAAA,EAAD,CACEN,OACE,kBAACO,GAAA,EAAD,CAAQ7S,aAAW,SAAS7B,UAAWF,EAAQqU,QAA/C,OASFtM,MAAOqD,EAAMrD,MACb8M,UAAS,UAAKC,KAAO1J,EAAM2J,UAAUC,OAAO,eAAnC,gBAAyD5J,EAAM6J,SAG9E,kBAAClJ,GAAA,EAAD,CAAW7L,UAAWF,EAAQoU,OAC5B,yBAAKlQ,MAAO,CAACsI,OAAQ,QAAS9P,MAAO,SAAU8D,IAAG,UAAK4K,EAAM8J,WAG3D,kBAAC/I,GAAA,EAAD,KACG,kBAAC5Q,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,KAA5D,UACSgL,EAAM+J,OAGhB,kBAAC5Z,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,cAAc2E,UAAU,KACvDgL,EAAMgK,cAGX,kBAAC9I,GAAA,EAAD,CAAa+I,gBAAc,MAQ5B,kBAAC9J,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,Q,qBCtHpB3P,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEb6U,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAEPV,KAAM,CACR8D,MAAO,SACNvP,SAAU,KAEZ+T,MAAO,CACL7H,UAAW,UAEb8H,OAAQ,CACN/K,gBAAiBgL,KAAI,UAqKVC,OAhKf,SAA4BpW,GAC3B,IAAM6B,EAAUjE,KADkB,EAIHqC,mBAAS,IAJN,mBAIxBiV,EAJwB,KAIhBC,EAJgB,OAKDlV,oBAAS,GALR,mBAKxBkX,EALwB,KAKfC,EALe,KAiBlC,OATG3V,qBAAU,SAAA1E,GACNP,IAAMkF,IAAN,uCAA0C1B,EAAMsW,MAAMC,OAAOK,WAC5DpX,MAAK,SAAAC,GAAG,OAAI0V,EAAU1V,EAAIC,SAC1BG,OAAM,SAAAC,GACAA,GACCsX,GAAW,QAErB,IAGH,6BAEE,kBAAC,GAAD,MAEC,kBAACpV,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAEhC,kBAACgJ,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SACvD,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,aAAasE,UAAWF,EAAQmR,MACzD,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OADpC,YAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAI,GACJqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OANlC,WAWY,kBAAC,WAAD,KAQQkL,EAEA,kBAAC/J,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACpB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACd,kBAACnQ,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,IAAI1E,MAAM,UAChE,kBAAC,KAAD,CAAawI,MAAO,CAACzI,MAAO,SADlC,IAC6C,6BAD7C,iDAMF,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,KAIjB,kBAAC,WAAD,KAE0B,IAAlB2H,EAAOtB,OAEL,kBAACxG,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACtB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACd,kBAACnQ,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,IAAI1E,MAAM,UAChE,kBAAC,KAAD,CAA4BwI,MAAO,CAACzI,MAAO,WADjD,IAC8D,6BAD9D,sEAMF,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,KAMrB,kBAAC,WAAD,KAGI2H,EAAOna,KAAI,SAAAkS,GAAK,OAE5B,kBAACG,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACb,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAEP,kBAACG,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MACvB,kBAAC6I,GAAA,EAAD,CACEN,OACE,kBAACO,GAAA,EAAD,CAAQ7S,aAAW,SAAS7B,UAAWF,EAAQqU,QAA/C,OASFtM,MAAOqD,EAAMrD,MACb8M,UAAS,UAAKC,KAAO1J,EAAM2J,UAAUC,OAAO,eAAnC,gBAAyD5J,EAAM6J,SAG9E,kBAAClJ,GAAA,EAAD,CAAW7L,UAAWF,EAAQoU,OACxB,yBAAKlQ,MAAO,CAACsI,OAAQ,QAAS9P,MAAO,SAAU8D,IAAG,UAAK4K,EAAM8J,WAG/D,kBAAC/I,GAAA,EAAD,KACG,kBAAC5Q,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,KAA5D,UACSgL,EAAM+J,OAGhB,kBAAC5Z,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,cAAc2E,UAAU,KACvDgL,EAAMgK,cAGX,kBAAC9I,GAAA,EAAD,CAAa+I,gBAAc,MAQrC,kBAAC9J,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,c,UClL/C3P,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,2BACID,EAAMkN,OAAOC,WADlB,IAEEJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEbkZ,SAAU,CACR5F,MAAO,QACPvF,SAAU,IAEVhG,OAAQ,CACNC,YAAarI,EAAMc,QAAQ,QAgSnC,IAIM2H,GAAqB,CAAE+Q,qBCzTO,SAAAva,GACnC,MAAO,CAAEpC,KjC0CsC,sCgCgRjCyE,gBANS,SAAA3E,GAAK,MAAK,CAChCoB,mBAAoBpB,EAAMoB,sBAKY0K,GAAzBnH,EAlSf,SAAoBY,GAEnB,IAAM6B,EAAUjE,KAFU,EAKIqC,mBAAS,IALb,mBAKnBjH,EALmB,KAKVue,EALU,OAMItX,oBAAS,GANb,mBAMnBxH,EANmB,KAMVoI,EANU,OAQVZ,oBAAS,GAAlBkF,EARmB,sBAWIlF,oBAAS,GAXb,mBAWnBkX,EAXmB,KAWVC,EAXU,OAcUnX,mBAAS,IAdnB,mBAcfkP,EAde,KAcLN,EAdK,OAewB5O,oBAAS,GAfjC,mBAefoP,EAfe,KAeEkE,EAfF,OAkBmBtT,mBAAS,IAlB5B,mBAkBduX,EAlBc,KAkBAC,EAlBA,OAmBaxX,mBAAS,IAnBtB,mBAmBdyX,EAnBc,KAmBHC,EAnBG,OAsByB1X,oBAAS,GAtBlC,mBAsBhB2X,EAtBgB,KAsBEC,EAtBF,KAyBnB9Q,EAAc,SAAAhK,GAClBiD,EAAMsX,uBACNO,GAAoB,IAIvBpW,qBAAU,SAAA1E,GACTP,IAAMkF,IAAI,qBACTlC,MAAK,SAAAC,GACL8X,EAAW9X,EAAIC,MACfmB,GAAW,MAEXhB,OAAM,SAAAC,GACHA,GACFsX,GAAW,QAEZ,CAACpX,EAAMnE,mBAAmB5C,aAE3BwI,qBAAW,SAAA1E,IAGG,yCAAC,WAAMA,GAAN,gBAAA2J,EAAA,sEACqBlK,IAAMkF,IAAI,iBAD/B,OACSjC,EADT,OAEGoP,EAAYpP,EAAIC,MAChB6T,GAAmB,GAHtB,2CAAD,0DAWN,IAEP9R,qBAAU,SAAA1E,GACJiD,EAAMnE,mBAAmB5C,YACxB4e,GAAoB,KAEzB,CAAC7X,EAAMnE,mBAAmB5C,aAE9B,IAAM6I,EAAQ9I,EAAQmC,QAAO,SAAAwJ,GAAG,MAAmB,aAAfA,EAAIzJ,UAGvC,OACE,6BACC,kBAAC,GAAD,MAEC,kBAAC8G,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE7B,kBAAChE,GAAA,EAAD,CACA1B,KAAMyS,EACN9Q,QAASC,EACTC,kBAAgB,qBAChBqC,mBAAiB,4BAEjB,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,sBAAsB,gCACtC,kBAACiO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,4BAAtB,mHAIF,kBAACmO,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QAAS2E,EAAazJ,MAAM,UAAU6F,WAAS,GAAvD,QAQF,kBAAC2H,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,IAC3C,kBAAC3N,EAAA,EAAD,CAAYC,QAAQ,KAAK4E,UAAU,MAAnC,uCAIY,6BAGP,yBAAM8D,MAAO,CAACmF,cAAe,KACzB,kBAACkC,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAE3B,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACb,kBAAC8C,GAAA,EAAD,CAAatN,WAAS,GACb,kBAACH,EAAA,EAAD,CACIxH,GAAG,kCACH0Y,QAAM,EACN9Q,MAAM,mBACNzB,MAAOgW,EACPpU,SAAU,SAAAjC,GAAC,OAAIsW,EAAgBtW,EAAEI,OAAOC,QACxCwS,YAAa,CACXC,QAAQ,IAGN5E,EAEA,iCAGA,kBAAC,WAAD,KACI,iCACCF,EAASpU,KAAI,SAACgK,EAAO1J,GACpB,OACA,4BAAQuJ,IAAKvJ,EAAImG,MAAOuD,EAAO4L,YAAa5L,EAAO4L,mBAS5E,kBAACvD,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACpC,kBAAC3K,EAAA,EAAD,CACsBxH,GAAG,YACH6H,KAAK,YACLD,MAAM,qBACND,WAAS,EACTjB,UAAU,sBACVP,MAAOkW,EACPvH,aAAa,aACb/M,SAAU,SAAAjC,GAAC,OAAIwW,EAAaxW,EAAEI,OAAOC,aAOlD/I,EAEA,gCACC,kBAACwL,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BAClB,8CAGrB,kBAAC,WAAD,KAEG6Z,EAEA,kFAIA,kBAAC,WAAD,KAEmB,KAAjBK,GAAqC,KAAdE,EAG3B5V,EAAK/G,KAAI,SAAA4J,GAAG,OACP,kBAAC,WAAD,KACE,kBAACa,GAAA,EAAD,CAAUC,QAAM,GACb,kBAACE,GAAA,EAAD,CAAcC,QAASjB,EAAImT,YAE5B,kBAACC,GAAA,EAAD,CAAUC,GAAI7S,EAAM8S,QAAQ,OAAOC,eAAa,GAChD,yBAAKnW,UAAWF,EAAQqE,QACtB,2BACH,kBAAC9I,EAAA,EAAD,CAAY6E,UAAU,OAAO3E,MAAM,iBAAnC,uBADG,QAIFqH,EAAIsS,aAEN,2BACC,kBAAC7Z,EAAA,EAAD,CAAY6E,UAAU,OAAO3E,MAAM,iBAAnC,WADD,QAIEqH,EAAII,QAEN,2BAEA,kBAAC3H,EAAA,EAAD,CAAY6E,UAAU,OAAO3E,MAAM,iBAAnC,yBAFA,QAKCqH,EAAIwT,sBAEL,2BACE,kBAAC/a,EAAA,EAAD,CAAY6E,UAAU,OAAO3E,MAAM,iBAAnC,SADF,OAIEqH,EAAIqQ,MAGC,kBAAClR,EAAA,EAAD,CACFrG,KAAI,yBAAoBkH,EAAItJ,GAAxB,YAA8BsJ,EAAImT,UACtC/V,UAAWF,EAAQ4D,OACnBpI,QAAQ,WACRC,MAAM,WAJJ,uBAcZwE,EAAK3G,QAAO,SAAAwJ,GAAG,OAAoE,IAAhEA,EAAImT,SAASM,cAAchF,OAAOsE,EAAUU,gBAAyBzT,EAAII,SAAWyS,KACtGzc,KAAI,SAAA4J,GAAG,OACL,kBAAC,WAAD,KACG,kBAACa,GAAA,EAAD,CAAUC,QAAM,GACb,kBAACE,GAAA,EAAD,CAAcC,QAASjB,EAAImT,YAE5B,kBAACC,GAAA,EAAD,CAAUC,GAAI7S,EAAM8S,QAAQ,OAAOC,eAAa,GAChD,yBAAKnW,UAAWF,EAAQqE,QACtB,2BACH,kBAAC9I,EAAA,EAAD,CAAY6E,UAAU,OAAO3E,MAAM,iBAAnC,uBADG,QAIFqH,EAAIsS,aAEN,2BACC,kBAAC7Z,EAAA,EAAD,CAAY6E,UAAU,OAAO3E,MAAM,iBAAnC,WADD,QAIEqH,EAAII,QAEN,2BAEA,kBAAC3H,EAAA,EAAD,CAAY6E,UAAU,OAAO3E,MAAM,iBAAnC,yBAFA,QAKCqH,EAAIwT,sBAEL,2BACE,kBAAC/a,EAAA,EAAD,CAAY6E,UAAU,OAAO3E,MAAM,iBAAnC,SADF,OAIEqH,EAAIqQ,MAGC,kBAAClR,EAAA,EAAD,CACDrG,KAAI,yBAAoBkH,EAAItJ,GAAxB,YAA8BsJ,EAAImT,UACvC/V,UAAWF,EAAQ4D,OACnBpI,QAAQ,WACRC,MAAM,WAJJ,+BE5R7BM,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,2BACID,EAAMkN,OAAOC,WADlB,IAEEJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEbkZ,SAAU,CACR5F,MAAO,QACPvF,SAAU,IAEVhG,OAAQ,CACNC,YAAarI,EAAMc,QAAQ,IAE/BoU,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAER2B,YAAa,CAETvR,SAAU,SAEfsF,OAAO,CACF7F,UAAWJ,EAAMc,QAAQ,QAqTjC,IAKM2H,GAAqB,CAAE8R,gBD1WE,SAAC3Y,EAAM4Y,GAAP,OAAiB,SAAAtb,GAE/CR,IAAM+C,KAAK,0CAA2CG,GACrDF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KjCuDwC,kCiCrDxCkF,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACAyC,QAASkF,EAAIC,SAASL,UAG7BlD,IAAM+C,KAAK,yCAA0C+Y,GACpD9Y,MAAK,SAAAC,GAAG,OAAIA,KACZI,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,SC+VZV,gBAPS,SAAA3E,GAAK,MAAK,CACjCoB,mBAAoBpB,EAAMoB,mBAC1BhB,OAAQJ,EAAMI,UAKyB0L,GAAzBnH,EAxTf,SAAsBY,GAErB,IAAM6B,EAAUjE,KAFY,EAKIqC,mBAAS,IALb,mBAKrB6X,EALqB,KAKXS,EALW,OAOUtY,mBAAS,IAPnB,mBAOrBmP,EAPqB,KAORM,EAPQ,OAQwBzP,oBAAS,GARjC,mBAQrBqP,EARqB,KAQDkJ,EARC,OAWAvY,mBAAS,CACpCwY,WAAY,KACZC,cAAe,GACf3T,OAAQ,GACR4T,YAAa,GACbC,OAAQ,GACR7J,WAAY,GACZD,GAAI,GACJ+J,QAAS,GACTC,cAAe,KApBY,mBAWrBC,EAXqB,KAWbC,EAXa,OAwBA/Y,mBAAS,IAxBT,mBAwBrBpF,EAxBqB,KAwBbyF,EAxBa,KA+E5B,OAlBAmB,qBAAU,SAAA1E,GAjCTP,IAAMkF,IAAN,0CAA6C1B,EAAMsW,MAAMC,OAAOlb,GAAhE,YAAsE2E,EAAMsW,MAAMC,OAAOuB,WACxFtY,MAAK,SAAAC,GACL8Y,EAAY9Y,EAAIC,MAChBsZ,EAAU,2BAAID,GAAL,IAAaL,cAAejZ,EAAIC,KAAKoY,SAC7C/S,OAAQtF,EAAIC,KAAKqF,OAAQ0T,WAAYhZ,EAAIC,KAAKrE,SAE/CwE,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,MAI1BtD,IAAMkF,IAAI,oBACTlC,MAAK,SAAAC,GACLiQ,EAAejQ,EAAIC,MACnB8Y,GAAsB,MAEtB3Y,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QAqBzB,IAEF2B,qBAAU,SAAA1E,GACNiD,EAAMnE,mBAAmB5C,YAC3B+G,EAAM2B,QAAQC,KAAK,oBACnB,CAAC5B,EAAMnE,mBAAmB5C,aAG5BwI,qBAAU,SAAA1E,GACNiD,EAAMnF,QACRyF,EAAUN,EAAMnF,UAChB,CAACmF,EAAMnF,SAKR,6BACC,kBAAC,GAAD,MACC,kBAACmH,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE7B,kBAACgJ,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SACxD,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,iBAAiBsE,UAAWF,EAAQmR,MAC7D,kBAAC,KAAD,CAAgBjR,UAAWF,EAAQoK,OADrC,yBAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAI,GACJqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OANlC,SAWN,kBAACmB,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAExB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACqS,IAAE,IAGF,kBAACL,GAAA,EAAD,CAAMhS,MAAI,EAACqS,GAAI,EAAGF,GAAI,IAC/B,kBAACzC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,IACzC,kBAAC3N,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,iBAGG,6BAEA,0BAAMkF,YAAU,EAACC,SAnET,SAAAvB,GACpBA,EAAEC,iBAEF,IAAMkX,EAAQ,CACbpY,SAAU4X,EAAS5X,SACnB+Y,QAASnB,EAASoB,UAClBC,aAAY,0BAAsBJ,EAAOJ,YAA7B,0CAA0EI,EAAOL,cAAjF,wDAKb1Y,EAAMqY,gBAAgBU,EAAQT,KA0DlB,kBAAClL,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAExB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACX,kBAAC1K,EAAA,EAAD,CACArB,MAAOuX,EAAOL,cACard,GAAG,gBACH6H,KAAK,gBACLD,MAAM,gBACND,WAAS,EACTO,WAAY,CACV6V,UAAU,MAK3C,kBAAChM,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACb,kBAAC1K,EAAA,EAAD,CACArB,MAAOuX,EAAOhU,OACe1J,GAAG,SACH6H,KAAK,SACLD,MAAM,cACND,WAAS,EACTO,WAAY,CACV6V,UAAU,OAOzC,6BACA,6BAEC,kBAAChM,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACjB,kBAAC1K,EAAA,EAAD,CACArB,MAAOuX,EAAOJ,YACdvV,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAaJ,YAAaxX,EAAEI,OAAOC,UAC7BnG,GAAG,cACH6H,KAAK,cACLD,MAAM,uBACND,WAAS,EACVmN,cAAY,KAG1C,6BACI,0BAAMpK,MAAO,CAAEzI,MAAO,QACCzC,EAAO8d,aAInC,kBAACvL,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACb,kBAAC1K,EAAA,EAAD,CACArB,MAAOuX,EAAOH,OACdxV,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAaH,OAAQzX,EAAEI,OAAOC,UACxBnG,GAAG,SACH6H,KAAK,SACLD,MAAM,UACND,WAAS,EACVmN,cAAY,KAG1C,6BACA,0BAAMpK,MAAO,CAAEzI,MAAO,QACKzC,EAAO+d,QAGnC,kBAACxL,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IAEU,kBAAC+C,GAAA,EAAD,CAAavO,UAAWF,EAAQmO,aACxB,kBAACO,GAAA,EAAD,CAAYC,QAAQ,aAApB,gBACA,kBAACC,GAAA,EAAD,CACIjP,MAAOuX,EAAOjK,GACd1L,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAajK,GAAI3N,EAAEI,OAAOC,UAClDkP,WAAY,CACZxN,KAAM,KACN7H,GAAI,cAGJ,kBAAC4N,GAAA,EAAD,CAAUzH,MAAO,OAAjB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAO,OAAjB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAO,OAAjB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAO,OAAjB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAO,OAAjB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAO,mBAAjB,sBAIrC,6BACA,0BAAMuE,MAAO,CAAEzI,MAAO,QACMzC,EAAOiU,IAGpC,kBAAC1B,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAExB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACd,kBAAC+C,GAAA,EAAD,CAAavO,UAAWF,EAAQmO,aAEA,kBAACO,GAAA,EAAD,CAAYC,QAAQ,qBAApB,cAEA,kBAACC,GAAA,EAAD,CACAjP,MAAOuX,EAAOhK,WACd3L,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAahK,WAAY5N,EAAEI,OAAOC,UAC1DkP,WAAY,CACZxN,KAAM,aACN7H,GAAI,sBAIHiU,EAED,kBAACrG,GAAA,EAAD,MAEAmG,EAAYrU,KAAI,SAACgU,EAAW1T,GAC5B,OAAS,kBAAC4N,GAAA,EAAD,CAAUrE,IAAKvJ,EAAImG,MAAOuN,EAAWA,YAAaA,EAAWA,kBAUvG,kBAAC3B,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACb,kBAAC1K,EAAA,EAAD,CACArB,MAAOuX,EAAOF,QACdzV,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAaF,QAAS1X,EAAEI,OAAOC,UACzBnG,GAAG,UACH6H,KAAK,UACLD,MAAM,UACND,WAAS,EACVmN,cAAY,KAI3C,6BAEA,0BAAMpK,MAAO,CAAEzI,MAAO,MAAO+b,aAAc,KACfxe,EAAOkU,YAGlB,0BAAMhJ,MAAO,CAAEzI,MAAO,QACXzC,EAAOge,UAItC,6BAEA,kBAACzL,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACb,kBAAC1K,EAAA,EAAD,CACCrB,MAAOuX,EAAOD,cACd1V,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAaD,cAAe3X,EAAEI,OAAOC,UACrCnG,GAAG,gBACH6H,KAAK,gBACLD,MAAM,iBACNtI,KAAK,SACLqI,WAAS,EACTmN,cAAY,KAGvC,6BACA,0BAAMpK,MAAO,CAAEzI,MAAO,QACPzC,EAAOie,eAGpB,kBAAChV,EAAA,EAAD,CACwBnJ,KAAK,SACLqI,WAAS,EACT3F,QAAQ,YACRC,MAAM,UACNyE,UAAWF,EAAQkC,QAL3C,aAeN,kBAACqJ,GAAA,EAAD,CAAMhS,MAAI,EAACqS,IAAE,UCxMP6L,GAAmB,SAAAvc,GAC/B,MAAO,CAAEpC,KnC3HgC,+B,oDoClBpCiD,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCoI,OAAQ,CACJC,YAAarI,EAAMc,QAAQ,QAkHnC,IAIe2a,eAAWna,aAJF,SAAA3E,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,QAGU4E,EAlH1B,SAA0BY,GAEtB,IAAM6B,EAAUjE,KAFa,EAKHqC,mBAAS,GALN,mBAKtBiS,EALsB,KAKfsH,EALe,OAMWvZ,oBAAS,GANpB,mBAMtBwZ,EANsB,KAMRC,EANQ,KAgCzB,OATHjY,qBAAU,SAAA1E,GAAM,IACLvC,EAASwF,EAATxF,KAERgC,IAAMkF,IAAN,+CAAkDlH,EAAKhC,KAAK0H,WAC3DV,MAAK,SAAAC,GAAG,OAAI+Z,EAAS/Z,EAAIC,SACzBG,OAAM,SAAAC,GAAG,OAAIA,OAEhB,CAAC2Z,IAGK,yBAAK1X,UAAWF,EAAQqE,QACnB,kBAACX,GAAA,EAAD,KAGD,kBAACC,GAAA,EAAD,CAAUC,QAAM,EAACxD,UAAU,IAAIxE,KAAK,QAChC,kBAACiI,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,UAI1B,kBAACJ,GAAA,EAAD,CAAUC,QAAM,EAACxD,UAAU,IAAIxE,KAAK,iBAChC,kBAACiI,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,cAI1B,kBAACJ,GAAA,EAAD,CAAUC,QAAM,EAACxD,UAAU,IAAIxE,KAAK,yBAChC,kBAACiI,GAAA,EAAD,KACK,kBAAC,KAAD,OAEL,kBAACC,GAAA,EAAD,CAAcC,QAAQ,mCAG5B,kBAACJ,GAAA,EAAD,CAAUC,QAAM,EAACxD,UAAU,IAAIxE,KAAK,mBAC1B,kBAACiI,GAAA,EAAD,KACQ,kBAAC,KAAD,OAER,kBAACC,GAAA,EAAD,CAAcC,QAAQ,yBAI9B,kBAACJ,GAAA,EAAD,CAAUC,QAAM,EAACxD,UAAU,IAAIxE,KAAK,IAAI2E,QAAS,SAAArF,GAAC,OA3D/B,SAAA7B,GAAW,IACtBV,EAASwF,EAATxF,KACFmf,EAAO,CAAEze,UAEfsB,IAAM+C,KAAN,sDAA0D/E,EAAKhC,KAAK0H,UAAYyZ,GAC/Ena,MAAK,SAAAC,GACFia,GAAgB,GAChB1Z,EAAM2B,QAAQC,KAAK,yBAEtB/B,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,MAkD4B8Z,CAAkB,UACrE,kBAAClU,GAAA,EAAD,KACS,kBAACmU,GAAA,EAAD,CAAOC,aAAc5H,EAAO5U,MAAM,aAChD,kBAAC,KAAD,QAIU,kBAACqI,GAAA,EAAD,CAAcC,QAAQ,oBAMhC,kBAACC,GAAA,EAAD,MAEA,kBAACN,GAAA,EAAD,KAEM,kBAACC,GAAA,EAAD,CAAUC,QAAM,EAACrD,QAASpC,EAAM+Z,iBAC5B,kBAACrU,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAQ,wBAG1B,kBAACJ,GAAA,EAAD,CAAUO,MAAO,CAAEzI,MAAO,OAASmI,QAAM,EAACrD,QAASpC,EAAMoC,SACrD,kBAACsD,GAAA,EAAD,KACI,kBAAC,KAAD,CAAsBpI,MAAM,WAEhC,kBAACqI,GAAA,EAAD,CACAC,QAAQ,kBCzEhC,IAIMW,GAAqB,CAAEyT,gBlB4BE,SAAAjd,GAAC,OAAI,SAAAC,GACnCA,EAASsJ,IACT9J,IAAMkF,IAAI,yBACTlC,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnBOkC,uBmBNlCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAIA,QkBjCAV,gBANS,SAAA3E,GAAK,MAAK,CACjCqB,YAAarB,EAAMqB,eAKoByK,GAAzBnH,EA/Cf,SAAyBY,GAExByB,qBAAU,SAAA1E,GACTiD,EAAMga,oBACL,IAED,IAAMlY,EAAO9B,EAAMlE,YAAY3B,KAAKsM,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAEvF,OAEC,kBAACC,GAAA,EAAD,CAAQC,QAAS9G,EAAM+G,YACvBC,kBAAgB,sBAChB7B,KAAMnF,EAAMmF,MAEX,kBAAC8B,GAAA,EAAD,CAAa5L,GAAG,uBAAhB,gCACD,kBAACkK,GAAA,EAAD,KAEEvF,EAAMlE,YAAYxB,WAElB,kBAACkL,GAAA,EAAD,KACU,kBAACG,GAAA,EAAD,CAAcC,QAAQ,gBAGzB9D,EAAK/G,KAAI,SAAA4J,GAAG,OACX,kBAACa,GAAA,EAAD,CAAUZ,IAAKD,EAAItJ,IAChB,kBAAC6L,GAAA,EAAD,KACE,uBAAGzJ,KAAMkH,EAAIwC,KAAM5F,OAAO,UACV,kBAAC,KAAD,QAGlB,kBAACoE,GAAA,EAAD,CAAcC,QAASjB,EAAIyC,oBCXpCxJ,GAAYC,aAAW,SAAAC,GAAK,YAAK,CAClCC,KAAM,CACHQ,MAAO,QAEXqL,OAAK,GACDzL,QAAS,QADR,cAEAL,EAAM2M,YAAYC,GAAG,MAAQ,CAC1BvM,QAAS,UAHZ,yBAKS,GALT,GAOL2L,eAAe,aACX3L,QAAS,QACRL,EAAM2M,YAAYC,GAAG,MAAQ,CAC1BvM,QAAS,SAGjB+L,cAAc,aACV/L,QAAS,QACRL,EAAM2M,YAAYC,GAAG,MAAQ,CAC1BvM,QAAS,SAKjBqM,KAAK,CACDjM,MAAO,SAkCT8I,GAAa,SAAArH,GACf,OAAO,kBAACsH,GAAA,EAAD,eAAOC,UAAU,MAASvH,KA6PrC,IAIMuG,GAAqB,CAAEzJ,cAEdyc,eAAWna,aANF,SAAA3E,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,QAKmC+L,GAAzBnH,CAA6C6G,cAlSxD,SAAAnI,GAAK,YAAK,CACrBC,KAAM,CACFQ,MAAO,QAEXqL,OAAK,GACDzL,QAAS,QADR,cAEAL,EAAM2M,YAAYC,GAAG,MAAQ,CAC1BvM,QAAS,UAHZ,yBAKS,GALT,GAOL2L,eAAe,aACX3L,QAAS,QACRL,EAAM2M,YAAYC,GAAG,MAAQ,CAC1BvM,QAAS,SAGjB+L,cAAc,aACV/L,QAAS,QACRL,EAAM2M,YAAYC,GAAG,MAAQ,CAC1BvM,QAAS,SAKjBqM,KAAK,CACDjM,MAAO,QAwQwD0H,EA9PvE,SAAkBjG,GAAO,MAIWC,mBAAS,MAJpB,mBAIdkI,EAJc,KAIJ8R,EAJI,OAK2Bha,mBAAS,MALpC,mBAKdmI,EALc,KAKI8R,EALJ,OAMiBja,mBAAS,MAN1B,mBAMdoI,EANc,KAMD8R,EANC,OAOGla,oBAAS,GAPZ,mBAOdkF,EAPc,KAORmO,EAPQ,OAQGrT,mBAAS,CAC7BhB,KAAK,EACLC,MAAM,EACNkb,QAAQ,EACR7R,OAAO,IAZU,mBAQdb,EARc,KAQR2S,EARQ,OAgBKpa,mBAAS,GAhBd,mBAgBdiS,EAhBc,KAgBPsH,EAhBO,OAkBmBvZ,oBAAS,GAlB5B,mBAkBdwZ,EAlBc,KAkBAC,EAlBA,KAuBhBjS,EAAe,SAACC,EAAMvC,GAAP,OAAgB,SAAA8H,IAEjB,YAAfA,EAAMtS,MAAqC,QAAdsS,EAAMrI,KAA+B,UAAdqI,EAAMrI,MAI9DyV,EAAQ,2BAAK3S,GAAN,kBAAaA,EAAOvC,OAQtBwC,EAAkB,SAAA5K,GAEnBkd,EAAY,OAcVjS,EAAqB,SAAAjL,GAGnBod,GAAe,GACfD,EAAoB,OAGtBjS,EAA2B,SAAAlL,GAE7Bod,GAAe,IAoCnB1Y,qBAAU,SAAA1E,GAAM,IACJvC,EAASwF,EAATxF,KAERgC,IAAMkF,IAAN,+CAAkDlH,EAAKhC,KAAK0H,WAC3DV,MAAK,SAAAC,GAAG,OAAI+Z,EAAS/Z,EAAIC,SACzBG,OAAM,SAAAC,GAAG,OAAIA,OAEhB,CAAC2Z,IAGC,IAAM5X,EAAWjE,KACX6K,EAAaC,QAAQP,GACrBQ,EAAiBD,QAAQN,GAGzBQ,EACF,kBAAC,KAAD,CACIT,SAAUA,EACVU,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,SAChD5D,KAAMsD,EACN3B,QAASa,GAET,kBAACsB,GAAA,EAAD,CAAU7G,QAASuF,GAAnB,gBACA,kBAACsB,GAAA,EAAD,CAAU7G,QAASuF,GAAnB,iBAIFuB,EACF,kBAAC,KAAD,CACIf,SAAUC,EACVS,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,SAChD5D,KAAMwD,EACN7B,QArFgB,SAAA/J,GAExBmd,EAAoB,QAqFZ,kBAACjR,GAAA,EAAD,CAAU7G,QAhDK,SAAArF,GACvBuW,GAAQ,GACR4G,EAAoB,QA8CZ,uBACA,kBAACjR,GAAA,EAAD,CAAU7G,QAAS4F,EAAoBjC,MAAO,CAAEzI,MAAO,QAAvD,YAIR,OACI,yBAAKyE,UAAWF,EAAQ9D,MAEpB,kBAAC,GAAD,CAAiBgJ,YA5DT,SAAAhK,GAChBuW,GAAQ,IA2D2CnO,KAAMA,IAGjD,kBAAC0B,GAAA,EAAD,CACI1B,KAAMkD,EACNc,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAASmB,EACTjB,kBAAgB,2BAChBqC,mBAAiB,kCAEjB,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,eAEL,kBAACiO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,gCAIJ,kBAACmO,GAAA,EAAD,KACI,kBAAC1F,EAAA,EAAD,CAAQ1B,QAAS6F,EAA0B5K,QAAQ,WAAWC,MAAM,WAApE,UAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAnGN,SAAArF,GAClBiD,EAAMlD,cAkG0CO,QAAQ,WAAWC,MAAM,aAAzD,YAQR,kBAACmM,GAAA,EAAD,CAAQ3K,SAAS,UACb,kBAAC4K,GAAA,EAAD,CAAS3D,MAAO,CAAE4D,WAAY,YAC1B,kBAACvM,EAAA,EAAD,CAAY2E,UAAWF,EAAQ+H,MAAOvM,QAAQ,KAAKC,MAAM,UAAUuM,QAAM,GAAzE,kBAIA,yBAAK9H,UAAWF,EAAQiI,gBACpB,kBAAChG,EAAA,EAAD,CAAQxG,MAAM,UAAUG,KAAK,QAA7B,QACA,kBAACqG,EAAA,EAAD,CAAQxG,MAAM,UAAUG,KAAK,iBAA7B,YAGA,kBAACqG,EAAA,EAAD,CAAQxG,MAAM,UAAUG,KAAK,yBAA7B,iCACA,kBAACqG,EAAA,EAAD,CAAQxG,MAAM,UAAUG,KAAK,mBAA7B,uBAGA,kBAACqG,EAAA,EAAD,CAAQxG,MAAM,UAAU8E,QAAS,SAAArF,GAAC,OAtHhC,SAAA7B,GAAW,IACzBV,EAASwF,EAATxF,KACFmf,EAAO,CAAEze,UAEfsB,IAAM+C,KAAN,sDAA0D/E,EAAKhC,KAAK0H,UAAYyZ,GAC/Ena,MAAK,SAAAC,GACFia,GAAgB,GAChB1Z,EAAM2B,QAAQC,KAAK,yBAEtB/B,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,MA6GgC8Z,CAAkB,UACpD,kBAACC,GAAA,EAAD,CAAOC,aAAc5H,EAAO5U,MAAM,aAC9B,kBAAC,KAAD,QAIR,kBAACwG,EAAA,EAAD,CACIxG,MAAM,UACNyM,YAAWpB,EAAiB,uBAAoBqB,EAChDC,gBAAc,OACd7H,QA5JF,SAAAjB,GAEtB+Y,EAAoB/Y,EAAEqH,iBA4JE,kBAAC,KAAD,QAKR,yBAAKzG,UAAWF,EAAQqI,eACpB,kBAACpG,EAAA,EAAD,CACI1B,QAASqF,EAAa,SAAQ,GAAOnK,MAAM,WAC3C,kBAAC,KAAD,QAIR,kBAAC6M,GAAA,EAAD,CAAQC,OAAO,QAAQjF,KAAMuC,EAAKa,MAClCzB,QAASW,EAAa,SAAQ,IAE9B,yBACI4C,SAAU,EACVC,KAAK,SAGLlI,QAASqF,EAAa,SAAS,GAE/B8C,UAAW9C,EAAa,SAAS,IAEjC,kBAAC,GAAD,CAAiBnC,MAAOzD,EAAQ2I,KAAMpI,QAAS4F,EAAoB+R,gBArInE,SAAAhd,GACnBuW,GAAQ,UA4IA1K,EACAM,QClTXtL,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,2BACID,EAAMkN,OAAOC,WADlB,IAEEJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEbkZ,SAAU,CACR5F,MAAO,QACPvF,SAAU,QAIhB,SAASvB,GAAa3K,GAClB,OAAO,kBAACwF,GAAA,EAAD,eAAUC,QAAM,EAACxD,UAAU,KAAQjC,IAkL9C,IAKMuG,GAAqB,CAAE+T,YJ9MF,SAAAvd,GAAC,OAAI,SAAAC,GAC/BA,EAASsc,IACT9c,IAAMkF,IAAI,sCACTlC,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnCS2B,gBmCR3BC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAIA,QIyMAV,gBAPS,SAAA3E,GAAK,MAAK,CACjCD,KAAKC,EAAMD,KACVkB,kBAAmBjB,EAAMiB,qBAKa6K,GAAzBnH,EAtLf,SAAkBY,GACjB,IAAM6B,EAAUjE,KADQ,EAIUqC,mBAAS,IAJnB,mBAIjBsa,EAJiB,KAINC,EAJM,OAMgBva,oBAAS,GANzB,mBAMhBwa,EANgB,KAMCC,EAND,KAWxBjZ,qBAAU,SAAA1E,GAAM,IACPvC,EAASwF,EAATxF,KAGAgC,IAAMkF,IAAI,yBACXlC,MAAK,SAAAC,GACJA,EAAIC,KAAKvE,QAAO,SAAAK,GAAG,OAAIhB,EAAKhC,KAAK0H,WAAa1E,EAAI0E,YACjDnF,KAAI,SAAAS,GAAG,OAAIgf,EAAahf,EAAIyd,eAE9BpZ,OAAM,SAAAC,GAAG,OAAIA,OAQnB,IAGD2B,qBAAU,SAAA1E,GAER,IAAM1B,EAAKmY,aAAY,SAAAzW,GACnBiD,EAAMsa,cACNI,GAAY,KACb,KAEH,OAAO,SAAA3d,GACL0W,cAAcpY,MAGhB,IA1CqB,IA4Cfb,EAA4BwF,EAA5BxF,KAEFsH,EAF8B9B,EAAtBtE,kBAEiBrC,MAAMoN,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KACpFzL,QAAO,SAAAwJ,GAAG,OAAIA,EAAIzE,WAAa1F,EAAKhC,KAAK0H,YAEtC,OACI,6BACI,kBAAC,GAAD,MAET,kBAAC8B,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE9B,kBAACC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,IAE3C,kBAAC/I,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE9B,kBAACzN,EAAA,EAAD,CAAYC,QAAQ,KAAK4E,UAAU,MAAnC,WACS,0BAAM8D,MAAO,CAACzI,MAAO,QAArB,IAA+Bid,EAA/B,KADT,0CAGA,6BAEA,kBAACnd,EAAA,EAAD,CAAY6E,UAAU,KAAtB,yCAIW,yBAAKF,UAAWF,EAAQ9D,MAEvB,kBAACwH,GAAA,EAAD,CAAMtD,UAAU,OAGZ,kBAAC,GAAD,CAAcxE,KAAK,iBACjB,kBAACiI,GAAA,EAAD,KACK,kBAAC,KAAD,OAEP,kBAACC,GAAA,EAAD,CAAcC,QAAQ,6BAItB,kBAAC,GAAD,CAAcnI,KAAK,yBACjB,kBAACiI,GAAA,EAAD,KACC,kBAAC,KAAD,OAEH,kBAACC,GAAA,EAAD,CAAcC,QAAQ,6EAItB,kBAAC,GAAD,CAAcnI,KAAK,mBACjB,kBAACiI,GAAA,EAAD,KACK,kBAAC,KAAD,OAEP,kBAACC,GAAA,EAAD,CAAcC,QAAQ,oEAO1B,4BAAQG,MAAO,CAACmF,cAAe,KAClC,kBAACpH,EAAA,EAAD,CAAQzG,QAAQ,WAAWC,MAAM,YAAYyE,UAAWF,EAAQ4D,QAAhE,oBASV,6BAEA,kBAACqF,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,EAAGhF,MAAO,CAAC8E,WAAY,KAElE,kBAAC7I,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE9B,kBAACzN,EAAA,EAAD,CAAY6E,UAAU,KAAtB,oBAKW,kBAACsD,GAAA,EAAD,CAAMtD,UAAU,MAAM2B,aAAW,6BAG7B6W,EAEE,kBAAC,WAAD,KACG,kBAACjV,GAAA,EAAD,KACC,kBAACvB,EAAA,EAAD,CAAkB3G,MAAM,cACzB,kBAACqI,GAAA,EAAD,CAAcC,QAAS,6BAI5B,kBAAC,WAAD,KAGsB,IAAhB9D,EAAK8R,OAEP,kBAACpO,GAAA,EAAD,KAEG,kBAACG,GAAA,EAAD,CAAcC,QAAS,0CAIxB9D,EAAK/G,KAAI,SAAA4J,GAAG,OACZ,kBAAC,WAAD,KACI,kBAACa,GAAA,EAAD,KACK,kBAACG,GAAA,EAAD,KACChB,EAAI2H,QACL,0BAAMvK,UAAWF,EAAQwV,UACxBV,KAAOhS,EAAIiC,YAAY+T,0B,0CC3KzD/c,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,2BACID,EAAMkN,OAAOC,WADlB,IAEEJ,WAAY/M,EAAMc,QAAQ,KAEhC+T,MAAO,CACNnB,QAAS1T,EAAMc,QAAQ,IAExB+O,KAAM,CACAU,OAAQ,OACRlQ,QAAS,OACTC,cAAe,UAEjByP,UAAW,CACThD,WAAY,UAEdoD,YAAa,CACXjQ,SAAU,GAEZgV,KAAM,CACJ4H,eAAgB,YA6ITC,OAzIf,SAAgC7a,GAC9B,IAAM6B,EAAUjE,KADqB,EAGbqC,oBAAS,GAHI,mBAG9BkF,EAH8B,KAGxBmO,EAHwB,KAS/BvM,EAAc,WAClBuM,GAAQ,IAKV,OAEE,6BAEA,kBAACzM,GAAA,EAAD,CACI1B,KAAMA,EACN2B,QAASC,EACTC,kBAAgB,qBAChBqC,mBAAiB,4BAEjB,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,sBAAsB,iCACtC,kBAACiO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,4BAAtB,qHAKF,kBAACmO,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QAAS2E,EAAazJ,MAAM,WAApC,YAIC,kBAACF,EAAA,EAAD,KACI,kBAAC,IAAD,CAAM0d,GAAG,mBAAmB/Y,UAAWF,EAAQmR,MAC5C,kBAAClP,EAAA,EAAD,CAAQxG,MAAM,UAAU6F,WAAS,GAAjC,aAUd,kBAAC,GAAD,MAEE,kBAACnB,EAAA,EAAD,CAAWD,UAAWF,EAAQ9D,MAE5B,kBAACqP,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAErB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GAErB,kBAACE,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MAEvB,kBAACC,GAAA,EAAD,CACE7L,UAAWF,EAAQgM,UACnBC,MAAOxU,KACPsQ,MAAM,uBAGR,kBAACoE,GAAA,EAAD,CAAajM,UAAWF,EAAQoM,aAE5B,kBAAC7Q,EAAA,EAAD,CAAY8Q,cAAY,EAAC7Q,QAAQ,KAAK4E,UAAU,MAAhD,sCAIA,kBAAC7E,EAAA,EAAD,CAAY6E,UAAU,KAAtB,qJASJ,kBAACkM,GAAA,EAAD,KACI,kBAACrK,EAAA,EAAD,CAAQrG,KAAK,0CAA0CyG,KAAK,QAAQ7G,QAAQ,WAAWC,MAAM,aAA7F,4BASR,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GAErB,kBAACE,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MAEvB,kBAACC,GAAA,EAAD,CACE7L,UAAWF,EAAQgM,UACnBC,MAAOlV,KACPgR,MAAM,sBAGR,kBAACoE,GAAA,EAAD,CAAajM,UAAWF,EAAQoM,aAE5B,kBAAC7Q,EAAA,EAAD,CAAY8Q,cAAY,EAAC7Q,QAAQ,KAAK4E,UAAU,MAAhD,sCAIF,kBAAC7E,EAAA,EAAD,CAAY6E,UAAU,KAAtB,yPAWF,kBAACkM,GAAA,EAAD,KACK,kBAACrK,EAAA,EAAD,CAAQ1B,QAAS,SAAArF,GAAC,OAAIuW,GAAQ,IAAOpP,KAAK,QAAQ7G,QAAQ,WAAWC,MAAM,aAA3E,oC,2CClJfoU,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CACzC6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANQjG,CAQlBxB,MAGAqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC5B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAO1D,IAAM3J,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAK,2BACID,EAAMkN,OAAOC,WADlB,IAEEJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjCJ,MAAO,CACLC,SAAU,KAEZmU,aAAc,CACZC,UAAW,QAEbG,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,QAIZ,SAAS0M,GAAyB/a,GACjC,IAAM6B,EAASjE,KADyB,EAMfmP,IAAM9M,SAAS,GANA,mBAMhCkS,EANgC,KAM1Be,EAN0B,OAODnG,IAAM9M,SAAS,GAPd,mBAOhCmS,EAPgC,KAOnBe,EAPmB,OAUTlT,oBAAS,GAVA,mBAUhCxH,EAVgC,KAUvBoI,EAVuB,KA2BvCY,qBAAU,SAAA1E,GAER,IAAM1B,EAAKmY,aAAY,SAAAzW,GACrBiD,EAAMgb,gBACNna,GAAW,KACV,KAEH,OAAO,SAAA9D,GACL0W,cAAcpY,MAGhB,IAtCqC,IAwC/Bb,EAA4BwF,EAA5BxF,KAIFsH,EAJ8B9B,EAAtBtE,kBAIiB1C,QAAQyN,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAC5EzL,QAAO,SAAAwJ,GAAG,OAAIA,EAAIzE,WAAa1F,EAAKhC,KAAK0H,YAGjDwT,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAE3E,OACE,kBAAC,WAAD,KAGO,yBAAKrQ,UAAWF,EAAQ+Q,cACrB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE1C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,sBACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,oBAKR,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAMJ,kBAAC,WAAD,KAEkB,IAAhBwE,EAAK8R,OAEH,kBAACpP,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WAClD,yHAKR,kBAAC,WAAD,MAEGgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAEH/G,KAAI,SAAC4J,EAAKtJ,GAAN,OAEL,kBAACmJ,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIsW,gBAEP,kBAACxW,GAAA,EAAD,CAAWlH,MAAM,QACjB,uBAAGE,KAAMkH,EAAIwC,KAAM5F,OAAO,UACvB,kBAAC,KAAD,OAEFoD,EAAIyC,gBAWRsM,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAMtB,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KACE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aA1HM,SAACpF,EAAOuH,GAChCtB,EAAQsB,IA0HUC,oBAvHY,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAsHUyB,iBAAkB3C,UAYxC+I,GAAyBG,SAAW,CAClCvZ,QAASwZ,KAAUC,OAAOC,YAG5B,IAKM9U,GAAqB,CAAEyU,cNpPA,SAAAje,GAAC,OAAI,SAAAC,GACjCA,EAASsc,IACT9c,IAAMkF,IAAI,+CACTlC,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnCAoC,yBmCCpCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAIA,QM+OAyZ,eAAWna,aAPF,SAAA3E,GAAK,MAAK,CAChCD,KAAKC,EAAMD,KACXkB,kBAAmBjB,EAAMiB,qBAKwB6K,GAAzBnH,CAA6C2b,KCzQjEzP,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCK+O,G,2KAtBX,OACE,6BACE,kBAACzO,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAAC,GAAD,CACEA,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAS+H,KAAKpF,MAAM3C,QACpBiP,QAASlH,KAAKpF,MAAMsM,gB,GAhBES,IAAM/G,WC7DlCpI,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCkV,KAAM,CACJ7U,QAAS,QAEV8N,KAAM,CACJI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAEPpQ,MAAM,aACJsT,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG5ByM,MAAO,CACRlN,QAAS,QAEVQ,OAAQ,CACPA,OAAQb,EAAMc,QAAQ,IAExBmF,OAAO,CACD7F,UAAWJ,EAAMc,QAAQ,QAiRjC,IAMM2H,GAAqB,CAAEgV,cR7RA,SAAA7b,GAAI,OAAI,SAAA1C,GACpCR,IAAM+C,KAAK,uCAAwCG,GAClDF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnCVuC,4BmCWvCC,QAAS6E,EAAIC,UAGbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,aQsRTN,gBARS,SAAA3E,GAAK,MAAK,CAChCD,KAAKC,EAAMD,KACXkB,kBAAmBjB,EAAMiB,kBACzBb,OAAQJ,EAAMI,UAKwB0L,GAAzBnH,EArRf,SAAkCY,GAEhC,IAAM6B,EAAUjE,KAFuB,EAMTqC,mBAAS,IANA,mBAMhCgZ,EANgC,KAMvBuC,EANuB,OASXvb,mBAAS,IATE,mBAShCpF,EATgC,KASxByF,EATwB,OAYfL,oBAAS,GAZM,mBAYhCkF,EAZgC,KAY1BmO,EAZ0B,OAcjBrT,mBAAS,CAC7BkH,KAAM,GACNC,SAAS,KAhB4B,mBAchCqU,EAdgC,KAc3BC,EAd2B,KA8FvC,OAjCAja,qBAAU,SAAA1E,GAAM,IACRvC,EAASwF,EAATxF,KAEFa,EAAKmY,aAAY,SAAAzW,GAEvBP,IAAMkF,IAAI,yBACTlC,MAAK,SAAAC,GACLA,EAAIC,KAAKvE,QAAO,SAAAK,GAAG,OAAIhB,EAAKhC,KAAK0H,WAAa1E,EAAI0E,YACjDnF,KAAI,SAAAS,GAAG,OAAIggB,EAAWhgB,EAAIyd,eAE3BpZ,OAAM,SAAAC,GAAG,OAAIA,OAEX,KAEH,OAAO,SAAA/C,GACN0W,cAAcpY,MAGd,IAGDoG,qBAAU,SAAA1E,GACNiD,EAAMnF,QACRyF,EAAUN,EAAMnF,UAChB,CAACmF,EAAMnF,SAGT4G,qBAAU,SAAA1E,GACNiD,EAAMtE,kBAAkBtC,WAC1Bka,GAAQ,KACR,CAACtT,EAAMtE,kBAAkBtC,YAIzB,6BAEA,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAqB+L,KAAMA,EAAM2B,QAhDf,SAACmG,EAAOC,GACC,cAAXA,GAIJoG,GAAQ,IA2CmCjW,QAAQ,UAAUiP,QAAQ,+BAE/E,kBAACtK,EAAA,EAAD,CAAWE,SAAS,KAAK6D,MAAO,CAAC8E,WAAY,KAE5C,kBAACgJ,GAAA,EAAD,CAAajQ,aAAW,cACvB,kBAACpG,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,wBAAwBsE,UAAWF,EAAQmR,MACrE,kBAAC,KAAD,CAAUjR,UAAWF,EAAQoK,OAD9B,QAKE,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,0CACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAWjR,UAAWF,EAAQoK,OAN9B,qBAYH,kBAACmB,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAGxB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GAExB,kBAAC1C,GAAA,EAAD,CAAO/I,UAAWF,EAAQ5D,OAExB,kBAACb,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,yBAGO,6BAEL,kBAACyE,EAAA,EAAD,CAAWE,SAAS,MAEjB,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAIY,0BAAMoF,YAAU,EAACC,SA1GpB,SAAAvB,GACpBA,EAAEC,iBADuB,IAGlB5G,EAASwF,EAATxF,KASFmhB,EC1FD,SAASC,EAAeR,EAAQ9c,EAAMud,GAC3C,IAAIC,EAAWxd,GAAQ,IAAIyd,SAC3B,IAAK,IAAIC,KAAYZ,EACnB,GAAKA,EAAOa,eAAeD,IAAcZ,EAAOY,GAAhD,CAGA,IAAIE,EAAUL,EAAYA,EAAY,IAAMG,EAAW,IAAMA,EACzDZ,EAAOY,aAAqBte,KAE9Boe,EAASK,OAAOD,EAASd,EAAOY,GAAUI,eAEJ,kBAArBhB,EAAOY,IAA4BZ,EAAOY,aAAqBK,KAKhFP,EAASK,OAAOD,EAASd,EAAOY,IAHhCJ,EAAeR,EAAOY,GAAWF,EAAUI,GAM/C,OAAOJ,EDuEWF,CAPM,2BACpBH,GADoB,IAEvBxC,UACA/Y,SAAU1F,EAAKhC,KAAK0H,SAClB6E,OAAQvK,EAAKhC,KAAKuM,UAMpB/E,EAAMub,cAAcI,IA2F4CW,QAAQ,uBAGhD,kBAACzZ,EAAA,EAAD,CACCrB,MAAOia,EAAIR,eACX7X,SAAU,SAAAjC,GAAC,OAAIua,EAAO,2BAAID,GAAL,IAAUR,eAAgB9Z,EAAEI,OAAOC,UAChDnG,GAAG,iBACH6H,KAAK,iBACLD,MAAM,yBACND,WAAS,EACTmN,aAAa,mBAEjB,6BACA,0BAAMpK,MAAO,CAAEzI,MAAO,QACzBzC,EAAOogB,gBAEJ,6BAGA,yBAAKlZ,UAAWF,EAAQlD,QACzC,kBAACyO,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,EAAGP,WAAW,YAErC,kBAAC+O,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAItB,2BAAOnK,SAAU,SAAAjC,GAAC,OAAIua,EAAO,2BAAID,GAAL,IAAUtU,KAAMhG,EAAEI,OAAOgb,MAAM,GAAInV,SAAUjG,EAAEI,OAAOgb,MAAM,GAAGrZ,SAC3FnB,UAAWF,EAAQwJ,MAAOhQ,GAAG,OAAO6H,KAAK,OAAOvI,KAAK,SAChD,2BAAO6V,QAAQ,QACb,kBAAC9M,GAAA,EAAD,CAAYpG,MAAM,UAAUsG,aAAW,iBAAiB3B,UAAU,QAChE,kBAAC,KAAD,SAMF,kBAACmL,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACb,kBAAC1K,EAAA,EAAD,CACArB,MAAOia,EAAIrU,SACX/L,GAAG,uBACH4H,MAAM,mBACNI,WAAW,uCACXL,WAAS,EACPO,WAAY,CACc6V,UAAU,GAEdnJ,gBAAiB,CACfC,QAAQ,QAoB1C,0BAAMnK,MAAO,CAAEzI,MAAO,QACJzC,EAAOsM,MAGzB,6BAGH,kBAACtE,EAAA,EAAD,CACCrB,MAAOia,EAAIxE,YACX7T,SAAU,SAAAjC,GAAC,OAAIua,EAAO,2BAAID,GAAL,IAAUxE,YAAa9V,EAAEI,OAAOC,UAC1BnG,GAAG,cACH6H,KAAK,cACLD,MAAM,+BACND,WAAS,EACT4N,WAAS,IAEb,0BAAM7K,MAAO,CAAEzI,MAAO,QACzBzC,EAAOoc,aAGF,kBAACnT,EAAA,EAAD,CACDnJ,KAAK,SACLqI,WAAS,EACT3F,QAAQ,YACRC,MAAM,UACNyE,UAAWF,EAAQkC,QALlB,cAoB9B,kBAACqJ,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GAEpB,kBAAC1C,GAAA,EAAD,CAAO/I,UAAWF,EAAQ5D,OAExB,kBAACb,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,gBAGO,6BAED,kBAAC,GAAD,cEtSTK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,2BACID,EAAMkN,OAAOC,WADlB,IAEEJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAElC+T,MAAM,CACJpU,MAAO,OACR2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE7Cue,OAAQ,CACLre,QAAS,UAETqM,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEbkZ,SAAU,CACR5F,MAAO,QACPvF,SAAU,IAEZuQ,UAAW,CACVrO,UAAW,SACXlQ,UAAW,QAyIhB,IAMekB,gBANS,SAAA3E,GAAK,MAAK,CACjCD,KAAMC,EAAMD,QAKE4E,EA3If,SAA0BY,GAEzB,IAAM6B,EAAUjE,KAFgB,EAKJqC,mBAAS,IALL,mBAKzByc,EALyB,KAKjBC,EALiB,OAOQ1c,oBAAS,GAPjB,mBAOzB2c,EAPyB,KAOXC,EAPW,KAahCpb,qBAAU,SAAA1E,GACTP,IAAMkF,IAAI,8CACTlC,MAAK,SAAAC,GACLkd,EAAUld,EAAIC,MACdmd,GAAgB,MAEhBhd,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QAEzB,IArB8B,IAuBxBtF,EAASwF,EAATxF,KAEFsH,EAAO4a,EAAOjW,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KACpEzL,QAAO,SAAAwJ,GAAG,OAAIA,EAAIzE,WAAa1F,EAAKhC,KAAK0H,YAG1C,OACE,kBAAC,WAAD,KAEC,kBAAC,GAAD,MAEA,kBAAC8B,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE9B,kBAACC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,IAE1C,kBAAC3N,EAAA,EAAD,CAAYC,QAAQ,KAAK4E,UAAU,MAAnC,+BAIH,kBAACsD,GAAA,EAAD,CAAMxD,UAAWF,EAAQ9D,MAIpB6e,EAEA,kBAAC,WAAD,KACA,yBAAK7a,UAAWF,EAAQ4a,WACvB,kBAACxY,EAAA,EAAD,CAAkB3G,MAAM,YAAY4G,KAAM,KAC/B,6BACD,+CAIX,kBAAC,WAAD,KAEiB,IAAhBpC,EAAK8R,OAEL,kBAAC,WAAD,KACK,kBAACpO,GAAA,EAAD,CAAUnH,WAAW,cAEpB,0BAAM0H,MAAO,CAACqI,UAAW,WAAzB,kCAMD,kBAACvI,GAAA,EAAD,CAASxI,QAAQ,QAAQ4E,UAAU,QAIxC,kBAAC,WAAD,KAECH,EAAK/G,KAAI,SAAA4J,GAAG,OACX,kBAAC,WAAD,KACG,kBAACa,GAAA,EAAD,CAAUnH,WAAW,cAEnB,kBAACsH,GAAA,EAAD,CACEC,QAASjB,EAAIwU,aACb2D,UACE,kBAAC,WAAD,KAECnY,EAAIuI,OAEJ,kBAAC,WAAD,KACA,kBAAC9P,EAAA,EAAD,CACA6E,UAAU,OACV5E,QAAQ,QACR0E,UAAWF,EAAQ2a,OACnBlf,MAAM,eAEN,0BAAMyI,MAAO,CAACzI,MAAO,QAArB,UANA,KAQUqH,EAAIuI,QATd,aAWQyJ,KAAOhS,EAAIiC,YAAY+T,YAIjC,kBAAC,WAAD,KACIhE,KAAOhS,EAAIiC,YAAY+T,eAShC,kBAAC9U,GAAA,EAAD,CAASxI,QAAQ,QAAQ4E,UAAU,oBCrJ5CrE,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,YA+DF4e,OA1Df,SAAqB/c,GACpB,IAAM6B,EAAUjE,KADW,EAGIqC,mBAAS,IAHb,mBAGjBiV,EAHiB,KAGTC,EAHS,KAiC3B,OA5BG1T,qBAAU,SAAA1E,GACNP,IAAMkF,IAAI,uBACTlC,MAAK,SAAAC,GAAG,OAAI0V,EAAU1V,EAAIC,SAC1BG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QAC5B,IAyBJ,6BACc,kBAAC,GAAD,MAEA,kBAACkC,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE9B,kBAACC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,IAE1C,kBAAC,KAAD,CACLqK,QAAS,CAAEC,KAAgBC,MAC3BC,YAAY,eACZC,UAAU,EACKN,OAAQA,EACRO,aA9BG,SAAAC,GAAS,OAC5B,kBAAC,WAAD,KAGA,uBAAGjY,KAAI,wBAAmBiY,EAAUzI,MAAM0I,KAAKC,WAE7C,0BAAM7P,MAAO,CAACzI,MAAO,QAAS6N,gBAAgB,GAAD,OAAIuK,EAAUvK,mBAE1D,2BAAIuK,EAAUG,UAFf,QAGE,8BAAOH,EAAUzI,MAAMrD,WAsBXkM,UApCN,SAAAC,GAEd/V,EAAM2B,QAAQC,KAAd,qCAAiDmU,EAAIC,iBCbvDpY,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEb6U,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAETV,KAAM,CACN8D,MAAO,SACNvP,SAAU,KAEZ+T,MAAO,CACL7H,UAAW,UAEb8H,OAAQ,CACN/K,gBAAiBgL,KAAI,UAuGV6G,OAlGf,SAAwBhd,GACvB,IAAM6B,EAAUjE,KADc,EAGJqC,mBAAS,IAHL,mBAGvBgN,EAHuB,KAGhBoJ,EAHgB,KAa9B,OARA5U,qBAAU,SAAA1E,GACTP,IAAMkF,IAAN,6BAAgC1B,EAAMsW,MAAMC,OAAOlb,KAClDmE,MAAK,SAAAC,GAAG,OAAI4W,EAAS5W,EAAIC,SACzBG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QACzB,IAKA,6BAEE,kBAAC,GAAD,MAEE,kBAACkC,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAEjC,kBAACgJ,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SACvD,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,gBAAgBsE,UAAWF,EAAQmR,MAC5D,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OADpC,YAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAI,wBAAmBuC,EAAMsW,MAAMC,OAAOlb,IAC1CyY,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OANlC,UAaK,kBAACmB,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAC7B,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAEb,kBAACG,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MAC1B,kBAAC6I,GAAA,EAAD,CACEN,OACE,kBAACO,GAAA,EAAD,CAAQ7S,aAAW,SAAS7B,UAAWF,EAAQqU,QAA/C,OASFtM,MAAOqD,EAAMrD,MACb8M,UAAS,UAAKC,KAAO1J,EAAM2J,UAAUC,OAAO,eAAnC,gBAAyD5J,EAAM6J,SAG9E,kBAAClJ,GAAA,EAAD,CAAW7L,UAAWF,EAAQoU,OAC5B,yBAAKlQ,MAAO,CAACsI,OAAQ,QAAS9P,MAAO,SAAU8D,IAAG,UAAK4K,EAAM8J,WAG3D,kBAAC/I,GAAA,EAAD,KACG,kBAAC5Q,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,KAA5D,UACSgL,EAAM+J,OAGhB,kBAAC5Z,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,cAAc2E,UAAU,KACvDgL,EAAMgK,cAGX,kBAAC9I,GAAA,EAAD,CAAa+I,gBAAc,MAQ5B,kBAAC9J,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,QCtHpB3P,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEb6U,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAEPV,KAAM,CACR8D,MAAO,SACNvP,SAAU,KAEZ+T,MAAO,CACL7H,UAAW,UAEb8H,OAAQ,CACN/K,gBAAiBgL,KAAI,UAqKV8G,OAhKf,SAAmBjd,GAClB,IAAM6B,EAAUjE,KADS,EAIMqC,mBAAS,IAJf,mBAIfiV,EAJe,KAIPC,EAJO,OAKQlV,oBAAS,GALjB,mBAKfkX,EALe,KAKNC,EALM,KAiBzB,OATG3V,qBAAU,SAAA1E,GACNP,IAAMkF,IAAN,uCAA0C1B,EAAMsW,MAAMC,OAAOK,WAC5DpX,MAAK,SAAAC,GAAG,OAAI0V,EAAU1V,EAAIC,SAC1BG,OAAM,SAAAC,GACAA,GACCsX,GAAW,QAErB,IAGH,6BAEE,kBAAC,GAAD,MAEE,kBAACpV,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAEjC,kBAACgJ,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SACvD,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,gBAAgBsE,UAAWF,EAAQmR,MAC5D,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OADpC,YAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAI,GACJqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OANlC,WAWY,kBAAC,WAAD,KAQQkL,EAEA,kBAAC/J,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACpB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACd,kBAACnQ,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,IAAI1E,MAAM,UAChE,kBAAC,KAAD,CAAawI,MAAO,CAACzI,MAAO,SADlC,IAC6C,6BAD7C,iDAMF,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,KAIjB,kBAAC,WAAD,KAE0B,IAAlB2H,EAAOtB,OAEL,kBAACxG,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACtB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACd,kBAACnQ,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,IAAI1E,MAAM,UAChE,kBAAC,KAAD,CAA4BwI,MAAO,CAACzI,MAAO,WADjD,IAC8D,6BAD9D,sEAMF,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,KAMrB,kBAAC,WAAD,KAGI2H,EAAOna,KAAI,SAAAkS,GAAK,OAE5B,kBAACG,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACb,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAEP,kBAACG,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MACvB,kBAAC6I,GAAA,EAAD,CACEN,OACE,kBAACO,GAAA,EAAD,CAAQ7S,aAAW,SAAS7B,UAAWF,EAAQqU,QAA/C,OASFtM,MAAOqD,EAAMrD,MACb8M,UAAS,UAAKC,KAAO1J,EAAM2J,UAAUC,OAAO,eAAnC,gBAAyD5J,EAAM6J,SAG9E,kBAAClJ,GAAA,EAAD,CAAW7L,UAAWF,EAAQoU,OACxB,yBAAKlQ,MAAO,CAACsI,OAAQ,QAAS9P,MAAO,SAAU8D,IAAG,UAAK4K,EAAM8J,WAG/D,kBAAC/I,GAAA,EAAD,KACG,kBAAC5Q,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,KAA5D,UACSgL,EAAM+J,OAGhB,kBAAC5Z,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,cAAc2E,UAAU,KACvDgL,EAAMgK,cAGX,kBAAC9I,GAAA,EAAD,CAAa+I,gBAAc,MAQrC,kBAAC9J,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,cChL/CmE,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAOzD,IAAM3J,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC0M,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEbkZ,SAAU,CACR5F,MAAO,QACPvF,SAAU,IAEZ0G,aAAc,CACdC,UAAW,QAEbrU,MAAO,CACLC,SAAU,SAgPd,IAKM8H,GAAqB,CAAE2W,2BC9Ua,SAAAngB,GACzC,MAAO,CAAEpC,KlDwBmC,kCiDqTYwiB,8BC9TZ,SAAApgB,GAC5C,MAAO,CAAEpC,KlDUsC,sCiDqTjCyE,gBAPS,SAAA3E,GAAK,MAAK,CACjCmB,WAAYnB,EAAMmB,WAClBpB,KAAMC,EAAMD,QAK2B+L,GAAzBnH,EAnPf,SAAoBY,GAClB,IAAM6B,EAAUjE,KADS,EAICqC,mBAAS,GAJV,mBAIhBkS,EAJgB,KAIVe,EAJU,OAKejT,mBAAS,IALxB,mBAKhBmS,EALgB,KAKHe,EALG,OAOalT,mBAAS,IAPtB,mBAOhBmd,EAPgB,KAOJpC,EAPI,OAQO/a,oBAAS,GARhB,mBAQhBxH,EARgB,KAQPoI,EARO,OASOZ,oBAAS,GAThB,mBAShBkX,EATgB,KASPC,EATO,OAWGnX,oBAAS,GAXZ,mBAWhBpH,EAXgB,KAWTwkB,EAXS,OAYOpd,oBAAS,GAZhB,mBAYhBnH,EAZgB,KAYPwkB,EAZO,KA0CtB7b,qBAAU,SAAA1E,GACTP,IAAMkF,IAAI,qBACTlC,MAAK,SAAAC,GACLub,EAAcvb,EAAIC,MAClBmB,GAAW,MAEXhB,OAAM,SAAAC,GACHA,IACFe,GAAW,GACXuW,GAAW,SAIZ,IAGF3V,qBAAU,SAAA1E,GACNiD,EAAMpE,WAAW/C,OACnBwkB,GAAS,GAEVE,YAAW,WAAYvd,EAAMkd,+BAAgC,OAC5D,CAACld,EAAMpE,WAAW/C,QAGpB4I,qBAAU,SAAA1E,GACNiD,EAAMpE,WAAW9C,SAChBwkB,GAAW,GAEfC,YAAW,WAAYvd,EAAMmd,kCAAmC,OAC/D,CAACnd,EAAMpE,WAAW9C,UAvEE,IAyEfN,EAASwH,EAAMxF,KAAfhC,KAEFsJ,EAAOsb,EAAW3W,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEsO,KAAOrO,EAAEqO,MAAQ,EAAI,KAC1D7Z,QAAO,SAAAwJ,GAAG,OAAIA,EAAIzE,WAAa1H,EAAK0H,YAGlCwT,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAG7E,OACE,6BACC,kBAAC,GAAD,MAEC,kBAAC,GAAD,CAAqBjN,KAAMtM,EAAOiO,QA7DhB,SAACmG,EAAOC,GACD,cAAXA,IAIJmQ,GAAS,GACTrd,EAAMkd,+BAuDwC7f,QAAQ,UAAUiP,QAAQ,+BAChF,kBAAC,GAAD,CAAqBnH,KAAMrM,EAASgO,QAtDb,SAACmG,EAAOC,GAChB,cAAXA,IAGEoQ,GAAW,GACXtd,EAAMmd,kCAiDoD9f,QAAQ,UAAUiP,QAAQ,0CAE5F,kBAACtK,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE7B,kBAAC/G,EAAA,EAAD,CACgBrG,KAAK,8BACLsE,UAAWF,EAAQ4D,OACnBpI,QAAQ,WACRC,MAAM,aAJtB,gBAQY,6BAEb,kBAACwN,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,IAE7C,yBAAKhJ,UAAWF,EAAQ+Q,cAED,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE5C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,uBACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,oBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,uBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,+BACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,YAMA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAIJ,kBAAC,WAAD,KAEE6Z,EAEA,kBAAC3S,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,4EAKDgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAEH/G,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAImT,UAEP,kBAACrT,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIiS,UAAUC,OAAO,gBACrD,kBAACpS,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIwT,sBAC7B,kBAAC1T,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsS,aAC7B,kBAACxS,GAAA,EAAD,CAAWlH,MAAM,QAED,YAAfoH,EAAIzJ,OAEH,kBAAC,WAAD,kBAEE,kBAAC+I,EAAA,EAAD,CAAkB3G,MAAM,YAAY4G,KAAM,MAG7C,kBAAC,WAAD,KAEiB,aAAfS,EAAIzJ,OAEJ,kBAAC,IAAD,CAAM4f,GAAE,0BAAqBnW,EAAItJ,GAAzB,YAA+BsJ,EAAImT,WAA3C,gCAIA,kBAAC,WAAD,kHAGkB,kBAAC,IAAD,CAAMgD,GAAE,0BAAqBnW,EAAItJ,KAAjC,2BAuB5BqY,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aAzMT,SAACpF,EAAOuH,GAC1BtB,EAAQsB,IAyMmBC,oBAtMF,SAAAxH,GAC3BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAqMqByB,iBAAkB3C,e,gFEhUlDpU,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACpCC,KAAK,2BACGD,EAAMkN,OAAOC,WADjB,IAECJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEbkZ,SAAU,CACR5F,MAAO,QACPvF,SAAU,IAEZ0G,aAAc,CACdC,UAAW,QAEbrU,MAAO,CACLC,SAAU,KAEVuU,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAET2B,YAAa,CAERvR,SAAU,aAuQlB,IAMM8H,GAAqB,CAAEiX,sBDtTQ,SAAA9d,GAAI,OAAI,SAAA1C,GAE5CR,IAAM+C,KAAK,+BAAgCG,GAC1CF,MAAK,SAAAC,GAAG,OACRzC,EAAS,CACRrC,KlDgCoC,+BkD9BrCkF,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CAChBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,aC+SfN,gBARS,SAAA3E,GAAK,MAAK,CACjCmB,WAAYnB,EAAMmB,WAClBpB,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,UAKyB0L,GAAzBnH,EA3Qf,SAAuBY,GAErB,IAAM6B,EAAUjE,KAFW,EAKCqC,mBAAS,IALV,mBAKpBpF,EALoB,KAKZyF,EALY,OAOCL,mBAAS,CACpC6X,SAAU,GACVK,qBAAsB,GACtBlB,YAAa,KAVa,mBAOpB8B,EAPoB,KAOZC,EAPY,OAaO/Y,mBAAS,IAbhB,mBAapBiZ,EAboB,KAaTuE,EAbS,OAcaxd,mBAAS,IAAIvC,MAd1B,mBAcpBggB,EAdoB,KAcNC,EAdM,OAea1d,mBAAS,IAAIvC,MAf1B,mBAepBkgB,EAfoB,KAeNC,EAfM,KAkD5Bpc,qBAAU,SAAA1E,GAAM,IACPvC,EAASwF,EAATxF,KAEAgC,IAAMkF,IAAI,yBACXlC,MAAK,SAAAC,GACJA,EAAIC,KAAKvE,QAAO,SAAAK,GAAG,OAAIhB,EAAKhC,KAAK0H,WAAa1E,EAAI0E,YACjDnF,KAAI,SAAAS,GAAG,OAAIiiB,EAAajiB,EAAIyd,eAE9BpZ,OAAM,SAAAC,GAAG,OAAIA,OACnB,IAEF2B,qBAAU,SAAA1E,GACNiD,EAAMpE,WAAW/C,OACnBmH,EAAM2B,QAAQC,KAAK,qBACnB,CAAC5B,EAAMpE,WAAW/C,QAEnB4I,qBAAW,SAAA1E,GACJiD,EAAMnF,QACPyF,EAAUN,EAAMnF,UAElB,CAACmF,EAAMnF,SAtEgB,IAwEnBrC,EAASwH,EAAMxF,KAAfhC,KAIR,OACE,6BACC,kBAAC,GAAD,MAEA,kBAACwJ,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE9B,kBAACgJ,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC5C,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,kBAAkBsE,UAAWF,EAAQmR,MAC9D,kBAAC,KAAD,CAAgBjR,UAAWF,EAAQoK,OADrC,YAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAI,GACJqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAYjR,UAAWF,EAAQoK,OAN/B,iBAWnB,kBAACmB,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACvB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACqS,IAAE,IAGjB,kBAACL,GAAA,EAAD,CAAMhS,MAAI,EAACqS,GAAI,EAAGF,GAAI,IACrB,kBAACzC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,IAEzC,kBAAC3N,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,uBAGkB,6BAEA,0BAAMkF,YAAU,EAACC,SApFlB,SAAAvB,GACpBA,EAAEC,iBADuB,IAGjB5I,EAASwH,EAAMxF,KAAfhC,KAEFoe,EAAWD,KAAO+G,GAAc7G,OAAO,cAClCiH,EAAWnH,KAAOiH,GAAc/G,OAAO,YAEvC7B,EAAI,UAAM4B,EAAN,YAAkBkH,GAE3BC,EAAa,2BACfhF,GADe,IAElB/D,OACAkE,YACAnU,OAAQvM,EAAKuM,OACb7E,SAAU1H,EAAK0H,WAIhBF,EAAMwd,sBAAsBO,KAmEvB,kBAAC3Q,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACa,kBAAC1K,EAAA,EAAD,CACIrB,MAAOuX,EAAOjB,SACd1U,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAajB,SAAU3W,EAAEI,OAAOC,UACxDnG,GAAG,WACH6H,KAAK,WACLD,MAAM,8CACND,WAAS,EACTmN,cAAY,KAGpB,6BACH,0BAAMpK,MAAO,CAAEzI,MAAO,QAClBzC,EAAOid,UAGnB,kBAAC1K,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAEzC,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACI,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAClC,kBAAC,KAAD,CAAyBgO,MAAOC,MACR,kBAAC,KAAD,CACEzc,MAAOkc,EACPta,SArHpC,SAAA4R,GACd2I,EAAgB3I,IAqHkCkJ,gBAAc,EACd7gB,QAAQ,SACRwZ,OAAO,aACPlY,OAAO,SACPtD,GAAG,qBACH4H,MAAM,uBACNkb,oBAAqB,CACnB,aAAc,oBAOpD,kBAAC/Q,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACO,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aACtC,kBAAC,KAAD,CAAyBgO,MAAOC,MAC5B,kBAAC,KAAD,CACCpH,OAAQ,UACPrV,MAAOoc,EACPxa,SAtI9B,SAAAgb,GACfP,EAAgBO,IAsI6Bzf,OAAO,SACPtD,GAAG,cACH4H,MAAM,cACNkb,oBAAqB,CACnB,aAAc,eAEhBE,aAAc,kBAAC,KAAD,WAK3B,8BAGnB,0BAAMtY,MAAO,CAAEzI,MAAO,QACXzC,EAAOma,MAGb,6BAEL,kBAAC5H,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACD,kBAAC1K,EAAA,EAAD,CACIrB,MAAOuX,EAAOZ,qBACd/U,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAaZ,qBAAsBhX,EAAEI,OAAOC,UACpEnG,GAAG,uBACH6H,KAAK,uBACLD,MAAM,kEACND,WAAS,EACTmN,cAAY,EACXS,WAAS,EAChC9O,KAAM,EACNzE,QAAQ,cAGM,6BACF,0BAAM0I,MAAO,CAAEzI,MAAO,QACnBzC,EAAOsd,sBAGf,kBAAC/K,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACH,kBAAC1K,EAAA,EAAD,CACCI,MAAM,cACL5H,GAAG,SAClB6H,KAAK,SACQ1B,MAAOhJ,EAAKuM,OACVxB,WAAY,CACV6V,UAAU,GAEdpW,WAAS,KAGd,6BAGJ,kBAACoK,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACP,kBAAC1K,EAAA,EAAD,CACIrB,MAAOuX,EAAO9B,YACd7T,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa9B,YAAa9V,EAAEI,OAAOC,UAC3DnG,GAAG,cACH6H,KAAK,cACLD,MAAM,qDACND,WAAS,EACTmN,cAAY,EACXS,WAAS,EAChC9O,KAAM,EACNzE,QAAQ,cAGM,6BACF,0BAAM0I,MAAO,CAAEzI,MAAO,QACnBzC,EAAOoc,aAGhC,kBAAC7Z,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,cAAc2E,UAAU,KAA1D,oEAIU,kBAAC6B,EAAA,EAAD,CACcnJ,KAAK,SACNuJ,KAAK,QACL7G,QAAQ,WACRC,MAAM,YACLyE,UAAWF,EAAQkC,QALjC,sBAcd,kBAACqJ,GAAA,EAAD,CAAMhS,MAAI,EAACqS,IAAE,U,+BC9QXpG,GAAa,SAAArH,GACf,OAAO,kBAACsH,GAAA,EAAD,eAAOC,UAAU,MAASvH,KAI/B0R,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAOzD,IAAM3J,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC0M,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEbkZ,SAAU,CACR5F,MAAO,QACPvF,SAAU,IAEZ0G,aAAc,CACdC,UAAW,QAEbrU,MAAO,CACLC,SAAU,SA4Xd,IAIeW,gBAJS,SAAA3E,GAAK,MAAK,CACjCD,KAAMC,EAAMD,QAGE4E,EA5Xf,SAAoCY,GAEnC,IAAM6B,EAAUjE,KAF0B,EAKfqC,mBAAS,GALM,mBAKhCkS,EALgC,KAK1Be,EAL0B,OAMDjT,mBAAS,IANR,mBAMhCmS,EANgC,KAMnBe,EANmB,OASPlT,mBAAS,IATF,mBAShC7F,EATgC,KAStBkkB,EATsB,OAUTre,oBAAS,GAVA,mBAUhCxH,EAVgC,KAUvBoI,EAVuB,OAWTZ,oBAAS,GAXA,mBAWhCkX,EAXgC,KAWvBC,EAXuB,OAcRnX,mBAAS,IAdD,mBAcnCsa,EAdmC,KAcxBC,EAdwB,OAiBKva,oBAAS,GAjBd,mBAiBhCse,EAjBgC,KAiBhBC,EAjBgB,OAkBnBve,mBAAS,MAlBU,mBAkBhC5E,EAlBgC,KAkB5BojB,EAlB4B,OAqBPxe,oBAAS,GArBF,mBAqBhCye,EArBgC,KAqBtBC,EArBsB,OAsBf1e,oBAAS,GAtBM,mBAsBhC2e,EAtBgC,KAsB1BC,EAtB0B,OAyBX5e,mBAAS,IAzBE,mBAyBhC9E,EAzBgC,KAyBxB2jB,EAzBwB,KA0ChCC,GAAmB,SAAAhiB,GACxByhB,GAAkB,IA0EnB/c,qBAAU,SAAA1E,GACPP,IAAMkF,IAAN,wDAA2D1B,EAAMsW,MAAMC,OAAOkC,WAA9E,YAA4FzY,EAAMsW,MAAMC,OAAOmC,gBAC9GlZ,MAAK,SAAAC,GACF6e,EAAY7e,EAAIC,MAChBmB,GAAW,MAEdhB,OAAM,SAAAC,GACAA,IACCe,GAAW,GACXuW,GAAW,SAIpB,CAACsH,EAAUE,IAEbnd,qBAAU,SAAA1E,GAAM,IACXvC,EAASwF,EAATxF,KAEFgC,IAAMkF,IAAI,yBACTlC,MAAK,SAAAC,GACJA,EAAIC,KAAKvE,QAAO,SAAAK,GAAG,OAAIhB,EAAKhC,KAAK0H,WAAa1E,EAAI0E,YACjDnF,KAAI,SAAAS,GAAG,OAAIgf,EAAahf,EAAIyd,eAE9BpZ,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QAE/B,IAEE,IAAMgC,GAAO1H,EAASqM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAGnE8M,GAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,GAAK8R,OAASzB,EAAOC,GAI3E,OACE,6BACC,kBAAC,GAAD,MAES,kBAAC,GAAD,CAAqBjN,KAAMuZ,EAAU5X,QA/C1B,SAACmG,EAAOC,GACJ,cAAXA,GAIJyR,GAAY,IA0CiDthB,QAAQ,UAAUiP,QAAQ,0CACvF,kBAAC,GAAD,CAAqBnH,KAAMyZ,EAAM9X,QApFxB,SAACmG,EAAOC,GACF,cAAXA,GAIJ2R,GAAQ,IA+E6CxhB,QAAQ,OAAOiP,QAAQ,iBAGpF,kBAACzF,GAAA,EAAD,CACW1B,KAAMoZ,EACNpV,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAASiY,GACT/X,kBAAgB,2BAChBqC,mBAAiB,kCAEb,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,gCAGJ,kBAACiO,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,2DAKA,kBAACmO,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QAjGC,SAAArF,GAAM,IAO/BiiB,EAAa,CAClB9e,SAPgBF,EAATxF,KAOQhC,KAAK0H,SACpB+Y,QAASsB,EACTjO,QAAQ,iDAGT9P,IAAM+C,KAAN,mDAAuDlE,GAVpC,CAClBH,OAAQ,aAURsE,MAAK,SAAAC,GACLkf,GAAY,GACZH,GAAkB,MAElB3e,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,MAE1BtD,IAAM+C,KAAN,sCAAkDyf,GACjDxf,MAAK,SAAAC,GAAG,OAAIA,KACZI,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,OA2EsCzC,QAAQ,WAAWC,MAAM,WAAnE,OAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAAS2c,GAAkB1hB,QAAQ,WAAWC,MAAM,aAA5D,QAMtB,kBAAC0E,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE/B,kBAACgJ,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SACpD,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,kBAAkBsE,UAAWF,EAAQmR,MAC9D,kBAAC,KAAD,CAAgBjR,UAAWF,EAAQoK,OADrC,cAKC,kBAACzO,GAAA,EAAD,CACCF,MAAM,cACNG,KAAI,GACJqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OANjC,sBAWV,kBAACnB,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,IAE1C,kBAACqC,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAEhB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACd,kBAAC1K,EAAA,EAAD,CACErB,MAAOrG,EACPiI,SAAU,SAAAjC,GAAC,OAAI2d,EAAU3d,EAAEI,OAAOC,QAClCnG,GAAG,SACH6H,KAAK,SACLD,MAAM,iBACND,WAAS,EACTmN,cAAY,EACZ9S,QAAQ,eAMR,6BACA,6BAEf,yBAAK0E,UAAWF,EAAQ+Q,cAErB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAExB,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,qBACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,mBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,WACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,cACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,gBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,WACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,kBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,6BAOA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAIJ,kBAAC,WAAD,KAEE6Z,EAEF,kBAAC3S,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,2EAIJ,kBAAC,WAAD,KAEkB,IAAhBtM,GAAK8R,OAEL,kBAACpP,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,8EAMDgE,EAAc,EACXtQ,GAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,IAEH3G,QAAO,SAAAwJ,GAAG,OAAoE,IAAhEA,EAAIgU,YAAYP,cAAchF,OAAOjY,EAAOid,kBAC1Drd,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIgU,aAEP,kBAAClU,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIiC,YAAYiQ,OAAO,gBACvD,kBAACpS,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIiU,QAC7B,kBAACnU,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIoK,YAC7B,kBAACtK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAImK,IAC7B,kBAACrK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIkU,SAC7B,kBAACpU,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAImU,eAE7B,kBAACrU,GAAA,EAAD,CAAWlH,MAAM,QAGA,YAAfoH,EAAIzJ,OAEJ,kBAAC,WAAD,+EAEA,kBAAC+jB,GAAA,EAAD,CAASrV,MAAM,MAAMsV,UAAU,OAC1B,kBAACxb,GAAA,EAAD,CAAYtB,QAAS,SAAArF,GAAC,OA7QtC,SAAA1B,GAC3BojB,EAAMpjB,GACNmjB,GAAkB,GA2QmDW,CAAoBxa,EAAItJ,KAAKuI,aAAW,OAAOmC,MAAO,CAACzI,MAAO,UACvF,kBAAC,KAAD,SAKJ,kBAAC,WAAD,KACA,kEADA,mDAKG,kBAACoG,GAAA,EAAD,CAAYtB,QAAS,SAAArF,GAAC,OA/QhD,SAAA1B,GAAO,IAChBb,EAASwF,EAATxF,KAMRgC,IAAM+C,KAAN,mDAAuDlE,GAJpC,CAClBH,OAAQ,YAIRsE,MAAK,SAAAC,GACLof,GAAQ,MAERhf,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,MAE1B,IAAMkf,EAAa,CAClB9e,SAAU1F,EAAKhC,KAAK0H,SACpB+Y,QAASsB,EACTjO,QAAQ,6CAGT9P,IAAM+C,KAAN,sCAAkDyf,GACjDxf,MAAK,SAAAC,GAAG,OAAIA,KACZI,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,MA0P2Csf,CAAUza,EAAItJ,KAAKuI,aAAW,OAAOtG,MAAM,WACpD,kBAAC,KAAD,eAkB/BoW,GAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,KAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,GAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aAzUT,SAACpF,EAAOuH,GAC1BtB,EAAQsB,IAyUmBC,oBAtUF,SAAAxH,GAC3BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAqUqByB,iBAAkB3C,eC/dlDpU,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACpCC,KAAK,2BACGD,EAAMkN,OAAOC,WADjB,IAECJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEbkZ,SAAU,CACR5F,MAAO,QACPvF,SAAU,IAEZ0G,aAAc,CACdC,UAAW,QAEbrU,MAAO,CACLC,SAAU,KAEVuU,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAET2B,YAAa,CAERvR,SAAU,aAwSlB,IAMM8H,GAAqB,CAAE8Y,yBHvUW,SAAChkB,EAAIqE,GAAL,OAAc,SAAA1C,GAErDR,IAAM+C,KAAN,0CAA8ClE,GAAMqE,GACnDF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KlDkBwC,kCkDhBxCkF,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CAChBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,aGiUfN,gBARS,SAAA3E,GAAK,MAAK,CACjCmB,WAAYnB,EAAMmB,WAClBpB,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,UAKyB0L,GAAzBnH,EA5Sf,SAA0BY,GAExB,IAAM6B,EAAUjE,KAFc,EAKFqC,mBAAS,IALP,mBAKvBpF,EALuB,KAKfyF,EALe,OAMIL,oBAAS,GANb,mBAMvBqf,EANuB,KAMZC,EANY,OAQFtf,mBAAS,CACpC6X,SAAU,GACVK,qBAAsB,GACtBlB,YAAa,KAXgB,mBAQvB8B,EARuB,KAQfC,EARe,OAcI/Y,mBAAS,IAdb,mBAcvBiZ,EAduB,KAcZuE,EAdY,OAeUxd,mBAAS,IAAIvC,MAfvB,mBAevBggB,EAfuB,KAeTC,EAfS,OAgBU1d,mBAAS,IAAIvC,MAhBvB,mBAgBvBkgB,EAhBuB,KAgBTC,EAhBS,KA6D/Bpc,qBAAU,SAAA1E,GAAM,IACPvC,EAASwF,EAATxF,KAEFgC,IAAMkF,IAAI,yBACTlC,MAAK,SAAAC,GACJA,EAAIC,KAAKvE,QAAO,SAAAK,GAAG,OAAIhB,EAAKhC,KAAK0H,WAAa1E,EAAI0E,YACjDnF,KAAI,SAAAS,GAAG,OAAIiiB,EAAajiB,EAAIyd,eAE9BpZ,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,MAG1BtD,IAAMkF,IAAN,2BAA8B1B,EAAMsW,MAAMC,OAAOlb,KAChDmE,MAAK,SAAAC,GACJ+P,QAAQC,IAAIhQ,EAAIC,MAChBsZ,EAAU,2BACLD,GADI,IAEPjB,SAAUrY,EAAIC,KAAKoY,SACnBK,qBAAsB1Y,EAAIC,KAAKyY,qBAC/BlB,YAAaxX,EAAIC,KAAKuX,eAGxB0G,EAAgBle,EAAIC,KAAKsV,MACzB6I,EAAgBpe,EAAIC,KAAKsV,SAG1BnV,OAAM,SAAAC,GAAG,OAAIA,OACnB,IAEF2B,qBAAU,SAAA1E,GACNiD,EAAMpE,WAAW9C,SACnBkH,EAAM2B,QAAQC,KAAK,qBACnB,CAAC5B,EAAMpE,WAAW9C,UAEnB2I,qBAAW,SAAA1E,GACJiD,EAAMnF,QACPyF,EAAUN,EAAMnF,QAGfmF,EAAMnF,OAAO2kB,KACdD,GAAa,KAEf,CAACvf,EAAMnF,SAtGmB,IAwGtBrC,EAASwH,EAAMxF,KAAfhC,KAIR,OACE,6BACC,kBAAC,GAAD,MAEC,kBAAC,GAAD,CAAqB2M,KAAMma,EAAWxY,QA5DpB,SAACmG,EAAOC,GACD,cAAXA,GAIJqS,GAAa,IAuDqCliB,QAAQ,QAAQiP,QAASzR,EAAO2kB,MAE7F,kBAACxd,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE9B,kBAACgJ,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC5C,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,kBAAkBsE,UAAWF,EAAQmR,MAC9D,kBAAC,KAAD,CAAgBjR,UAAWF,EAAQoK,OADrC,YAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAI,GACJqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAYjR,UAAWF,EAAQoK,OAN/B,iBAWnB,kBAACmB,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACvB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACqS,IAAE,IAGjB,kBAACL,GAAA,EAAD,CAAMhS,MAAI,EAACqS,GAAI,EAAGF,GAAI,IACrB,kBAACzC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,KAAMgN,UAAW,IAEzC,kBAAC3N,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,uBAGkB,6BAEA,0BAAMkF,YAAU,EAACC,SArHlB,SAAAvB,GACpBA,EAAEC,iBADuB,IAGjB5I,EAASwH,EAAMxF,KAAfhC,KAEFoe,EAAWD,KAAO+G,GAAc7G,OAAO,cAClCiH,EAAWnH,KAAOiH,GAAc/G,OAAO,YAEvC7B,EAAI,UAAM4B,EAAN,YAAkBkH,GAE3BC,EAAa,2BACfhF,GADe,IAElB/D,OACAkE,YACAnU,OAAQvM,EAAKuM,OACb7E,SAAU1H,EAAK0H,WAIfF,EAAMqf,yBAAyBrf,EAAMsW,MAAMC,OAAOlb,GAAI0iB,KAoGlD,kBAAC3Q,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACa,kBAAC1K,EAAA,EAAD,CACIrB,MAAOuX,EAAOjB,SACd1U,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAajB,SAAU3W,EAAEI,OAAOC,UACxDnG,GAAG,WACH6H,KAAK,WACLD,MAAM,8CACND,WAAS,EACTmN,cAAY,KAGpB,6BACH,0BAAMpK,MAAO,CAAEzI,MAAO,QAClBzC,EAAOid,UAGnB,kBAAC1K,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAEzC,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACI,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAClC,kBAAC,KAAD,CAAyBgO,MAAOC,MACR,kBAAC,KAAD,CACEzc,MAAOkc,EACPta,SAtJpC,SAAA4R,GACd2I,EAAgB3I,IAsJkCkJ,gBAAc,EACd7gB,QAAQ,SACRwZ,OAAO,aACPlY,OAAO,SACPtD,GAAG,qBACH4H,MAAM,uBACNkb,oBAAqB,CACnB,aAAc,oBAOpD,kBAAC/Q,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACO,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aACtC,kBAAC,KAAD,CAAyBgO,MAAOC,MAC5B,kBAAC,KAAD,CACCpH,OAAQ,UACPrV,MAAOoc,EACPxa,SAvK9B,SAAAgb,GACfP,EAAgBO,IAuK6Bzf,OAAO,SACPtD,GAAG,cACH4H,MAAM,cACNkb,oBAAqB,CACnB,aAAc,eAEhBE,aAAc,kBAAC,KAAD,WAK3B,8BAGnB,0BAAMtY,MAAO,CAAEzI,MAAO,QACXzC,EAAOma,MAEd,6BAEJ,kBAAC5H,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACD,kBAAC1K,EAAA,EAAD,CACIrB,MAAOuX,EAAOZ,qBACd/U,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAaZ,qBAAsBhX,EAAEI,OAAOC,UACpEnG,GAAG,uBACH6H,KAAK,uBACLD,MAAM,kEACND,WAAS,EACTmN,cAAY,EACXS,WAAS,EAChC9O,KAAM,EACNzE,QAAQ,cAGM,6BACF,0BAAM0I,MAAO,CAAEzI,MAAO,QACnBzC,EAAOsd,sBAGf,kBAAC/K,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACH,kBAAC1K,EAAA,EAAD,CACCI,MAAM,cACL5H,GAAG,SAClB6H,KAAK,SACQ1B,MAAOhJ,EAAKuM,OACVxB,WAAY,CACV6V,UAAU,GAEdpW,WAAS,KAGd,6BAGJ,kBAACoK,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACP,kBAAC1K,EAAA,EAAD,CACIrB,MAAOuX,EAAO9B,YACd7T,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa9B,YAAa9V,EAAEI,OAAOC,UAC3DnG,GAAG,cACH6H,KAAK,cACLD,MAAM,qDACND,WAAS,EACTmN,cAAY,EACXS,WAAS,EAChC9O,KAAM,EACNzE,QAAQ,cAGM,6BACF,0BAAM0I,MAAO,CAAEzI,MAAO,QACnBzC,EAAOoc,aAGhC,kBAAC7Z,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,cAAc2E,UAAU,KAA1D,oEAIU,kBAAC6B,EAAA,EAAD,CACcnJ,KAAK,SACNuJ,KAAK,QACL7G,QAAQ,WACRC,MAAM,YACLyE,UAAWF,EAAQkC,QALjC,sBAcd,kBAACqJ,GAAA,EAAD,CAAMhS,MAAI,EAACqS,IAAE,U,qBCjUX7P,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCkV,KAAM,CACJ7U,QAAS,OACTyc,eAAgB,OACftd,MAAO,UACN,UAAW,CACXsd,eAAgB,cAGnB6E,YAAa,CACbthB,QAAS,OACPyc,eAAgB,OAChBtd,MAAO,UACL,UAAW,CACXsd,eAAgB,cAGpB3O,KAAM,CACJI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAEPpQ,MAAM,aACJsT,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG5ByM,MAAO,CACRlN,QAAS,QAEVQ,OAAQ,CACPA,OAAQb,EAAMc,QAAQ,IAExBmF,OAAO,CACD7F,UAAWJ,EAAMc,QAAQ,QAkSjC,IAMM2H,GAAqB,CAAEmZ,aCnWD,SAAChgB,EAAMigB,GAAP,OAAmB,SAAA3iB,GAC9CR,IAAM+C,KAAK,2BAA4BG,GACtCF,MAAK,SAAAC,GAAG,OAAKzC,EAAS,CACtBrC,KvDwEyB,cuDvEzBC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAKxC,EACLyC,QAASkF,EAAIC,SAASL,UAItBlD,IAAM+C,KAAK,2BAA4BogB,GACvCngB,MAAK,SAAAC,GAAG,OAAIA,KACZI,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QDqVgB8f,kBCjVV,SAAA7iB,GAChC,MAAO,CAAEpC,KvDyDuB,uBsDyRlByE,gBARS,SAAA3E,GAAK,MAAK,CACjCD,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,OACdjC,QAAS6B,EAAM7B,WAKwB2N,GAAzBnH,EArSf,SAAwBY,GAEvB,IAAM6B,EAAUjE,KAFa,EAKCqC,mBAAS,IALV,mBAKtBgZ,EALsB,KAKbuC,EALa,OAMWvb,oBAAS,GANpB,mBAMtB4f,EANsB,aAQK5f,oBAAS,IARd,mBAQtB7G,EARsB,KAQX0mB,EARW,OAWD7f,mBAAS,IAXR,mBAWtBpF,EAXsB,KAWdyF,EAXc,OAcDL,mBAAS,CACpC8f,YAAa,GACbC,WAAY,GACZ7Y,KAAM,KACNC,SAAU,KAlBkB,mBActB2R,EAdsB,KAcdC,EAdc,KAsBtBjS,EAAc,WACjB+Y,GAAa,GACb9G,EAAU,CACT+G,YAAa,GAChBC,WAAY,GACZ7Y,KAAM,KACNC,SAAU,MAuEZ,OA7BC3F,qBAAU,SAAA1E,GAAM,IACRvC,EAASwF,EAATxF,KAERgC,IAAMkF,IAAI,yBACTlC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKvE,QAAO,SAAAK,GAAG,OAAIhB,EAAKhC,KAAK0H,WAAa1E,EAAI0E,YAAUnF,KAAI,SAAAS,GAAG,OAAIggB,EAAWhgB,EAAIyd,eAClGpZ,OAAM,SAAAC,GAGN0P,QAAQC,IAAI3P,QAGZ,IAED2B,qBAAU,SAAA1E,GACNiD,EAAMpH,QAAQQ,WAChB0mB,GAAa,GAEfvC,YAAW,WACVvd,EAAM4f,sBACJ,OAED,CAAC5f,EAAMpH,QAAQQ,YAGdqI,qBAAU,SAAA1E,GACFiD,EAAMnF,QACLyF,EAAUN,EAAMnF,UACpB,CAACmF,EAAMnF,SAGd,6BACC,kBAAC,GAAD,MAEC,kBAACgM,GAAA,EAAD,CACM1B,KAAM/L,EACN0N,QAASC,EACTC,kBAAgB,qBAChBqC,mBAAiB,4BAEjB,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,sBAAsB,iCACtC,kBAACiO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,4BAAtB,2DAIF,kBAACmO,GAAA,EAAD,KAEE,kBAAC1F,EAAA,EAAD,CAAQ1B,QAAS2E,EAAazJ,MAAM,WAApC,QAQP,kBAAC0E,EAAA,EAAD,CAAWE,SAAS,KAAK6D,MAAO,CAAC8E,WAAY,KAE7C,kBAACgJ,GAAA,EAAD,CAAajQ,aAAW,cACnB,kBAAC,IAAD,CAAMkX,GAAG,wBAAwB/Y,UAAWF,EAAQmR,MACnD,kBAAC,KAAD,CAAUjR,UAAWF,EAAQoK,OAD9B,QAKE,kBAAC,IAAD,CACE6O,GAAI,IACJhH,eAAa,OACb/R,UAAWF,EAAQ4d,aAErB,kBAAC,KAAD,CAAa1d,UAAWF,EAAQoK,OALhC,aAWE,kBAACmB,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAGtB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IAGf,kBAACH,GAAA,EAAD,CAAOhS,MAAI,EAACmS,GAAI,GACf,kBAACzC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ5D,OAEzB4hB,EAEA,kBAACziB,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,kDAIA,kBAAC,WAAD,KAEE,kBAACH,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAIS,0BAAMoF,YAAU,EAACC,SArI1B,SAAAvB,GACpBA,EAAEC,iBADuB,IAGjB5I,EAASwH,EAAMxF,KAAfhC,KAUJynB,GARY,2BACZlH,GADY,IAEfE,UACAlU,OAAQvM,EAAKuM,OACb7E,SAAU1H,EAAK0H,WAIP,IAAI6b,UACbkE,EAAG9D,OAAO,OAAQpD,EAAO5R,MACzB8Y,EAAG9D,OAAO,cAAepD,EAAOgH,aAChCE,EAAG9D,OAAO,aAAcpD,EAAOiH,YAC/BC,EAAG9D,OAAO,UAAWlD,GACrBgH,EAAG9D,OAAO,SAAU3jB,EAAKuM,QACzBkb,EAAG9D,OAAO,WAAY3jB,EAAK0H,UAG3B,IAAM8e,EAAa,CAClB9e,SAAU1H,EAAK0H,SACf+Y,UACA8G,YAAahH,EAAOgH,YACpBC,WAAYjH,EAAOiH,YAMpBhgB,EAAM0f,aAAaO,EAAIjB,KAuGO,kBAACnc,EAAA,EAAD,CACCO,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAagH,YAAa5e,EAAEI,OAAOC,UAC3DA,MAAOuX,EAAOgH,YACN1kB,GAAG,cACH6H,KAAK,cACLD,MAAM,uBACND,WAAS,EACTmN,aAAa,gBAEjB,6BACP,0BAAMpK,MAAO,CAAEzI,MAAO,QACDzC,EAAOklB,aAErB,6BAEC,kBAACld,EAAA,EAAD,CACLO,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAaiH,WAAY7e,EAAEI,OAAOC,UACrDA,MAAOuX,EAAOiH,WACX3kB,GAAG,aACH6H,KAAK,aACLD,MAAM,6BACND,WAAS,EACTmN,aAAa,aACbS,WAAS,IAEV,0BAAM7K,MAAO,CAAEzI,MAAO,QACXzC,EAAOmlB,YAInB,yBAAKje,UAAWF,EAAQlD,QACzC,kBAACyO,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,EAAGP,WAAW,YAErC,kBAAC+O,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAKtB,2BAAOnK,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa5R,KAAMhG,EAAEI,OAAOgb,MAAM,GAAInV,SAAUjG,EAAEI,OAAOgb,MAAM,GAAGrZ,SACjGnB,UAAWF,EAAQwJ,MAAOhQ,GAAG,OAAO6H,KAAK,OAAOvI,KAAK,SAChD,2BAAO6V,QAAQ,QACb,kBAAC9M,GAAA,EAAD,CAAYpG,MAAM,UAAUsG,aAAW,iBAAiB3B,UAAU,QAChE,kBAAC,KAAD,SAMF,kBAACmL,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACb,kBAAC1K,EAAA,EAAD,CACArB,MAAOuX,EAAO3R,SACd/L,GAAG,uBACH4H,MAAM,yBACNI,WAAW,uCACXL,WAAS,EACPO,WAAY,CACc6V,UAAU,GAEdnJ,gBAAiB,CACfC,QAAQ,QAqB7C,0BAAMnK,MAAO,CAAEzI,MAAO,QACczC,EAAOsM,MAGxC,6BACa,qFAEC,kBAACrD,EAAA,EAAD,CACOnJ,KAAK,SACLqI,WAAS,EACT3F,QAAQ,YACRC,MAAM,UACNyE,UAAWF,EAAQkC,QAL1B,cAmBd,kBAACqJ,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,U,mFEjQlB5C,OAjFf,SAAsB3K,GAAO,IAEjBiM,EAA0CjM,EAA1CiM,KAAMrG,EAAoC5F,EAApC4F,QAASkV,EAA2B9a,EAA3B8a,GAAK5I,EAAsBlS,EAAtBkS,MAAOjN,EAAejF,EAAfiF,YAG7Bib,EAAaC,mBACf,SAAApjB,GAAC,OAAIqjB,sBAAW,SAACC,EAAWC,GAAZ,OAAoB,kBAAC,IAAD,eAAYxF,GAAIA,EAAIwF,IAAKA,GAASD,SACtE,CAACvF,IAGL,OACI,kBAAC,WAAD,KAEA7V,EAEA,4BACG,kBAACO,GAAA,EAAD,CAAUC,QAAM,EAACrD,QAAS6C,EAAahD,UAAWie,GAI7CjU,EACA,kBAAC,WAAD,KAIQiG,EAEA,kBAACxM,GAAA,EAAD,KACI,kBAACmU,GAAA,EAAD,CAAOC,aAAc5H,EAAO5U,MAAM,WACjC2O,IAKL,kBAACvG,GAAA,EAAD,KAAeuG,IAGrB,KACF,kBAACtG,GAAA,EAAD,CAAcC,QAASA,MAK/B,4BACG,kBAACJ,GAAA,EAAD,CAAUC,QAAM,EAACxD,UAAWie,GAIvBjU,EACA,kBAAC,WAAD,KAIQiG,EAEA,kBAACxM,GAAA,EAAD,KACI,kBAACmU,GAAA,EAAD,CAAOC,aAAc5H,EAAO5U,MAAM,WACjC2O,IAKL,kBAACvG,GAAA,EAAD,KAAeuG,IAGrB,KACF,kBAACtG,GAAA,EAAD,CAAcC,QAASA,QChCjCyB,GAAa,SAAArH,GACf,OAAO,kBAACsH,GAAA,EAAD,eAAOC,UAAU,MAASvH,KAG/BpC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFI,QAAS,QAEboiB,OAAQ,CACJC,OAAQ1iB,EAAM0iB,OAAOC,OAAS,EAC9BC,WAAY5iB,EAAM6iB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ/iB,EAAM6iB,YAAYE,OAAOC,MACjCC,SAAUjjB,EAAM6iB,YAAYI,SAASC,iBAG7CC,YAAa,CACT9hB,WAlBY,IAmBZZ,MAAM,eAAD,OAnBO,IAmBP,OACLmiB,WAAY5iB,EAAM6iB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ/iB,EAAM6iB,YAAYE,OAAOC,MACjCC,SAAUjjB,EAAM6iB,YAAYI,SAASG,kBAG7CC,WAAY,CACR9U,YAAa,IAEjB+U,KAAM,CACFjjB,QAAS,QAEbsiB,OAAQ,CACJliB,MAhCY,IAiCZwT,WAAY,EACZsP,WAAY,UAEhBC,WAAY,CACR/iB,MArCY,IAsCZmiB,WAAY5iB,EAAM6iB,YAAYC,OAAO,QAAS,CAC1CC,OAAQ/iB,EAAM6iB,YAAYE,OAAOC,MACjCC,SAAUjjB,EAAM6iB,YAAYI,SAASG,kBAG7CK,YAAY,aACRb,WAAY5iB,EAAM6iB,YAAYC,OAAO,QAAS,CAC1CC,OAAQ/iB,EAAM6iB,YAAYE,OAAOC,MACjCC,SAAUjjB,EAAM6iB,YAAYI,SAASC,gBAEzCnO,UAAW,SACXtU,MAAOT,EAAMc,QAAQ,GAAK,GACzBd,EAAM2M,YAAYC,GAAG,MAAQ,CAC1BnM,MAAOT,EAAMc,QAAQ,GAAK,IAGlC4iB,QAAQ,aACJrjB,QAAS,OACTE,WAAY,SACZojB,eAAgB,WAChBjQ,QAAS1T,EAAMc,QAAQ,EAAG,IACvBd,EAAMkN,OAAOwW,SAEpBE,QAAS,CACL1jB,SAAU,EACVwT,QAAS1T,EAAMc,QAAQ,QAgO/B,IAKM2H,GAAqB,CAAEzJ,aAAY6kB,etB/QX,SAAAroB,GAAO,OAAI,SAAA0D,GACxCR,IAAMkF,IAAN,kDAAqDpI,IACpDkG,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnCtB4C,iCmCuB5CC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,YsBuQiCkiB,iBtBzPzB,SAACtJ,EAAOvT,GAAR,OAAmB,SAAA/H,GAClDR,IAAM+C,KAAN,wDAA4DwF,GAAUuT,GACrE9Y,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnC1CgC,qBmC2ChCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,asBmPTN,gBAPS,SAAA3E,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,KACZkB,kBAAmBjB,EAAMiB,qBAKW6K,GAAzBnH,EAnOf,SAAuBY,GAAQ,IAAD,IACpB6B,EAAUjE,KACVE,EAAQmU,eAFY,EAMFhS,oBAAS,GANP,mBAMnBkF,EANmB,KAMbmO,EANa,OAOQrT,oBAAS,GAPjB,mBAOnB4hB,EAPmB,KAORC,EAPQ,OAQA7hB,mBAAS,GART,mBAQnBiS,EARmB,KAQZsH,EARY,KA2BpBvR,EAA2B,SAAAlL,GAC7B+kB,GAAa,IAgBjBrgB,qBAAU,SAAA1E,GAAM,IAEJvC,EAASwF,EAATxF,KAERgC,IAAMkF,IAAN,kDAAqDlH,EAAKhC,KAAKuM,SAC9DvF,MAAK,SAAAC,GAAG,OAAI+Z,EAAS/Z,EAAIC,KAAKwS,UAC9BrS,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QAG5B,CAACoS,IArDuB,IAyDlB1Z,EAASwH,EAAMxF,KAAfhC,KAMR,OAJ8BwH,EAAtBtE,kBAKJ,yBAAKqG,UAAWF,EAAQ9D,MAEpB,kBAAC8I,GAAA,EAAD,CACI1B,KAAM0c,EACN1Y,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAASmB,EACTjB,kBAAgB,2BAChBqC,mBAAiB,kCAEjB,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,eAEL,kBAACiO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,qCAIJ,kBAACmO,GAAA,EAAD,KACI,kBAAC1F,EAAA,EAAD,CAAQ1B,QAAS6F,EAA0B5K,QAAQ,WAAWC,MAAM,WAApE,UAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAvDF,SAAAjB,GAClBnB,EAAMlD,cAsDsCO,QAAQ,WAAWC,MAAM,aAAzD,YAOR,kBAAC6E,EAAA,EAAD,MACA,kBAACsH,GAAA,EAAD,CACI3K,SAAS,QACTiD,UAAWggB,aAAKlgB,EAAQ0e,OAAT,eACV1e,EAAQof,YAAc9b,KAG3B,kBAACuE,GAAA,EAAD,CAAS3D,MAAO,CAAEoF,gBAAiB,YAC/B,kBAACzH,GAAA,EAAD,CACIpG,MAAM,UACNsG,aAAW,cACXxB,QAzFK,SAAArF,GACrBuW,GAAQ,IAyFQ3P,KAAK,QACL5B,UAAWggB,aAAKlgB,EAAQsf,WAAT,eACVtf,EAAQuf,KAAOjc,KAGpB,kBAAC,KAAD,OAEJ,kBAAC/H,EAAA,EAAD,CAAYC,QAAQ,KAAKwM,QAAM,GAA/B,oBAMR,kBAACM,GAAA,EAAD,CACI9M,QAAQ,YACR0E,UAAWggB,aAAKlgB,EAAQ4e,QAAT,mBACV5e,EAAQyf,WAAanc,GADX,cAEVtD,EAAQ0f,aAAepc,GAFb,IAIftD,QAAS,CACL5D,MAAO8jB,cAAI,mBACNlgB,EAAQyf,WAAanc,GADf,cAENtD,EAAQ0f,aAAepc,GAFjB,KAKfA,KAAMA,GAGN,yBAAKpD,UAAWF,EAAQ2f,SAEpB,kBAACrd,EAAA,EAAD,CAAK+H,SAAU,GAAI8V,EAAG,GAAtB,cAAqCxpB,EAAKuM,QAE1C,kBAACrB,GAAA,EAAD,CAAYtB,QAtHF,SAAArF,GACtBuW,GAAQ,MAsHSxV,EAAMyJ,UAAsB,kBAAC,KAAD,SAIrC,kBAAC1B,GAAA,EAAD,MAEA,kBAACN,GAAA,EAAD,KAEI,kBAAC,GAAD,CACAuV,GAAG,KACHlV,QAAQ,WACRqG,KAAM,kBAAC,KAAD,QAGN,kBAAC,GAAD,CACA6O,GAAG,mBACHlV,QAAQ,kBACRqG,KAAM,kBAAC,KAAD,SAKV,kBAACpG,GAAA,EAAD,MAEA,kBAACN,GAAA,EAAD,KAEI,kBAAC,GAAD,CACAuV,GAAG,kBACHlV,QAAQ,iBACRqG,KAAM,kBAAC,KAAD,SAKV,kBAACpG,GAAA,EAAD,MAGA,kBAACN,GAAA,EAAD,KAEI,kBAAC,GAAD,CACAuV,GAAG,sBACHlV,QAAQ,oBACRqG,KAAM,kBAAC,KAAD,QAGN,kBAAC,GAAD,CACAhH,YAAa,SAAAlI,GAAC,OArJJ,SAAAub,GAAU,IACxB9d,EAASwF,EAATxF,KACFmf,EAAO,CAAErB,SACftY,EAAM4hB,iBAAiBjI,EAAMnf,EAAKhC,KAAKuM,QAkJT6U,CAAkB,SACpCkB,GAAG,yBACHlV,QAAQ,uBACRqG,KAAM,kBAAC,KAAD,MACNiG,MAAOA,IAGP,kBAAC,GAAD,CACA4I,GAAG,wBACHlV,QAAQ,sBACRqG,KAAM,kBAAC,KAAD,SAKV,kBAACpG,GAAA,EAAD,MAGA,kBAACN,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUO,MAAO,CAAEzI,MAAO,OAASmI,QAAM,EAACrD,QApL/B,SAAArF,GACvB+kB,GAAa,KAoLG,kBAACpc,GAAA,EAAD,KAAc,kBAAC,KAAD,CAAepI,MAAM,WACnC,kBAACqI,GAAA,EAAD,kBAMZ,0BAAM5D,UAAWF,EAAQ6f,SACrB,yBAAK3f,UAAWF,EAAQ2f,UACvBxhB,EAAMiiB,cCrTjBrkB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,SAyDtBsjB,OArDf,SAAmBliB,GAEf,IAAM6B,EAAUjE,KAFK,EAIYqC,mBAAS,IAJrB,mBAITiV,EAJS,KAIDC,EAJC,KAgCjB,OA1BJ1T,qBAAU,SAAA1E,GACFP,IAAMkF,IAAI,uBACLlC,MAAK,SAAAC,GAAG,OAAI0V,EAAU1V,EAAIC,SAC1BG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QAC5B,IAuBF,6BACI,kBAAC,GAAD,KACK,kBAACgL,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAEvB,kBAAC,KAAD,CACIqX,QAAS,CAAEC,KAAgBC,MAC3BC,YAAY,eACZC,UAAU,EACVN,OAAQA,EACRO,aAzBG,SAAAC,GAAS,OAC5B,kBAAC,WAAD,KAGA,uBAAGjY,KAAI,sBAAiBiY,EAAUzI,MAAM0I,KAAKC,WAC3C,0BAAM7P,MAAO,CAACzI,MAAO,QAAS6N,gBAAgB,GAAD,OAAIuK,EAAUvK,mBAE1D,2BAAIuK,EAAUG,UAFf,QAGE,8BAAOH,EAAUzI,MAAMrD,WAkBXuY,YAAY,YACZrM,UAhCN,SAAAC,GAEd/V,EAAM2B,QAAQC,KAAd,mCAA+CmU,EAAIC,iB,qBClBrD1K,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCK+O,G,2KAtBX,OACE,6BACE,kBAACzO,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAAC,GAAD,CACEA,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAS+H,KAAKpF,MAAM3C,QACpBiP,QAASlH,KAAKpF,MAAMsM,gB,GAhBES,IAAM/G,WChDlCqB,GAAa,SAAArH,GACf,OAAO,kBAACsH,GAAA,EAAD,eAAOC,UAAU,MAASvH,KAI/B0R,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAQzD,IAAM6a,GAASvkB,aAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CAGFmN,cAAepN,EAAMc,QAAQ,IAEhC+T,MAAO,CACRpU,MAAO,OACP2M,cAAe,QACblN,SAAU,GAEZgV,KAAM,CACN7U,QAAS,QAEN8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAET2B,YAAa,CAEZvR,SAAU,SAEjBmU,aAAc,CACXC,UAAW,QAEbrU,MAAO,CACLC,SAAU,SAoSd,IAKM8H,GAAqB,CAAE8b,yBC/WW,SAAAtlB,GACvC,MAAO,CACNpC,K7DxB0C,iC4DqYW2nB,4BC7VZ,SAAAvlB,GAC1C,MAAO,CACNpC,K7DxC6C,qC4DqYhCyE,gBAPS,SAAA3E,GAAK,MAAK,CAChCkB,aAAclB,EAAMkB,aACpBnB,KAAMC,EAAMD,QAK0B+L,GAAzBnH,EAvSf,SAAwBY,GAChB,IAAM6B,EAAUugB,KADM,EAMAniB,mBAAS,GANT,mBAMjBkS,EANiB,KAMXe,EANW,OAOcjT,mBAAS,GAPvB,mBAOjBmS,EAPiB,KAOJe,EAPI,OASJlT,qBATI,mBASjB5E,EATiB,aAWI4E,mBAAS,KAXb,mBAWjBiV,EAXiB,KAWTqN,EAXS,OAYMtiB,oBAAS,GAZf,mBAYjBxH,EAZiB,KAYRoI,EAZQ,OAaMZ,oBAAS,GAbf,mBAajBkX,EAbiB,KAaRC,EAbQ,OAgBEnX,oBAAS,GAhBX,mBAgBjBpH,EAhBiB,KAgBVwkB,EAhBU,OAiBKpd,oBAAS,GAjBd,mBAiBjBnH,EAjBiB,KAiBR0pB,EAjBQ,OAkBMviB,oBAAS,GAlBf,gCAqBeA,oBAAS,IArBxB,mBAqBjBwiB,EArBiB,KAqBJC,EArBI,KA8EhBC,EAAyB,SAAA5lB,GAC7B2lB,GAAgB,IAGlBjhB,qBAAU,SAAA1E,GAEVP,IAAMkF,IAAI,uBACTlC,MAAK,SAAAC,GACJ8iB,EAAU9iB,EAAIC,MACdmB,GAAW,MAEZhB,OAAM,SAAAC,GACFA,GACDsX,GAAW,QAGb,CAACpX,EAAMrE,aAAainB,UAAW5iB,EAAMrE,aAAaknB,WAAY7iB,EAAMrE,aAAamnB,cAGvFrhB,qBAAU,SAAA1E,GACLiD,EAAMrE,aAAa9C,OAClBwkB,GAAS,GAEbE,YAAW,WAAYvd,EAAMqiB,6BAA8B,OAG3D,CAACriB,EAAMrE,aAAa9C,QAEtB4I,qBAAU,SAAA1E,GACJiD,EAAMrE,aAAa7C,SACnB0pB,GAAU,GAEdjF,YAAW,WAAYvd,EAAMsiB,gCAAiC,OAE9D,CAACtiB,EAAMrE,aAAa7C,UAhHI,IAkHlBN,EAASwH,EAAMxF,KAAfhC,KAEFsJ,EAAOoT,EAAOzO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KACzDzL,QAAO,SAAAwJ,GAAG,OAAIA,EAAImS,QAAJ,sBAA6Bte,EAAKuM,WAGvD2O,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAEvE,OACI,6BACI,kBAAC,GAAD,KAIG,kBAACvL,GAAA,EAAD,CACA1B,KAAMsd,EACNtZ,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAAS6b,EACT3b,kBAAgB,2BAChBqC,mBAAiB,kCAEb,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,6BAGJ,kBAACiO,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,qDAKA,kBAACmO,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QA7ER,SAAArF,GAClBiD,EAAM+iB,mBAAmB1nB,GAEzBqnB,GAAgB,IA0EgCrlB,QAAQ,WAAWC,MAAM,WAAvD,OAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAASugB,EAAwBtlB,QAAQ,WAAWC,MAAM,aAAlE,QAMZ,kBAAC,GAAD,CAAqB6H,KAAMtM,EAAOiO,QA1HtB,SAACmG,EAAOC,GACL,cAAXA,IAIJmQ,GAAS,GACTrd,EAAMqiB,6BAoHkDhlB,QAAQ,UAAUiP,QAAQ,wBAClF,kBAAC,GAAD,CAAqBnH,KAAMrM,EAASgO,QAjHlB,SAACmG,EAAOC,GACX,cAAXA,IAIJsV,GAAU,GACVxiB,EAAMsiB,gCA2G0DjlB,QAAQ,UAAUiP,QAAQ,sCAGzF,kBAACxI,EAAA,EAAD,CACOrG,KAAK,4BACLsE,UAAWF,EAAQ4D,OACnBpI,QAAQ,WACRC,MAAM,aAJb,aAQG,6BACA,6BAEA,kBAACwN,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAEtB,yBAAKgE,UAAWF,EAAQ+Q,cAEpB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE5C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,oBACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,iBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,iBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,sBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,eACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,YAMA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAIJ,kBAAC,WAAD,KAEE6Z,EAEA,kBAAC3S,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,4EAKDgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAEH/G,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIiF,OAEP,kBAACnF,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIiS,UAAUC,OAAO,gBACrD,kBAACpS,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIqQ,MAAM6B,OAAO,OACjD,kBAACpS,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIqS,OAC7B,kBAACvS,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAImS,OAC7B,kBAACrS,GAAA,EAAD,CAAWlH,MAAM,QAEX,kBAAC0hB,GAAA,EAAD,CAASrV,MAAM,SAASsV,UAAU,OACjC,kBAACxb,GAAA,EAAD,CAAYjG,KAAI,uCAAkCkH,EAAItJ,IAAMuI,aAAW,OAAOtG,MAAM,WACnF,kBAAC,KAAD,cAmBfoW,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aApPH,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IAoPkBC,oBAjPI,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAgPkByB,iBAAkB3C,e,UErZlD1G,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCKyW,G,2KAtBX,OACE,6BACE,kBAACnW,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAAC,GAAD,CACEA,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAQ,OACRiP,QAAQ,wC,GAhBUS,IAAM/G,WCzE9BsF,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCK0W,G,2KAtBX,OACE,6BACE,kBAACpW,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAAC,GAAD,CACEA,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAQ,UACRiP,QAAQ,wC,GAhBYS,IAAM/G,WCzDhC0L,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACpCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAK1BskB,GAAgBjd,cAAW,SAACnI,GAAD,MAAY,CAC3CC,KAAM,CAEJoN,gBAAiBnM,KAAM,KACvB,UAAW,CACTmM,gBAAiBnM,KAAM,UALPiH,CAQlBnC,KAIF,SAASkO,GAAuBhS,GAC5B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAqU7D,IAIMhB,GAAqB,CAAE+H,oBAAkBC,uBAG9BgL,eAAWna,aAPJ,SAAA3E,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,QAMqC+L,GAAzBnH,CAA6C6G,cA5TxD,SAAAnI,GAAK,MAAK,CACrBC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjCJ,MAAO,CACLC,SAAU,KAEZmU,aAAc,CACZC,UAAW,WAkTsD5M,EA9SvE,SAA4BjG,GACxB,IAAM6B,EAAU7B,EADe,EAGTC,mBAAS,GAHA,mBAG1BkS,EAH0B,KAGpBe,EAHoB,OAIKjT,mBAAS,GAJd,mBAI1BmS,EAJ0B,KAIbe,EAJa,OAOHlT,mBAAS,IAPN,mBAO1BrH,EAP0B,KAOjBic,EAPiB,OAUT5U,oBAAS,GAVA,mBAU5BtH,EAV4B,KAUrBwqB,EAVqB,OAWLljB,oBAAS,GAXJ,mBAW5BmjB,EAX4B,KAWnBC,EAXmB,OAcbpjB,mBAAS,sBAAxBqjB,EAd4B,sBAeXrjB,mBAAS,qBAA1BsjB,EAf4B,sBAkBHtjB,oBAAS,GAlBN,mBAkB1BxH,EAlB0B,KAkBjBoI,EAlBiB,KA6C3B2iB,EAAe,SAAAnoB,GAEnB,GAAGsU,OAAO8T,QAAQ,iDAAiD,CACjE,IAAMC,EAAsB,CAC1BxoB,OAAQqoB,GAGVvjB,EAAMuO,mBAAmBlT,EAAIqoB,GAC7BL,GAAW,KAsBVM,EAAY,yCAAG,WAAM5mB,GAAN,gBAAA2J,EAAA,sEACAlK,IAAMkF,IAAI,+BADV,OACZjC,EADY,OAEdoV,EAAWpV,EAAIC,MACfmB,GAAW,GAHG,2CAAH,sDAOnBY,qBAAW,SAAA1E,GAIT,IAAM1B,EAAKmY,aAAa,SAAAzW,GACpB4mB,MACD,KAGH,OAAO,SAAA5mB,GACL0W,cAAcpY,MAMhB,IAIF,IAAMb,EAAOwF,EAAMxF,KAGfopB,EAAQ,IAAIlmB,KACTmmB,EAAKC,OAAOF,EAAMG,WAAWC,SAAS,EAAG,KACzCC,EAAKH,OAAOF,EAAMM,WAAa,GAAGF,SAAS,EAAG,KAC9CG,EAAOP,EAAMjmB,cAEpBimB,EAAQO,EAAO,IAAMF,EAAK,IAAMJ,EAChC,IAAMO,EAAazN,KAAOiN,GAAO/M,OAAO,cAGlC/U,EAAOlJ,EAAQ6N,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KACvEzL,QAAO,SAAAwJ,GAAG,OAAMgS,KAAOhS,EAAIiC,YAAYiQ,OAAO,gBAAkBuN,GAAc5pB,EAAKhC,KAAKuM,SAAWJ,EAAII,UAGlG2O,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAEvE,OACA,kBAAC,WAAD,KAGA,kBAAC,GAAD,CAAiBjN,KAAMxM,EAAOmO,QAjEN,SAACmG,EAAOC,GACpB,cAAXA,GAGHiW,GAAS,MA8DP,kBAAC,GAAD,CAAmBhe,KAAMie,EAAStc,QA1DT,SAACmG,EAAOC,GACrB,cAAXA,GAGHmW,GAAW,MAwDP,kBAACvY,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAGjB,yBAAKgE,UAAWF,EAAQ+Q,cACvB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE5C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,qBACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,WACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,gBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,UACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,cACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,kBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,qBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,mBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,iBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,iBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,aAIN,kBAACmH,GAAA,EAAD,KACAjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAKJ,kBAAC,WAAD,KAEoB,IAAhBwE,EAAK8R,OAEL,kBAACpP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,qGAKF,kBAAC,WAAD,MAGGgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAEH/G,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIzB,MAEP,kBAACuB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAItC,KAC7B,kBAACoC,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAImK,IAC7B,kBAACrK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAII,QAC7B,kBAACN,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIoK,YAC7B,kBAACtK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIqK,QAC7B,kBAACvK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsK,SAC7B,kBAACxK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIuK,SAIZ,sBAAfvK,EAAIzJ,OACF,kBAACuJ,GAAA,EAAD,CAAWlH,MAAM,OAAOwI,MAAO,CAAEzI,MAAO,QAAUqH,EAAIzJ,QAGtD,kBAAC,WAAD,KAEiB,uBAAfyJ,EAAIzJ,OAEN,kBAACuJ,GAAA,EAAD,CAAWlH,MAAM,OAAOwI,MAAO,CAAEzI,MAAO,SAAUqH,EAAIzJ,QAGtD,kBAACuJ,GAAA,EAAD,CAAWlH,MAAM,OAAOwI,MAAO,CAAEzI,MAAO,UAAWqH,EAAIzJ,SAO3D,kBAACuJ,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIiC,YAAYiQ,OAAO,eACvD,kBAACpS,GAAA,EAAD,CAAWlH,MAAM,QAKA,sBAAfoH,EAAIzJ,OAEJ,kBAAC,WAAD,KACF,kBAAC4I,EAAA,EAAD,CAAQ1B,QAAU,SAAArF,GAAC,OA9LxB,SAAA1B,GAEjB,GAAGsU,OAAO8T,QAAQ,+CAAgD,CAC/D,IAAMY,EAAoB,CACvBnpB,OAAQooB,GAGVtjB,EAAMsO,iBAAiBjT,EAAIgpB,GAC3BlB,GAAS,IAsLgCmB,CAAW3f,EAAItJ,KAAKgC,QAAQ,YAAYC,MAAM,WAArE,gBADE,IAGF,kBAAC4lB,GAAD,CAAe9gB,QAAU,SAAArF,GAAC,OAAIymB,EAAa7e,EAAItJ,KAAKgC,QAAQ,YAAYC,MAAM,WAA9E,mBAKE,kBAAC,WAAD,KAGmB,uBAAfqH,EAAIzJ,OAEH,kBAACgoB,GAAD,CAAe9gB,QAAU,SAAArF,GAAC,OAAIymB,EAAa7e,EAAItJ,KAAKgC,QAAQ,YAAYC,MAAM,WAA9E,kBAKC,kBAAC,WAAD,8BAkBrBoW,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAMlB,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KACE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aAhQG,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IAgQYC,oBA7PU,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IA4PYyB,iBAAkB3C,gBCrXtCN,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CACzC6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANQjG,CAQlBxB,MAGAqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAKxBskB,GAAgBjd,cAAW,SAACnI,GAAD,MAAY,CAC3CC,KAAM,CAEJoN,gBAAiBnM,KAAM,KACvB,UAAW,CACTmM,gBAAiBnM,KAAM,UALPiH,CAQlBnC,KAIJ,SAASkO,GAAuBhS,GAC5B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAsV3D,IAIMhB,GAAqB,CAAE+H,oBAAkBC,uBAGhCgL,eAAWna,aAPF,SAAA3E,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAMqC+L,GAAzBnH,CAA6C6G,cA/UxD,SAAAnI,GAAK,MAAK,CACrBC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjCJ,MAAO,CACLC,SAAU,KAEZmU,aAAc,CACZC,UAAW,QAEbG,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,OA6T2DpI,EAxTvE,SAAsBjG,GAClB,IAAM6B,EAAU7B,EADS,EAGH+M,IAAM9M,SAAS,GAHZ,mBAGpBkS,EAHoB,KAGde,EAHc,OAIWnG,IAAM9M,SAAS,GAJ1B,mBAIpBmS,EAJoB,KAIPe,EAJO,OAMKlT,mBAAS,IANd,mBAMlBrH,EANkB,KAMTic,EANS,OAQG5U,oBAAS,GARZ,mBAQpBxH,EARoB,KAQXoI,EARW,OAWDZ,oBAAS,GAXR,mBAWpBtH,EAXoB,KAWbwqB,EAXa,OAYGljB,oBAAS,GAZZ,mBAYpBmjB,EAZoB,KAYXC,EAZW,OAeLpjB,mBAAS,sBAAxBqjB,EAfoB,sBAgBHrjB,mBAAS,qBAA1BsjB,EAhBoB,oBA2CrBC,EAAe,SAAAnoB,GACnB,GAAGsU,OAAO8T,QAAQ,iDAAiD,CAC/D,IAAMC,EAAsB,CAC1BxoB,OAAQqoB,GAGVvjB,EAAMuO,mBAAmBlT,EAAIqoB,GAC7BL,GAAW,KAqBXM,EAAY,yCAAG,WAAM5mB,GAAN,gBAAA2J,EAAA,sEACDlK,IAAMkF,IAAI,+BADT,OACbjC,EADa,OAEjBoV,EAAWpV,EAAIC,MACfmB,GAAW,GAHM,2CAAH,sDAMlBY,qBAAW,SAAA1E,GAGT,IAAM1B,EAAKmY,aAAY,SAAAzW,GACrB4mB,MACC,KAEH,OAAO,SAAA5mB,GACL0W,cAAcpY,MAGhB,IAGF,IAAIuoB,EAAQ,IAAIlmB,KACRmmB,EAAKC,OAAOF,EAAMG,WAAWC,SAAS,EAAG,KACzCC,EAAKH,OAAOF,EAAMM,WAAa,GAAGF,SAAS,EAAG,KAC9CG,EAAOP,EAAMjmB,cAErBimB,EAAQO,EAAO,IAAMF,EAAK,IAAMJ,EAEhC,IAAMO,EAAazN,KAAOiN,GAAO/M,OAAO,cAGlCrc,EAAOwF,EAAMxF,KAIbsH,EAAOlJ,EAAQ6N,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAAIzL,QAAO,SAAAwJ,GAAG,OAClFgS,KAAOhS,EAAIiC,YAAYiQ,OAAO,gBAAkBuN,GAAc5pB,EAAKhC,KAAKuM,SAAWJ,EAAII,UAIrF2O,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAEzE,OACA,kBAAC,GAAD,KAGA,kBAAC,GAAD,CAAiBjN,KAAMxM,EAAOmO,QA7DJ,SAACmG,EAAOC,GACpB,cAAXA,GAGHiW,GAAS,MA0DT,kBAAC,GAAD,CAAmBhe,KAAMie,EAAStc,QAtDP,SAACmG,EAAOC,GACrB,cAAXA,GAGHmW,GAAW,MAoDX,kBAACxP,GAAA,EAAD,CAAajQ,aAAW,cACpB,kBAACpG,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,kBAAkBsE,UAAWF,EAAQmR,MAC9D,kBAAC,KAAD,CAAUjR,UAAWF,EAAQoK,OAD/B,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,8BACLqW,eAAa,QAEf,kBAAC,KAAD,CAAiB/R,UAAWF,EAAQoK,OALpC,iBAUE,kBAAC7O,EAAA,EAAD,CAAYC,QAAQ,KAAK6Q,cAAY,GAArC,iBAIJ,kBAACpD,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAGrB,yBAAKgE,UAAWF,EAAQ+Q,cACrB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE1C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,qBACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,WACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,gBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,UACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,cACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,kBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,qBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,mBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,iBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,iBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,aAKR,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAMJ,kBAAC,WAAD,KAEkB,IAAhBwE,EAAK8R,OAEH,kBAACpP,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WAClD,wGAKR,kBAAC,WAAD,MAEGgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAEH/G,KAAI,SAAC4J,EAAKtJ,GAAN,OAEL,kBAACmJ,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIzB,MAEP,kBAACuB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAItC,KAC7B,kBAACoC,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAImK,IAC7B,kBAACrK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAII,QAC7B,kBAACN,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIoK,YAC7B,kBAACtK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIqK,QAC7B,kBAACvK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsK,SAC7B,kBAACxK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIuK,SAEZ,sBAAfvK,EAAIzJ,OACF,kBAACuJ,GAAA,EAAD,CAAWlH,MAAM,OAAOwI,MAAO,CAAEzI,MAAO,QAAUqH,EAAIzJ,QAEtD,kBAAC,WAAD,KAEmB,uBAAfyJ,EAAIzJ,OAEJ,kBAACuJ,GAAA,EAAD,CAAWlH,MAAM,OAAOwI,MAAO,CAAEzI,MAAO,SAAUqH,EAAIzJ,QAErD,kBAACuJ,GAAA,EAAD,CAAWlH,MAAM,OAAOwI,MAAO,CAAEzI,MAAO,UAAWqH,EAAIzJ,SAKhE,kBAACuJ,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIiC,YAAYiQ,OAAO,eACvD,kBAACpS,GAAA,EAAD,CAAWlH,MAAM,QAII,sBAAfoH,EAAIzJ,OAEJ,kBAAC,WAAD,KACC,kBAAC4I,EAAA,EAAD,CAAQ1B,QAAU,SAAArF,GAAC,OAvMvB,SAAA1B,GAEf,GAAGsU,OAAO8T,QAAQ,+CAAgD,CAC/D,IAAMY,EAAoB,CACvBnpB,OAAQooB,GAGVtjB,EAAMsO,iBAAiBjT,EAAIgpB,GAC3BlB,GAAS,IA+L6BmB,CAAW3f,EAAItJ,KAAKgC,QAAQ,YAAYC,MAAM,WAArE,gBADD,IAGE,kBAAC,GAAD,CAAe8E,QAAU,SAAArF,GAAC,OAAIymB,EAAa7e,EAAItJ,KAAKgC,QAAQ,YAAYC,MAAM,WAA9E,mBAKF,kBAAC,WAAD,KAEiB,uBAAfqH,EAAIzJ,OAEH,kBAAC,GAAD,CAAekH,QAAU,SAAArF,GAAC,OAAIymB,EAAa7e,EAAItJ,KAAKgC,QAAQ,YAAYC,MAAM,WAA9E,kBAIA,kBAAC,WAAD,8BAiBZoW,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAMtB,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KACE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aAtQK,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IAsQUC,oBAnQY,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAkQUyB,iBAAkB3C,UAQxB,6BAEA,kBAAC5U,EAAA,EAAD,CAAYC,QAAQ,KAAK6Q,cAAY,GAArC,eAIA,kBAAC,GAAD,YCvbHqW,GAAa,SAAAxnB,GAAC,OAAI,SAAAC,GAC9BA,EAASsc,IACT9c,IAAMkF,IAAI,2BACTlC,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KlECyB,ckEAzBC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QAwCdwZ,GAAmB,SAAAvc,GAC/B,MAAO,CAAEpC,KlEvCoB,mBmEUxB+W,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAMzD,IAAM3J,GAAYC,aAAW,SAAAC,GAAK,MAAK,CAMlC6U,MAAO,CACRpU,MAAO,OACP2M,cAAe,QACblN,SAAU,GAEZ+U,aAAc,CACdlI,WAAW,IAEZmF,YAAa,CAERvR,SAAU,SAEjBmU,aAAc,CACXC,UAAW,QAEbrU,MAAO,CACLC,SAAU,SA8Kd,IAKM+lB,GAAqB,CAAED,eAEdnlB,gBAPS,SAAA3E,GAAK,MAAK,CAC7Ba,QAASb,EAAMa,QACfd,KAAMC,EAAMD,QAKuBgqB,GAAzBplB,EAjLf,SAAiBY,GACb,IAAM6B,EAAUjE,KADG,EAKGqC,mBAAS,GALZ,mBAKdkS,EALc,KAKRe,EALQ,OAMiBjT,mBAAS,GAN1B,mBAMdmS,EANc,KAMDe,EANC,OASWlT,mBAAS,IATpB,gCAUyBA,oBAAS,IAVlC,gCAaiBA,mBAAS,KAb1B,mBAaZwkB,EAbY,KAaAC,EAbA,KA2BnBjjB,qBAAU,SAAA1E,GACNiD,EAAMukB,eACR,IA7BiB,IA+BX/rB,EAASwH,EAAMxF,KAAfhC,KAGJsJ,EAAO9B,EAAM1E,QAAQtC,QAAQyN,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KACnFzL,QAAO,SAAAwJ,GAAG,OAAIA,EAAII,SAAWvM,EAAKuM,UAG/B2O,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAGrE,OACI,6BACI,kBAAC,GAAD,KAGN,kBAAChV,EAAA,EAAD,CAAYC,QAAQ,MAApB,mCACA,6BACU,kBAACyN,GAAA,EAAD,CAAO/I,UAAWF,EAAQ8Q,OAE1B,kBAACvF,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAErB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACoS,GAAI,IACX,kBAAC3K,EAAA,EAAD,CACIxH,GAAG,aACH6H,KAAK,aACLD,MAAM,uBACND,WAAS,EACTjB,UAAU,sBACVP,MAAOijB,EACPtU,aAAa,aACb/M,SAAU,SAAAjC,GAAC,OAAIujB,EAAcvjB,EAAEI,OAAOC,aAOlD,6BAEC,kBAACsJ,GAAA,EAAD,KACO,yBAAK/I,UAAWF,EAAQ+Q,cAExB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE5C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,eACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,cACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,qBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,sBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,oBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,iBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,kBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,8BAKA,kBAACmH,GAAA,EAAD,KACI1E,EAAM1E,QAAQ7C,QAGZ,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAKJ,kBAAC,WAAD,KAEmB,IAAhBwE,EAAK8R,OACL,kBAACnP,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACtD,kBAAC,KAAD,MAAmB,6BADnB,iDAKAgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAGH3G,QAAO,SAAAwJ,GAAG,OAAuE,IAAnEA,EAAIoK,WAAWqJ,cAAchF,OAAOqR,EAAWrM,kBAC7Drd,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAII,QAEP,kBAACN,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIoK,YAC7B,kBAACtK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsU,SAC7B,kBAACxU,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIggB,aAC7B,kBAAClgB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIigB,gBAC7B,kBAACngB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIkgB,iBAC7B,kBAACpgB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAImgB,kBAC7B,kBAACrgB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsS,kBAOpCvD,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aAxIX,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IAwI0BC,oBArIJ,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAoI0ByB,iBAAkB3C,eCpPlD3K,GAAa,SAAArH,GACf,OAAO,kBAACsH,GAAA,EAAD,eAAOC,UAAU,MAASvH,KAI/B0R,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAMzD,IAAM3J,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CAEF8M,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,IAEhC+T,MAAO,CACRpU,MAAO,OACP2M,cAAe,QACblN,SAAU,GAEZgV,KAAM,CACN7U,QAAS,QAEN8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAEZ0E,aAAc,CACdlI,WAAW,IAERmF,YAAa,CAEZvR,SAAU,SAEjBmU,aAAc,CACXC,UAAW,QAEbrU,MAAO,CACLC,SAAU,SAoXd,IAKM8H,GAAqB,CAAEwe,kBjCjcI,SAAAhoB,GAAC,OAAI,SAAAC,GACrCA,EAASsc,IACT9c,IAAMkF,IAAI,+CACTlC,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnClCyC,8BmCmCzCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAIA,OiC0biCklB,gBjC3ajB,SAAC3pB,EAAIqE,EAAMulB,GAAX,OAAqB,SAAAjoB,GACnDR,IAAM+C,KAAN,4DAAgElE,GAAMqE,GACrEF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnCrDkD,uCmCsDlDC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,UAGvBlD,IAAM+C,KAAK,uDAAwD0lB,GAClEzlB,MAAK,SAAAC,GAAG,OAAIA,KACZI,OAAM,SAAAC,GAAG,OAAIA,OiC8ZkDolB,gBjC3ZlC,SAAC7pB,EAAIqE,EAAMulB,GAAX,OAAqB,SAAAjoB,GACnDR,IAAM+C,KAAN,6DAAiElE,GAAMqE,GACtEF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnCpEkD,uCmCqElDC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,UAGvBlD,IAAM+C,KAAK,uDAAwD0lB,GAClEzlB,MAAK,SAAAC,GAAG,OAAIA,KACZI,OAAM,SAAAC,GAAG,OAAIA,QiCgZAV,gBAPS,SAAA3E,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,KACZkB,kBAAmBjB,EAAMiB,qBAKW6K,GAAzBnH,EAvXf,SAA6BY,GACzB,IAAM6B,EAAUjE,KADe,EAMLqC,mBAAS,GANJ,mBAMtBkS,EANsB,KAMhBe,EANgB,OAOSjT,mBAAS,GAPlB,mBAOtBmS,EAPsB,KAOTe,EAPS,OAUVlT,mBAAS,IAVC,uBAWCA,oBAAS,IAXV,mBAWtBxH,EAXsB,KAWboI,EAXa,OAaTZ,qBAbS,mBAatB5E,EAbsB,KAalB8pB,EAbkB,OAcGllB,mBAAS,IAdZ,mBActBC,EAdsB,KAcZklB,EAdY,OAeCnlB,mBAAS,IAfV,mBAetBgZ,EAfsB,KAebuC,EAfa,OAiBWvb,mBAAS,IAjBpB,mBAiBtBkZ,EAjBsB,KAiBRkM,EAjBQ,OAoBDplB,mBAAS,IApBR,mBAoBtBiN,EApBsB,KAoBdoY,EApBc,OAuBTrlB,mBAAS,aAAtBrG,EAvBsB,sBAwBTqG,mBAAS,aAAtBpG,EAxBsB,sBA2BcoG,oBAAS,GA3BvB,mBA2BtBslB,EA3BsB,KA2BPC,EA3BO,OA4BcvlB,oBAAS,GA5BvB,mBA4BtBwlB,EA5BsB,KA4BPC,EA5BO,QA8BWzlB,oBAAS,GA9BpB,qBA8BtB0lB,GA9BsB,MA8BRC,GA9BQ,SA+BW3lB,oBAAS,GA/BpB,qBA+BtB4lB,GA/BsB,MA+BRC,GA/BQ,MA6CvBC,GAA2B,SAAAhpB,GAC7ByoB,GAAkB,IAGhBQ,GAA2B,SAAAjpB,GAC7B2oB,GAAkB,IA6ExBjkB,qBAAU,SAAA1E,GAER,IAAM1B,EAAKmY,aAAY,SAAAzW,GACnBiD,EAAM+kB,oBACNlkB,GAAW,KACb,KAEF,OAAO,SAAA9D,GACL0W,cAAcpY,MAGhB,IAGFoG,qBAAU,SAAA1E,GACFiD,EAAMtE,kBAAkBnC,gBACvBqsB,IAAgB,KAEvB,CAAC5lB,EAAMtE,kBAAkBnC,iBAG3BkI,qBAAU,SAAA1E,GACFiD,EAAMtE,kBAAkBlC,gBACxBssB,IAAgB,KAEtB,CAAC9lB,EAAMtE,kBAAkBlC,iBAxJI,IA2JvBgB,GAASwF,EAATxF,KAEFsH,GAAO9B,EAAMtE,kBAAkBpC,QAAQmN,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAC9EzL,QAAO,SAAAwJ,GAAG,OAAIA,EAAII,SAAWvK,GAAKhC,KAAKuM,QAAyB,cAAfJ,EAAIzJ,UAGhEwY,GAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,GAAK8R,OAASzB,EAAOC,GAEvE,OACI,6BACI,kBAAC,GAAD,KAEA,kBAAC,GAAD,CAAqBjN,KAAMwgB,GAAc7e,QAlHrB,SAACmG,EAAOC,GACb,cAAXA,GAIJ0Y,IAAgB,IA6GuDvoB,QAAQ,UAAUiP,QAAQ,8BAGjG,kBAAC,GAAD,CAAqBnH,KAAM0gB,GAAc/e,QA7GvB,SAACmG,EAAOC,GACX,cAAXA,GAIJ4Y,IAAgB,IAwGuDzoB,QAAQ,OAAOiP,QAAQ,8BAO3F,kBAACzF,GAAA,EAAD,CACA1B,KAAMogB,EACNpc,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAASif,GACT/e,kBAAgB,2BAChBqC,mBAAiB,kCAEb,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,6BAGJ,kBAACiO,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,qDAKA,kBAACmO,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QAxGR,SAAArF,GACpB,IAAMkpB,EAAe,CACnB/qB,OAAQtB,GAGJssB,EAAY,CAChBhmB,WACA+Y,UACAE,gBAEFnZ,EAAMglB,gBAAgB3pB,EAAG4qB,EAAcC,GACvCV,GAAkB,IA6FkCnoB,QAAQ,WAAWC,MAAM,WAAzD,OAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAAS2jB,GAA0B1oB,QAAQ,WAAWC,MAAM,aAApE,QAQR,kBAACuJ,GAAA,EAAD,CACG1B,KAAMsgB,EACNtc,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAASkf,GACThf,kBAAgB,2BAChBqC,mBAAiB,kCAEb,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,4BAGJ,kBAACiO,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,kEAII,kBAACwH,EAAA,EAAD,CACEO,SA1IT,SAAAjC,GACnBmkB,EAAUnkB,EAAEI,OAAOC,QA0IS2B,WAAS,EACTxE,OAAO,QACPtD,GAAG,SACH4H,MAAM,SACNtI,KAAK,OACLqI,WAAS,KAIf,kBAACwG,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QAjIZ,SAAArF,GACpB,IAAMopB,EAAe,CACnBjrB,OAAQrB,GAGJqsB,EAAY,CAChBhmB,WACA+Y,UACAE,eACAjM,UAGFlN,EAAMklB,gBAAgB7pB,EAAI8qB,EAAcD,GACxCR,GAAkB,IAoHsCroB,QAAQ,WAAWC,MAAM,WAAzD,QAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAAS4jB,GAA0B3oB,QAAQ,WAAWC,MAAM,aAApE,YAMZ,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAApB,yBAIC,kBAACyN,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MACvB,yBAAKgE,UAAWF,EAAQ+Q,cAEvB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAEzC,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,0BACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,uBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,kBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,eACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,QACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,YAMA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAIJ,kBAAC,WAAD,KAEoB,IAAhBwE,GAAK8R,OAET,kBAACnP,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACnD,6BADH,mCAMGgE,EAAc,EACXtQ,GAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,IAEH/G,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIsU,SAEP,kBAACxU,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAII,QAC7B,kBAACN,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsW,gBAC7B,kBAACxW,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsS,aAC7B,kBAACxS,GAAA,EAAD,CAAWlH,MAAM,QACf,uBAAGE,KAAMkH,EAAIwC,KAAM5F,OAAO,UACxB,kBAAC,KAAD,OAEDoD,EAAIyC,UAEP,kBAAC3C,GAAA,EAAD,CAAWlH,MAAM,QACb,kBAACuG,EAAA,EAAD,CAAQzG,QAAQ,YAChBC,MAAM,UACN8E,QAAS,SAAArF,GAAC,OAhP3B,SAAC1B,EAAI6E,EAAU+Y,EAASX,GAC3C6M,EAAM9pB,GACN+pB,EAAYllB,GACZsb,EAAWvC,GACXoM,EAAgB/M,GAEhBkN,GAAkB,GA0OgCY,CAAezhB,EAAItJ,GAAIsJ,EAAIzE,SAAUyE,EAAIsU,QAAStU,EAAIsW,kBAFpE,UAKA,6BANJ,IAQI,kBAACnX,EAAA,EAAD,CACA1B,QAAS,SAAArF,GAAC,OA7O3B,SAAC1B,EAAI6E,EAAU+Y,EAASX,GAC3C6M,EAAM9pB,GACN+pB,EAAYllB,GACZsb,EAAWvC,GACXoM,EAAgB/M,GAEhBoN,GAAkB,GAuOgCW,CAAe1hB,EAAItJ,GAAIsJ,EAAIzE,SAAUyE,EAAIsU,QAAStU,EAAIsW,iBACpE5d,QAAQ,YACRC,MAAM,aAHN,iBAcXoW,GAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,KAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,GAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aA1TH,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IA0TkBC,oBAvTI,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAsTkByB,iBAAkB3C,e,qBC1clD3K,GAAa,SAAArH,GACf,OAAO,kBAACsH,GAAA,EAAD,eAAOC,UAAU,MAASvH,KAI/B0R,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAOzD,IAAM3J,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC0M,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEbkZ,SAAU,CACR5F,MAAO,QACPvF,SAAU,IAEZ0G,aAAc,CACdC,UAAW,QAEbrU,MAAO,CACLC,SAAU,SAwdd,IAKM6nB,GAAoB,CAAEC,cnBhjBC,SAAClrB,EAAIqE,EAAM4Y,GAAX,OAAqB,SAAAtb,GACjDR,IAAM+C,KAAN,yCAA6ClE,GAAMqE,GAClDF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KlDIqC,+BkDFrCkF,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,MAE1BtD,IAAM+C,KAAK,4CAA6C+Y,GACvD9Y,MAAK,SAAAC,GAAG,OAAIA,KACZI,OAAM,SAAAC,GAAG,OAAIA,OmBuiB4B0mB,mBnBpiBT,SAAAzpB,GACjC,MAAO,CAAEpC,KlDLmC,kCqEwiBkB8rB,cnBhiBlC,SAACprB,EAAIqE,EAAM4Y,GAAX,OAAqB,SAAAtb,GACjDR,IAAM+C,KAAN,yCAA6ClE,GAAMqE,GAClDF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KlDVqC,+BkDYrCkF,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,MAE1BtD,IAAM+C,KAAK,oDAAqD+Y,GAC/D9Y,MAAK,SAAAC,GAAG,OAAIA,KACZI,OAAM,SAAAC,GAAG,OAAIA,OmBuhB+D4mB,mBnBphB5C,SAAA3pB,GACjC,MAAO,CAAEpC,KlDnBmC,kCqEsiBqDgsB,kBnBhhBjE,SAACtrB,EAAIqE,EAAM4Y,GAAX,OAAqB,SAAAtb,GACrDR,IAAM+C,KAAN,6CAAiDlE,GAAMqE,GACtDF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KlDxBoC,8BkD0BpCkF,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,MAE1BtD,IAAM+C,KAAK,4CAA6C+Y,GACvD9Y,MAAK,SAAAC,GAAG,OAAIA,KACZI,OAAM,SAAAC,GAAG,OAAIA,OmBugBsG8mB,uBnBpgB/E,SAAA7pB,GACrC,MAAO,CAAEpC,KlDnCmC,mCqEwiB9ByE,gBAPS,SAAA3E,GAAK,MAAK,CAC9BmB,WAAYnB,EAAMmB,WAClBpB,KAAMC,EAAMD,QAKwB8rB,GAAzBlnB,EA3df,SAA4BY,GACxB,IAAM6B,EAAUjE,KADc,EAINqC,mBAAS,GAJH,mBAIvBkS,EAJuB,KAIjBe,EAJiB,OAKQjT,mBAAS,GALjB,mBAKvBmS,EALuB,KAKVe,EALU,OAOMlT,mBAAS,IAPf,mBAOvBmd,EAPuB,KAOXpC,EAPW,OAQA/a,oBAAS,GART,mBAQvBxH,EARuB,KAQdoI,EARc,OASAZ,oBAAS,GATT,mBASvBkX,EATuB,KASdC,EATc,OAYVnX,mBAAS,MAZC,mBAYvB5E,EAZuB,KAYnB8pB,EAZmB,OAaEllB,mBAAS,IAbX,mBAavBC,EAbuB,KAab2mB,EAba,OAcA5mB,mBAAS,IAdT,mBAcvBgZ,EAduB,KAcduC,EAdc,OAeGvb,mBAAS,IAfZ,mBAevBkZ,EAfuB,KAeT2N,EAfS,OAgBF7mB,mBAAS,IAhBP,mBAgBvBiN,EAhBuB,KAgBfoY,EAhBe,OAkBarlB,oBAAS,GAlBtB,mBAkBvBslB,EAlBuB,KAkBRC,EAlBQ,QAmBavlB,oBAAS,GAnBtB,qBAmBvBwlB,GAnBuB,MAmBRC,GAnBQ,SAoBWzlB,oBAAS,GApBpB,qBAoBvB8mB,GApBuB,MAoBTC,GApBS,SAuBA/mB,oBAAS,GAvBT,qBAuBvBgnB,GAvBuB,MAuBdC,GAvBc,SAwBEjnB,oBAAS,GAxBX,qBAwBvBpG,GAxBuB,MAwBbstB,GAxBa,SAyBAlnB,oBAAS,GAzBT,qBAyBvBmnB,GAzBuB,MAyBdC,GAzBc,MA8CxBtB,GAA2B,SAAAhpB,GAC3ByoB,GAAkB,IAUlBQ,GAA2B,SAAAjpB,GAC7B2oB,IAAkB,IAEhB4B,GAAgB,SAACjsB,EAAI6E,EAAU+Y,EAASX,GAC1C6M,EAAM9pB,GACNwrB,EAAY3mB,GACZsb,EAAWvC,GACX6N,EAASxO,GAET0O,IAAiB,IAEfO,GAA0B,SAAAxqB,GAC5BiqB,IAAiB,IA+EpBvlB,qBAAU,SAAA1E,GACPP,IAAMkF,IAAI,qBACTlC,MAAK,SAAAC,GACFub,EAAcvb,EAAIC,MAClBmB,GAAW,MAEdhB,OAAM,SAAAC,GACAA,IACCe,GAAW,GACXuW,GAAW,SAIpB,CAACpX,EAAMpE,WAAWhC,SAAUoG,EAAMpE,WAAW/B,SAAUmG,EAAMpE,WAAW9B,eAG1E2H,qBAAU,SAAA1E,GACJiD,EAAMpE,WAAWhC,UAChBstB,IAAW,GAEjB3J,YAAW,WAAYvd,EAAMwmB,uBAAwB,OACpD,CAACxmB,EAAMpE,WAAWhC,WAEnB6H,qBAAU,SAAA1E,GACLiD,EAAMpE,WAAW/B,UAChBstB,IAAY,GAElB5J,YAAW,WAAYvd,EAAMwmB,uBAAwB,OACpD,CAACxmB,EAAMpE,WAAW/B,WAErB4H,qBAAU,SAAA1E,GACHiD,EAAMpE,WAAW9B,cAChButB,IAAW,GAEf9J,YAAW,WAAYvd,EAAM4mB,2BAA4B,OAC3D,CAAC5mB,EAAMpE,WAAW9B,eAvLU,IAyLtBtB,GAASwH,EAAMxF,KAAfhC,KAEFsJ,GAAOsb,EAAW3W,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEsO,KAAOrO,EAAEqO,MAAQ,EAAI,KACjD7Z,QAAO,SAAAwJ,GAAG,OAAIA,EAAII,SAAWvM,GAAKuM,UAGzC2O,GAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,GAAK8R,OAASzB,EAAOC,GAIvE,OACI,6BACI,kBAAC,GAAD,KAEA,kBAAC,GAAD,CAAqBjN,KAAM8hB,GAASngB,QA9HpB,SAACmG,EAAOC,GACT,cAAXA,IAIJga,IAAW,GACXlnB,EAAMwmB,uBAwH4DnpB,QAAQ,UAAUiP,QAAQ,uBAC5F,kBAAC,GAAD,CAAqBnH,KAAMtL,GAAUiN,QAvHpB,SAACmG,EAAOC,GACV,cAAXA,IAIJia,IAAY,GACZnnB,EAAM0mB,uBAiH8DrpB,QAAQ,UAAUiP,QAAQ,uBAC9F,kBAAC,GAAD,CAAqBnH,KAAMiiB,GAAStgB,QAhHpB,SAACmG,EAAOC,GACT,cAAXA,IAIJma,IAAW,GACXrnB,EAAM4mB,2BA0G4DvpB,QAAQ,OAAOiP,QAAQ,mBAKtF,kBAACzF,GAAA,EAAD,CACA1B,KAAMogB,EACNpc,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAASif,GACT/e,kBAAgB,2BAChBqC,mBAAiB,kCAEb,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,gCAGJ,kBAACiO,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,sDAKA,kBAACmO,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QA/HV,SAAArF,GAClB,IAIMmpB,EAAY,CACdhmB,WACA+Y,UACAE,aAAa,iBAAD,OAAmBA,EAAnB,kFAIhBnZ,EAAMumB,cAAclrB,EAXC,CACjBH,OAAQ,YAU0BgrB,GACtCV,GAAkB,IAkHkCnoB,QAAQ,WAAWC,MAAM,WAAzD,OAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAAS2jB,GAA0B1oB,QAAQ,WAAWC,MAAM,aAApE,QAON,kBAACuJ,GAAA,EAAD,CACC1B,KAAMsgB,GACNtc,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAASkf,GACThf,kBAAgB,2BAChBqC,mBAAiB,kCAEb,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,qBAGJ,kBAACiO,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,0EAGM,kBAACwH,EAAA,EAAD,CACAO,SAAU,SAAAjC,GAAC,OAAImkB,EAAUnkB,EAAEI,OAAOC,QAClC2B,WAAS,EACTxE,OAAO,QACPtD,GAAG,SACH4H,MAAM,SACNtI,KAAK,OACLqI,WAAS,KAIf,kBAACwG,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QAvJd,SAAArF,GAClB,IAIMmpB,EAAY,CAChBhmB,WACA+Y,UACAE,aAAa,iBAAD,OAAmBA,EAAnB,uBACZjM,UAIFwY,IAAkB,GAElB1lB,EAAMymB,cAAcprB,EAdC,CACnBH,OAAQ,YAa4BgrB,IAwIkB7oB,QAAQ,WAAWC,MAAM,WAAzD,OAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAAS4jB,GAA0B3oB,QAAQ,WAAWC,MAAM,aAApE,QAOV,kBAACuJ,GAAA,EAAD,CACK1B,KAAM4hB,GACN5d,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAASygB,GACTvgB,kBAAgB,2BAChBqC,mBAAiB,kCAEb,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,4BAGJ,kBAACiO,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,0FAMA,kBAACmO,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QArKnB,SAAArF,GAChB,IAIKmpB,EAAY,CAChBhmB,WACA+Y,UACAE,aAAa,iBAAD,OAAmBA,EAAnB,gCAGd6N,IAAiB,GAEjBhnB,EAAM2mB,kBAAkBtrB,EAZH,CACnBH,OAAQ,WAW+BgrB,IAwJkB7oB,QAAQ,WAAWC,MAAM,WAAxD,OAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAASmlB,GAAyBlqB,QAAQ,WAAWC,MAAM,aAAnE,QAMf,kBAACwN,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAEvB,yBAAKgE,UAAWF,EAAQ+Q,cAEpB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE5C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,uBACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,MACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,oBAEA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,uBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,+BACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,YAMA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAIJ,kBAAC,WAAD,KAEE6Z,EAEA,kBAAC3S,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,4EAKDgE,EAAc,EACXtQ,GAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,IAEH/G,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAImT,UAEP,kBAACrT,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIuU,WAC7B,kBAACzU,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIiS,UAAUC,OAAO,gBACrD,kBAACpS,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIwT,sBAC7B,kBAAC1T,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsS,aAC7B,kBAACxS,GAAA,EAAD,CAAWlH,MAAM,QAEA,YAAfoH,EAAIzJ,OAEJ,kBAAC,WAAD,KACE,kBAAC+jB,GAAA,EAAD,CAASrV,MAAM,SAASsV,UAAU,OAC/B,kBAACxb,GAAA,EAAD,CAAYtB,QAAS,SAAArF,GAAC,OAxU3C,SAAC1B,EAAI6E,EAAU+Y,EAASX,GAC3C6M,EAAM9pB,GACNwrB,EAAY3mB,GACZsb,EAAWvC,GACX6N,EAASxO,GAETkN,GAAkB,GAkUgDY,CAAezhB,EAAItJ,GAAIsJ,EAAIzE,SAAUyE,EAAIuU,UAAWvU,EAAImT,WAAWlU,aAAW,OAAOmC,MAAO,CAACzI,MAAO,UAC7H,kBAAC,KAAD,QAHN,IAOE,kBAAC2hB,GAAA,EAAD,CAASrV,MAAM,UAAUsV,UAAU,OAChC,kBAACxb,GAAA,EAAD,CAAYtB,QAAS,SAAArF,GAAC,OAnU5C,SAAC1B,EAAI6E,EAAU+Y,EAASX,GAC3C6M,EAAM9pB,GACNwrB,EAAY3mB,GACZsb,EAAWvC,GACX6N,EAASxO,GAEToN,IAAkB,GA6TiDW,CAAe1hB,EAAItJ,GAAIsJ,EAAIzE,SAAUyE,EAAIuU,UAAWvU,EAAImT,WAAWlU,aAAW,OAAOtG,MAAM,aACpH,kBAAC,KAAD,SAMN,kBAAC,WAAD,KAEuB,aAAfqH,EAAIzJ,OAEJ,mEAIa,kBAAC,WAAD,KAEc,aAAfyJ,EAAIzJ,OAEJ,kBAAC,WAAD,KACA,kBAAC,IAAD,CAAM4f,GAAE,gCAA2BnW,EAAItJ,GAA/B,YAAqCsJ,EAAImT,WAAjD,gCAGA,6BAJA,oCAOA,kBAACpU,GAAA,EAAD,CAAYtB,QAAS,SAAArF,GAAC,OAAIuqB,GAAc3iB,EAAItJ,GAAIsJ,EAAIzE,SAAUyE,EAAIuU,UAAWvU,EAAImT,WAAWlU,aAAW,OAAOtG,MAAM,WAClH,kBAAC,KAAD,QAKF,kBAAC,WAAD,qEAIA,kBAACoG,GAAA,EAAD,CAAYtB,QAAS,SAAArF,GAAC,OAAIuqB,GAAc3iB,EAAItJ,GAAIsJ,EAAIzE,SAAUyE,EAAIuU,UAAWvU,EAAImT,WAAWlU,aAAW,OAAOtG,MAAM,WAClH,kBAAC,KAAD,gBAqB/BoW,GAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,KAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,GAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aAtaT,SAACpF,EAAOuH,GAC1BtB,EAAQsB,IAsamBC,oBAnaF,SAAAxH,GAC3BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAkaqByB,iBAAkB3C,eCpkBlDpU,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEX2P,KAAM,CACDU,OAAQ,OACRlQ,QAAS,OACTC,cAAe,UAEjByP,UAAW,CACThD,WAAY,cA2EL2c,GAvEK,SAACxnB,GAElB,IAAM6B,EAAUjE,KAEjB,OACE,kBAAC,GAAD,CAAemE,UAAWF,EAAQ9D,MAE7B,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAK6Q,cAAY,GAArC,kBAIH,kBAACd,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAExB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GAEtB,kBAACE,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MACE,kBAACC,GAAA,EAAD,CACM7L,UAAWF,EAAQgM,UACnBC,MAAOC,KACPnE,MAAM,gBAGd,kBAACoE,GAAA,EAAD,CAAajM,UAAWF,EAAQoM,aACjB,kBAAC7Q,EAAA,EAAD,CAAY8Q,cAAY,EAAC7Q,QAAQ,KAAK4E,UAAU,MAAhD,qBAGA,kBAAC7E,EAAA,EAAD,kDAIb,kBAAC+Q,GAAA,EAAD,KACa,kBAACrK,EAAA,EAAD,CAAQrG,KAAK,8BAA8ByG,KAAK,QAAQ7G,QAAQ,WAAWC,MAAM,aAAjF,oBAStC,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GAEtB,kBAACE,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MACQ,kBAACC,GAAA,EAAD,CACI7L,UAAWF,EAAQgM,UACnBC,MAAOnV,KACPiR,MAAM,gBAEV,kBAACoE,GAAA,EAAD,CAAajM,UAAWF,EAAQoM,aAC5B,kBAAC7Q,EAAA,EAAD,CAAY8Q,cAAY,EAAC7Q,QAAQ,KAAK4E,UAAU,MAAhD,6BAGA,kBAAC7E,EAAA,EAAD,gDAIJ,kBAAC+Q,GAAA,EAAD,KACA,kBAACrK,EAAA,EAAD,CAAQrG,KAAK,+BAA+ByG,KAAK,QAAQ7G,QAAQ,WAAWC,MAAM,aAAlF,kC,qBCxEtCgO,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCKkb,G,2KAtBX,OACE,6BACE,kBAAC5a,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAAC,GAAD,CACEA,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAQ,UACRiP,QAAQ,mC,GAhBgBS,IAAM/G,WCzEpCsF,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCKmb,G,2KAtBX,OACE,6BACE,kBAAC7a,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAAC,GAAD,CACEA,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAQ,UACRiP,QAAQ,6B,GAhBSS,IAAM/G,WCtD7B0L,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACpCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC5B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAc7D,IA2PMhB,GAAqB,CAAEohB,gBhD1SE,SAAA5qB,GAAC,OAAI,SAAAC,GAChCA,EAASwR,IACThS,IAAMkF,IAAI,iCACTlC,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CAClBrC,KzB1DyB,oByB2DzBC,QAAS6E,EAAIC,UAEhBG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QgDmSgB8nB,kBhDjRb,SAAAvsB,GAAE,OAAI,SAAA2B,GACnCR,IAAMqrB,OAAN,uCAA6CxsB,IAC5CmE,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CAClBrC,KzBhF2B,uByBiF3BC,QAAS6E,EAAIC,UAEhBG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,SgD6QfyZ,eAAWna,aAPF,SAAA3E,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,KACXM,IAAKL,EAAMK,OAKmCyL,GAAzBnH,CAA6C6G,cA7PxD,SAAAnI,GAAK,MAAK,CACrBC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjCoU,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAET7P,MAAO,CACFC,SAAU,KAEhBmU,aAAc,CACRC,UAAW,WA2OoD5M,EAvOzD,SAACjG,GACd,IAAM6B,EAAU7B,EADQ,EAIGC,mBAAS,GAJZ,mBAIdkS,EAJc,KAIRe,EAJQ,OAKiBjT,mBAAS,GAL1B,mBAKdmS,EALc,KAKDe,EALC,OAQSlT,oBAAS,GARlB,mBAQdxH,EARc,KAQLoI,EARK,OAWCZ,oBAAS,GAXV,mBAWhBkF,EAXgB,KAWVmO,EAXU,OAcIrT,oBAAS,GAdb,mBAchB6nB,EAdgB,KAcRC,EAdQ,KAkDrBtmB,qBAAW,SAAA1E,GACNiD,EAAMlF,IAAInC,OACX2a,GAAQ,KAEV,CAACtT,EAAMlF,IAAInC,QAEb8I,qBAAW,SAAA1E,GAET,IAAM1B,EAAKmY,aAAa,SAAAzW,GAExBiD,EAAM2nB,kBACN9mB,GAAW,KAER,KAEH,OAAO,SAAA9D,GACL0W,cAAcpY,MAIf,IAGL,IAAMb,EAAOwF,EAAMxF,KAGbsH,EAAO9B,EAAMlF,IAAIlC,QAAQ6N,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KACjFzL,QAAO,SAAAwJ,GAAG,OAAInK,EAAKhC,KAAKuM,SAAWJ,EAAII,UAGlC2O,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAE3E,OACG,kBAAC,GAAD,KAEA,kBAAC,GAAD,CAAgBjN,KAAM2iB,EAAOhhB,QA7DV,SAACmG,EAAOC,GACd,cAAXA,GAGH6a,GAAS,MA0DR,kBAAC,GAAD,CAAuB5iB,KAAMA,EAAM2B,QArElB,SAACmG,EAAOC,GACZ,cAAXA,GAGHoG,GAAQ,MAmEN,kBAACO,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC5D,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,kBAAkBsE,UAAWF,EAAQmR,MAC9D,kBAAC,KAAD,CAAUjR,UAAWF,EAAQoK,OAD/B,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,+BACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAiBjR,UAAWF,EAAQoK,OANpC,iBAWJ,kBAAC7O,EAAA,EAAD,CAAYC,QAAQ,KAAK6Q,cAAY,GAArC,sBAIK,kBAACpD,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAEpB,yBAAKgE,UAAWF,EAAQ+Q,cAEtB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE3C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,uBACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,cACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,4BACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,iBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,YAIN,kBAACmH,GAAA,EAAD,KACAjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAKJ,kBAAC,WAAD,KAEoB,IAAhBwE,EAAK8R,OAEL,kBAACpP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,qGAKF,kBAAC,WAAD,MAGGgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAEH/G,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAAOF,EAAIqjB,YAC3C,kBAACvjB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIoQ,WAC7B,kBAACtQ,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAII,QAC7B,kBAACN,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIqQ,MAC7B,kBAACvQ,GAAA,EAAD,CAAWlH,MAAM,QAChB,kBAACmG,GAAA,EAAD,CACCE,aAAW,SACXtG,MAAM,YACN8E,QAAU,SAAArF,GAAC,OArIb1B,EAqImCsJ,EAAItJ,QAnI5DsU,OAAO8T,QAAQ,0CAChBzjB,EAAM4nB,kBAAkBvsB,GACxB0sB,GAAS,KAJa,IAAA1sB,IAuIM,kBAAC,KAAD,cAWnBqY,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAMlB,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KACE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aA7JI,SAACpF,EAAOuH,GAChCtB,EAAQsB,IA6JYC,oBA1JU,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAyJYyB,iBAAkB3C,UAUjC,yBAAKjM,MAAO,CAAE8E,WAAY,SAC1B,kBAAC/G,EAAA,EAAD,CAAQrG,KAAK,8CAA8CyG,KAAK,QAAQ7G,QAAQ,WAAWC,MAAM,aAAjG,sBCHX,IAKMiJ,GAAqB,CAAE0hB,gBjD/QE,SAAAC,GAAY,OAAI,SAAAlrB,GAC9CR,IAAM+C,KAAK,4BAA6B2oB,GACpC1oB,MAAK,SAAAC,GAAG,OACLzC,EAAS,CACLrC,KzBpEoB,mByBqEpBC,QAAS6E,EAAIC,UAEpBG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACnBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,aiDwQf6Z,eAAWna,aAPF,SAAA3E,GAAK,MAAK,CAChCK,IAAKL,EAAMK,IACXD,OAAQJ,EAAMI,UAKmC0L,GAAzBnH,CAA6C6G,cAjUxD,SAAAnI,GAAK,MAAK,CACrBC,KAAM,CACFI,QAAS,OACTmT,SAAU,QAEdlB,OAAO,aACH7R,MAAO,OACPY,WAAYrB,EAAMc,QAAQ,GAC1ByN,YAAavO,EAAMc,QAAQ,IAC1Bd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDL,MAAO,IACPY,WAAY,OACZkN,YAAa,SAGjBpO,MAAM,aACJC,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG3ByR,UAAW,CACPoB,MAAO,QACPnU,MAAO,OAEX0S,YAAa,CAEXvR,SAAU,SAEZsF,OAAO,CACL7F,UAAWJ,EAAMc,QAAQ,IAE3B+N,MAAO,CACH6E,QAAS1T,EAAMc,UAAY,GAE5BoU,KAAM,CACX7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,OAoR2DpI,EAhRvE,SAAkBjG,GAGd,IAAM6B,EAAU7B,EAHI,EAMUC,mBAAS,IANnB,mBAMfkP,EANe,KAMLN,EANK,OAOwB5O,oBAAS,GAPjC,mBAOfoP,EAPe,KAOEkE,EAPF,OAUMtT,mBAAS,IAVf,mBAUfpF,EAVe,KAUPyF,EAVO,OAaeL,mBAAS,IAbxB,mBAaf+nB,EAbe,KAaHG,EAbG,OAcYloB,mBAAS,IAdrB,mBAcf8U,EAde,KAcJqT,EAdI,OAeMnoB,mBAAS,IAff,mBAef8E,EAfe,KAePsjB,EAfO,OAgBkBpoB,mBAAS,IAAIvC,MAhB/B,mBAgBfggB,EAhBe,KAgBDC,EAhBC,KAwFtB,OA7BElc,qBAAW,SAAA1E,GAET,IAAM1B,EAAKmY,aAAa,SAAAzW,IACtB,yCAAC,WAAMA,GAAN,gBAAA2J,EAAA,sEACqBlK,IAAMkF,IAAI,iBAD/B,OACSjC,EADT,OAEGoP,EAAYpP,EAAIC,MAChB6T,GAAmB,GAHtB,2CAAD,0DAKC,KAEH,OAAO,SAAAxW,GACL0W,cAAcpY,MAGf,IAGHoG,qBAAW,SAAA1E,GACNiD,EAAMnF,QACPyF,EAAUN,EAAMnF,UAElB,CAACmF,EAAMnF,SAET4G,qBAAW,SAAA1E,GACNiD,EAAMlF,IAAInC,OACTqH,EAAM2B,QAAQC,KAAK,kCAEtB,CAAC5B,EAAMlF,IAAInC,QAGb,kBAAC,GAAD,KAEC,kBAACkb,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC5D,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,kBAAkBsE,UAAWF,EAAQmR,MAC9D,kBAAC,KAAD,CAAUjR,UAAWF,EAAQoK,OAD/B,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,UACNG,KAAK,+BACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAiBjR,UAAWF,EAAQoK,OANpC,gBASA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,8CACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAajR,UAAWF,EAAQoK,OANhC,QAYC,yBAAKlK,UAAWF,EAAQ9D,MAEjB,0BAAMgE,UAAWF,EAAQuO,QACrB,kBAACtF,GAAA,EAAD,CAAO/I,UAAWF,EAAQ5D,MAAO8H,MAAO,CAAE8E,WAAY,OAAQK,cAAc,SAExE,kBAAC9N,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,yBAGA,6BAER,kBAACyE,EAAA,EAAD,CAAWE,SAAS,MACZ,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAIA,0BAAMoF,YAAU,EAACC,SA5FpB,SAAAvB,GAEjBA,EAAEC,iBAEF,IAAM4T,EAAO2B,KAAO+G,GAAc7G,OAAO,yBAEnCyR,EAAiB,CACnBN,aACAjT,YACAhQ,SACAiQ,QAGJhV,EAAMioB,gBAAgBK,KAiFF,kBAAClb,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAGzB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACP,kBAAC1K,EAAA,EAAD,CACArB,MAAOwmB,EACP5kB,SAxHP,SAAAjC,GACrBgnB,EAAchnB,EAAEI,OAAOC,QAwHSnG,GAAG,aACH6H,KAAK,aACLD,MAAM,eACND,WAAS,EACTmN,aAAa,eAGnB,0BAAMpK,MAAO,CAAEzI,MAAO,QACnBzC,EAAOmtB,aAKd,kBAAC5a,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACT,kBAAC1K,EAAA,EAAD,CACArB,MAAOuT,EACP3R,SApIR,SAAAjC,GACpBinB,EAAajnB,EAAEI,OAAOC,QAoIUnG,GAAG,YACH6H,KAAK,YACLD,MAAM,aACND,WAAS,EACTmN,aAAa,cAErB,0BAAMpK,MAAO,CAAEzI,MAAO,QACjBzC,EAAOka,YAKhB,kBAAC3H,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IAEX,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAE1C,kBAACO,GAAA,EAAD,CAAYC,QAAQ,iBAApB,eAEI,kBAACC,GAAA,EAAD,CACIjP,MAAOuD,EACP3B,SApJf,SAAAjC,GACjBknB,EAAUlnB,EAAEI,OAAOC,QAqJakP,WAAY,CACRxN,KAAK,SACL7H,GAAI,kBAKRgU,EACI,kBAACpG,GAAA,EAAD,MAEJkG,EAASpU,KAAI,SAACgK,EAAQ1J,GAClB,OAAQ,kBAAC4N,GAAA,EAAD,CAAUrE,IAAKvJ,EAAImG,MAAOuD,EAAO4L,YAAa5L,EAAO4L,WAArD,UAQnB,0BAAM5K,MAAO,CAAEzI,MAAO,QAClBzC,EAAOkK,SAKhB,kBAACqI,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aACvC,kBAAC,KAAD,CAAyBgO,MAAOC,MACxB,kBAAC,KAAD,CACEC,gBAAc,EACd7gB,QAAQ,SACRwZ,OAAO,aACPlY,OAAO,SACPtD,GAAG,qBACH4H,MAAM,2BACNzB,MAAOkc,EACPta,SArLb,SAAA4R,GACrB2I,EAAgB3I,IAqLkBmJ,oBAAqB,CACnB,aAAc,mBAK3B,0BAAMpY,MAAO,CAAEzI,MAAO,QAChBzC,EAAOma,OAKf,kBAAClR,EAAA,EAAD,CACOnJ,KAAK,SACNuJ,KAAK,QACL7G,QAAQ,WACRC,MAAM,YACLyE,UAAWF,EAAQkC,QAL1B,mBChRnBnG,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEb6U,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAETV,KAAM,CACN8D,MAAO,SACNvP,SAAU,KAEZ+T,MAAO,CACL7H,UAAW,UAEb8H,OAAQ,CACN/K,gBAAiBgL,KAAI,UAsGVoS,OAjGf,SAAyBvoB,GAErB,IAAM6B,EAAUjE,KAFW,EAIDqC,mBAAS,IAJR,mBAIpBgN,EAJoB,KAIboJ,EAJa,KAavB,OAPJ5U,qBAAU,SAAA1E,GACNP,IAAMkF,IAAN,6BAAgC1B,EAAMsW,MAAMC,OAAOlb,KAClDmE,MAAK,SAAAC,GAAG,OAAI4W,EAAS5W,EAAIC,SACzBG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QAC5B,IAIM,6BACI,kBAAC,GAAD,KACI,kBAACkC,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE9B,kBAACC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAG3B,kBAAC8V,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC1D,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,KAAKsE,UAAWF,EAAQmR,MACjD,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OADpC,YAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAI,sBAAiBuC,EAAMsW,MAAMC,OAAOlb,IACxCyY,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OANlC,UAaJ,kBAACmB,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACjB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAEP,kBAACG,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MACvB,kBAAC6I,GAAA,EAAD,CACEN,OACE,kBAACO,GAAA,EAAD,CAAQ7S,aAAW,SAAS7B,UAAWF,EAAQqU,QAA/C,OASFtM,MAAOqD,EAAMrD,MACb8M,UAAS,UAAKC,KAAO1J,EAAM2J,UAAUC,OAAO,eAAnC,gBAAyD5J,EAAM6J,SAG9E,kBAAClJ,GAAA,EAAD,CAAW7L,UAAWF,EAAQoU,OACxB,yBAAKlQ,MAAO,CAACsI,OAAQ,QAAS9P,MAAO,SAAU8D,IAAG,UAAK4K,EAAM8J,WAG/D,kBAAC/I,GAAA,EAAD,KACG,kBAAC5Q,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,KAA5D,UACSgL,EAAM+J,OAGhB,kBAAC5Z,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,cAAc2E,UAAU,KACvDgL,EAAMgK,cAGX,kBAAC9I,GAAA,EAAD,CAAa+I,gBAAc,MAQrC,kBAAC9J,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,UCzHnC3P,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEb6U,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAETV,KAAM,CACN8D,MAAO,SACNvP,SAAU,KAEZ+T,MAAO,CACL7H,UAAW,UAEb8H,OAAQ,CACN/K,gBAAiBgL,KAAI,UAwKVqS,OAnKf,SAAoBxoB,GAEhB,IAAM6B,EAAUjE,KAFM,EAIMqC,mBAAS,IAJf,mBAIfiV,EAJe,KAIPC,EAJO,OAKQlV,oBAAS,GALjB,mBAKfkX,EALe,KAKNC,EALM,KAiBlB,OATJ3V,qBAAU,SAAA1E,GACNP,IAAMkF,IAAN,uCAA0C1B,EAAMsW,MAAMC,OAAOK,WAC5DpX,MAAK,SAAAC,GAAG,OAAI0V,EAAU1V,EAAIC,SAC1BG,OAAM,SAAAC,GACAA,GACCsX,GAAW,QAErB,IAGM,6BACI,kBAAC,GAAD,KAEQ,kBAACpV,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAGlC,kBAACC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAE1C,kBAAC8V,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SACvD,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,KAAKsE,UAAWF,EAAQmR,MACjD,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OADpC,YAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAI,mCAA8BuC,EAAMsW,MAAMC,OAAOK,UACrD9C,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OANlC,WAWY,kBAAC,WAAD,KAQQkL,EAEA,kBAAC/J,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACpB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACd,kBAACnQ,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,IAAI1E,MAAM,UAChE,kBAAC,KAAD,CAAawI,MAAO,CAACzI,MAAO,SADlC,IAC6C,6BAD7C,iDAMF,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,KAIjB,kBAAC,WAAD,KAE0B,IAAlB2H,EAAOtB,OAEL,kBAACxG,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACtB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACd,kBAACnQ,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,IAAI1E,MAAM,UAChE,kBAAC,KAAD,CAA4BwI,MAAO,CAACzI,MAAO,WADjD,IAC8D,6BAD9D,sEAMF,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,KAMrB,kBAAC,WAAD,KAGI2H,EAAOna,KAAI,SAAAkS,GAAK,OAE5B,kBAACG,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACb,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAEP,kBAACG,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MACvB,kBAAC6I,GAAA,EAAD,CACEN,OACE,kBAACO,GAAA,EAAD,CAAQ7S,aAAW,SAAS7B,UAAWF,EAAQqU,QAA/C,OASFtM,MAAOqD,EAAMrD,MACb8M,UAAS,UAAKC,KAAO1J,EAAM2J,UAAUC,OAAO,eAAnC,gBAAyD5J,EAAM6J,SAG9E,kBAAClJ,GAAA,EAAD,CAAW7L,UAAWF,EAAQoU,OACxB,yBAAKlQ,MAAO,CAACsI,OAAQ,QAAS9P,MAAO,SAAU8D,IAAG,UAAK4K,EAAM8J,WAG/D,kBAAC/I,GAAA,EAAD,KACG,kBAAC5Q,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,KAA5D,UACSgL,EAAM+J,OAGhB,kBAAC5Z,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,cAAc2E,UAAU,KACvDgL,EAAMgK,cAGX,kBAAC9I,GAAA,EAAD,CAAa+I,gBAAc,MAQrC,kBAAC9J,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,gB,oBCtLrD,IAAM6U,GAASvkB,aAAW,SAAAC,GAAK,MAAK,CAChCC,KAAK,yBACDI,QAAS,OACTmT,SAAU,QACNxT,EAAMkN,OAAOC,WAHjB,IAIAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAG/BX,MAAM,aACJC,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG3ByR,UAAW,CACPoB,MAAO,QACPnU,MAAO,OAEX0S,YAAa,CAEXvR,SAAU,SAEZsF,OAAO,CACL7F,UAAWJ,EAAMc,QAAQ,IAE3B+N,MAAO,CACH6E,QAAS1T,EAAMc,UAAY,GAE5BoU,KAAM,CACX7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAERhD,MAAO,CACPlN,QAAS,YAiSb,IAMMoI,GAAqB,CAAEkiB,oBhB/SM,SAAA/oB,GAAI,OAAI,SAAA1C,GAC1CR,IAAM+C,KAAK,+BAAgCG,GAC1CF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,K7DdoC,yB6DepCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,agBySTN,gBARS,SAAA3E,GAAK,MAAK,CAChCkB,aAAclB,EAAMkB,aACpBnB,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,UAKwB0L,GAAzBnH,EApSf,SAA0BY,GAClB,IAAM6B,EAAUugB,KADQ,EAKIniB,mBAAS,CACjC2J,MAAO,GACPoN,MAAO,GACPC,YAAa,GACbyR,QAAQ,YATY,mBAKjB3P,EALiB,KAKTC,EALS,OAaI/Y,mBAAS,CACjC8W,OAAQ,KACR3P,SAAU,KAfU,mBAajB2P,EAbiB,KAaT4R,EAbS,OAkBiB1oB,mBAAS,IAAIvC,MAlB9B,mBAkBhBggB,EAlBgB,KAkBFC,EAlBE,OAmBiB1d,mBAAS,IAAIvC,MAnB9B,mBAmBhBkgB,EAnBgB,KAmBFC,EAnBE,OAqBK5d,mBAAS,IArBd,mBAqBhBpF,EArBgB,KAqBRyF,EArBQ,KAyExB,OAbAmB,qBAAU,SAAA1E,GACJiD,EAAMrE,aAAa9C,OACnBmH,EAAM2B,QAAQC,KAAK,sBAEvB,CAAC5B,EAAMrE,aAAa9C,QAGtB4I,qBAAU,SAAA1E,GACLiD,EAAMnF,QACLyF,EAAUN,EAAMnF,UACpB,CAACmF,EAAMnF,SAIL,6BACI,kBAAC,GAAD,KAEA,kBAACgZ,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC1D,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,mBAAmBsE,UAAWF,EAAQmR,MAC/D,kBAAC,KAAD,CAAcjR,UAAWF,EAAQoK,OADnC,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,4BACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAajR,UAAWF,EAAQoK,OANhC,QAWA,kBAACnB,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAEd,kBAACiE,EAAA,EAAD,CAAWE,SAAS,MAElB,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,uBAGI,6BAEF,0BAAMkF,YAAU,EAACC,SAvExB,SAAAvB,GACjBA,EAAEC,iBAGF,IAAMwV,EAAWD,KAAO+G,GAAc7G,OAAO,cACvCiH,EAAWnH,KAAOiH,GAAc/G,OAAO,YAEvC7B,EAAI,UAAM4B,EAAN,YAAkBkH,GAEpBtlB,EAASwH,EAAMxF,KAAfhC,KAEJynB,EAAK,IAAIlE,SACbkE,EAAG9D,OAAO,SAAUpF,EAAOA,QAC3BkJ,EAAG9D,OAAO,QAASpD,EAAOnP,OAC1BqW,EAAG9D,OAAO,QAASpD,EAAO/B,OAC1BiJ,EAAG9D,OAAO,cAAepD,EAAO9B,aAChCgJ,EAAG9D,OAAO,WAAYpF,EAAO3P,UAC7B6Y,EAAG9D,OAAO,kBAAmBpD,EAAO5N,iBACpC8U,EAAG9D,OAAO,OAAQnH,GAClBiL,EAAG9D,OAAO,WAAYvF,GACtBqJ,EAAG9D,OAAO,WAAY2B,GACtBmC,EAAG9D,OAAO,QAAV,sBAAkC3jB,EAAKuM,SAEvC/E,EAAMyoB,oBAAoBxI,IAgDuC2I,QAAQ,sBAAsBC,OAAO,QAE9E,kBAACzrB,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAII,kBAAC+P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACX,kBAAC1K,EAAA,EAAD,CACArB,MAAOuX,EAAOnP,MACdxG,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAanP,MAAOzI,EAAEI,OAAOC,UACjDnG,GAAG,QACH6H,KAAK,QACLD,MAAM,2BACND,WAAS,EACTmN,cAAY,KAGpB,0BAAMpK,MAAO,CAAEzI,MAAO,QACdzC,EAAO+O,OAEf,6BACC,kBAACwD,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACZ,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aACtC,kBAAC,KAAD,CAAyBgO,MAAOC,MACxB,kBAAC,KAAD,CACEzc,MAAOkc,EACPta,SAzG/B,SAAA4R,GACf2I,EAAgB3I,IAyG8BkJ,gBAAc,EACd7gB,QAAQ,SACRwZ,OAAO,aACPlY,OAAO,SACPtD,GAAG,qBACH4H,MAAM,oBACNkb,oBAAqB,CACnB,aAAc,oBAMjC,0BAAMpY,MAAO,CAAEzI,MAAO,QACfzC,EAAOma,MAGf,6BAEC,kBAAC5H,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACZ,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aACtC,kBAAC,KAAD,CAAyBgO,MAAOC,MAC5B,kBAAC,KAAD,CACCpH,OAAQ,UACPrV,MAAOoc,EACPxa,SA/H3B,SAAAgb,GACfP,EAAgBO,IA+H0Bzf,OAAO,SACPtD,GAAG,cACH4H,MAAM,cACNkb,oBAAqB,CACnB,aAAc,eAEhBE,aAAc,kBAAC,KAAD,WAK3B,6BAED,kBAACjR,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACX,kBAAC1K,EAAA,EAAD,CACIrB,MAAOuX,EAAO/B,MACd5T,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa/B,MAAO7V,EAAEI,OAAOC,UACrDnG,GAAG,QACH6H,KAAK,QACLD,MAAM,8BACND,WAAS,EACTmN,cAAY,KAGnB,0BAAMpK,MAAO,CAAEzI,MAAO,QACfzC,EAAOmc,OAEf,6BAER,kBAAC5J,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,EAAGP,WAAW,YAEnC,kBAAC+O,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAQX,2BACAnK,SAAU,SAAAjC,GAAC,OAAIwnB,EAAU,2BAAI5R,GAAL,IAAaA,OAAQ5V,EAAEI,OAAOgb,MAAM,GAAInV,SAAUjG,EAAEI,OAAOgb,MAAM,GAAGrZ,KAAKkV,cAAc0Q,MAAM,KAAKC,KAAK,SAC/HhnB,UAAWF,EAAQwJ,MAAOhQ,GAAG,SAAS6H,KAAK,SAASvI,KAAK,SACvD,2BAAO6V,QAAQ,UACb,kBAAC9M,GAAA,EAAD,CAAYpG,MAAM,UAAUsG,aAAW,iBAAiB3B,UAAU,QAChE,kBAAC,KAAD,SAMR,kBAACmL,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACb,kBAAC1K,EAAA,EAAD,CACArB,MAAOuV,EAAO3P,SACd/L,GAAG,uBACH4H,MAAM,uBACNI,WAAW,kCACXL,WAAS,EACPO,WAAY,CACP6V,UAAU,GAEdnJ,gBAAiB,CACZC,QAAQ,OAKvB,0BAAMnK,MAAO,CAAEzI,MAAO,QACPzC,EAAOkc,QAGvB,6BAEA,kBAAC3J,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,EAAGP,WAAW,YAEvC,kBAAC+O,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACT,kBAAC1K,EAAA,EAAD,CACMrB,MAAOuX,EAAO9B,YACd7T,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa9B,YAAa9V,EAAEI,OAAOC,UACvDnG,GAAG,cACH6H,KAAK,cACLD,MAAM,2BACND,WAAS,EACTmN,cAAY,EACZS,WAAS,KAIrB,6BACE,0BAAM7K,MAAO,CAAEzI,MAAO,QACZzC,EAAOoc,aAGnB,kBAAC7J,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACP,kBAAC1K,EAAA,EAAD,CACAlI,KAAK,QACL6G,MAAOuX,EAAO2P,QACdtlB,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa2P,QAASvnB,EAAEI,OAAOC,UACnDnG,GAAG,QACH6H,KAAK,QACLD,MAAM,uDACND,WAAS,EACTmN,cAAY,MAMxB,kBAACrM,EAAA,EAAD,CACInJ,KAAK,SACL0C,QAAQ,WACRC,MAAM,YACNyE,UAAWF,EAAQkC,QAJvB,sBChT9Bqe,GAASvkB,aAAW,SAAAC,GAAK,MAAK,CAChCC,KAAK,yBACDI,QAAS,OACTmT,SAAU,QACNxT,EAAMkN,OAAOC,WAHjB,IAIAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAG/BX,MAAM,aACJC,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG3ByR,UAAW,CACPoB,MAAO,QACPnU,MAAO,OAEX0S,YAAa,CAEXvR,SAAU,SAEZsF,OAAO,CACL7F,UAAWJ,EAAMc,QAAQ,IAE3B+N,MAAO,CACH6E,QAAS1T,EAAMc,UAAY,GAE5BoU,KAAM,CACX7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAERhD,MAAO,CACPlN,QAAS,YAgVb,IAMMoI,GAAqB,CAAEyiB,uBjBlVS,SAAC3tB,EAAGqE,GAAJ,OAAa,SAAA1C,GAClDR,IAAM+C,KAAN,gDAAoDlE,GAAMqE,GACzDF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,K7D9BuC,4B6D+BvCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,aiB4UTN,gBARS,SAAA3E,GAAK,MAAK,CAChCkB,aAAclB,EAAMkB,aACpBnB,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,UAKwB0L,GAAzBnH,EAnVf,SAA6BY,GACrB,IAAM6B,EAAUugB,KADW,EAKCniB,mBAAS,CACjC2J,MAAO,GACPmN,OAAQ,GACR3P,SAAS,GACT4P,MAAO,GACPC,YAAa,GACbyR,QAAQ,KAXe,mBAKpB3P,EALoB,KAKZC,EALY,OAcc/Y,mBAAS,IAAIvC,MAd3B,mBAcnBggB,EAdmB,KAcLC,EAdK,OAec1d,mBAAS,IAAIvC,MAf3B,mBAenBkgB,EAfmB,KAeLC,EAfK,OAiBE5d,mBAAS,IAjBX,mBAiBnBpF,EAjBmB,KAiBXyF,EAjBW,OAmBML,oBAAS,GAnBf,mBAmBnBgpB,EAnBmB,KAmBTC,EAnBS,KAuH3B,OAtCAznB,qBAAU,SAAA1E,GACRP,IAAMkF,IAAN,6BAAgC1B,EAAMsW,MAAMC,OAAOlb,KAClDmE,MAAK,SAAAC,GACJuZ,EAAU,CACVpP,MAAOnK,EAAIC,KAAKkK,MAChBoN,MAAOvX,EAAIC,KAAKsX,MAChBC,YAAaxX,EAAIC,KAAKuX,YACtByR,QAASjpB,EAAIC,KAAKyL,kBAMlBwS,EAAgBle,EAAIC,KAAKsV,MACzB6I,EAAgBpe,EAAIC,KAAKsV,SAI1BnV,OAAM,SAAAC,GAAG,OAAIA,OACd,IAGF2B,qBAAU,SAAA1E,GACJiD,EAAMrE,aAAa7C,SACnBkH,EAAM2B,QAAQC,KAAK,sBAEvB,CAAC5B,EAAMrE,aAAa7C,UAGtB2I,qBAAU,SAAA1E,GACLiD,EAAMnF,QACLyF,EAAUN,EAAMnF,QAEjBmF,EAAMnF,OAAO2kB,KACd0J,GAAY,KACd,CAAClpB,EAAMnF,SAIL,6BACI,kBAAC,GAAD,KACA,kBAAC,GAAD,CAAqBsK,KAAM8jB,EAAUniB,QAjDzB,SAACmG,EAAOC,GACX,cAAXA,GAIJgc,GAAY,IA4CqD7rB,QAAQ,QAAQiP,QAASzR,EAAO2kB,MAE3F,kBAAC3L,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC1D,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,oBAAoBsE,UAAWF,EAAQmR,MAChE,kBAAC,KAAD,CAAcjR,UAAWF,EAAQoK,OADnC,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,6BACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAajR,UAAWF,EAAQoK,OANhC,QAWA,kBAACnB,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAEd,kBAACiE,EAAA,EAAD,CAAWE,SAAS,MAElB,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,uBAGI,6BAEF,0BAAMkF,YAAU,EAACC,SAxHxB,SAAAvB,GACjBA,EAAEC,iBADoB,IAGd5I,EAASwH,EAAMxF,KAAfhC,KAGFoe,EAAWD,KAAO+G,GAAc7G,OAAO,cACvCiH,EAAWnH,KAAOiH,GAAc/G,OAAO,YAEvC7B,EAAI,UAAM4B,EAAN,YAAkBkH,GAYtBhC,GAVe,2BACd/C,GADc,IAEjB/D,OACA4B,WACAkH,WACAhH,MAAM,eAAD,OAAiBte,EAAKuM,UAKd,IAAIgX,UACrBD,EAASK,OAAO,SAAUpD,EAAOhC,QACjC+E,EAASK,OAAO,QAASpD,EAAOnP,OAChCkS,EAASK,OAAO,WAAYpD,EAAO3R,UACnC0U,EAASK,OAAO,QAASpD,EAAO/B,OAChC8E,EAASK,OAAO,cAAepD,EAAO9B,aACtC6E,EAASK,OAAO,UAAWpD,EAAO2P,SAClC5M,EAASK,OAAO,OAAQnH,GACxB8G,EAASK,OAAO,WAAYvF,GAC5BkF,EAASK,OAAO,WAAY2B,GAC5BhC,EAASK,OAAO,QAAhB,sBAAwC3jB,EAAKuM,SAO7C/E,EAAMgpB,uBAAuBhpB,EAAMsW,MAAMC,OAAOlb,GAAIygB,IAkFaQ,QAAQ,uBAEjD,kBAAClf,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAII,kBAAC+P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACX,kBAAC1K,EAAA,EAAD,CACArB,MAAOuX,EAAOnP,MACdxG,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAanP,MAAOzI,EAAEI,OAAOC,UACjDnG,GAAG,QACH6H,KAAK,QACLD,MAAM,2BACND,WAAS,EACTmN,cAAY,KAGpB,0BAAMpK,MAAO,CAAEzI,MAAO,QACdzC,EAAO+O,OAEf,6BACC,kBAACwD,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACZ,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aACtC,kBAAC,KAAD,CAAyBgO,MAAOC,MACxB,kBAAC,KAAD,CACEzc,MAAOkc,EACPta,SA1J/B,SAAA4R,GACf2I,EAAgB3I,IA0J8BkJ,gBAAc,EACd7gB,QAAQ,SACRwZ,OAAO,aACPlY,OAAO,SACPtD,GAAG,qBACH4H,MAAM,oBACNkb,oBAAqB,CACnB,aAAc,oBAMjC,0BAAMpY,MAAO,CAAEzI,MAAO,QACfzC,EAAOma,MAGf,6BAEC,kBAAC5H,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACZ,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aACtC,kBAAC,KAAD,CAAyBgO,MAAOC,MAC5B,kBAAC,KAAD,CACCpH,OAAQ,UACPrV,MAAOoc,EACPxa,SAhL3B,SAAAgb,GACfP,EAAgBO,IAgL0Bzf,OAAO,SACPtD,GAAG,cACH4H,MAAM,cACNkb,oBAAqB,CACnB,aAAc,eAEhBE,aAAc,kBAAC,KAAD,WAK3B,6BAED,kBAACjR,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACX,kBAAC1K,EAAA,EAAD,CACIrB,MAAOuX,EAAO/B,MACd5T,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa/B,MAAO7V,EAAEI,OAAOC,UACrDnG,GAAG,QACH6H,KAAK,QACLD,MAAM,8BACND,WAAS,EACTmN,cAAY,KAGnB,0BAAMpK,MAAO,CAAEzI,MAAO,QACfzC,EAAOmc,OAEf,6BAER,kBAAC5J,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,EAAGP,WAAW,YAEnC,kBAAC+O,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAQX,2BACAnK,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAahC,OAAQ5V,EAAEI,OAAOgb,MAAM,GAAInV,SAAUjG,EAAEI,OAAOgb,MAAM,GAAGrZ,KAAKkV,cAAc0Q,MAAM,KAAKC,KAAK,SAC/HhnB,UAAWF,EAAQwJ,MAAOhQ,GAAG,SAAS6H,KAAK,SAASvI,KAAK,SACvD,2BAAO6V,QAAQ,UACb,kBAAC9M,GAAA,EAAD,CAAYpG,MAAM,UAAUsG,aAAW,iBAAiB3B,UAAU,QAChE,kBAAC,KAAD,SAMR,kBAACmL,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACb,kBAAC1K,EAAA,EAAD,CACArB,MAAOuX,EAAO3R,SACd/L,GAAG,uBACH4H,MAAM,uBACNI,WAAW,kCACXL,WAAS,EACPO,WAAY,CACP6V,UAAU,GAEdnJ,gBAAiB,CACZC,QAAQ,OAKvB,0BAAMnK,MAAO,CAAEzI,MAAO,QACPzC,EAAOkc,QAGvB,6BAEA,kBAAC3J,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,EAAGP,WAAW,YAEvC,kBAAC+O,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACT,kBAAC1K,EAAA,EAAD,CACMrB,MAAOuX,EAAO9B,YACd7T,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa9B,YAAa9V,EAAEI,OAAOC,UACvDnG,GAAG,cACH6H,KAAK,cACLD,MAAM,2BACND,WAAS,EACTmN,cAAY,EACZS,WAAS,KAIrB,6BACE,0BAAM7K,MAAO,CAAEzI,MAAO,QACZzC,EAAOoc,aAGnB,kBAAC7J,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACP,kBAAC1K,EAAA,EAAD,CACAlI,KAAK,QACL6G,MAAOuX,EAAO2P,QACdtlB,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa2P,QAASvnB,EAAEI,OAAOC,UACnDnG,GAAG,QACH6H,KAAK,QACLD,MAAM,uDACND,WAAS,EACTmN,cAAY,MAMxB,kBAACrM,EAAA,EAAD,CACInJ,KAAK,SACL0C,QAAQ,WACRC,MAAM,YACNyE,UAAWF,EAAQkC,QAJvB,sBCzV9BsD,GAAa,SAAArH,GACf,OAAO,kBAACsH,GAAA,EAAD,eAAOC,UAAU,MAASvH,KAI/B0R,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAMzD,IAAM3J,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC0M,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEbkZ,SAAU,CACR5F,MAAO,QACPvF,SAAU,IAEZ0G,aAAc,CACdC,UAAW,QAEbrU,MAAO,CACLC,SAAU,SA0SC0qB,OAtSf,SAAiCnpB,GAC7B,IAAM6B,EAAUjE,KADmB,EAIXqC,mBAAS,GAJE,mBAI5BkS,EAJ4B,KAItBe,EAJsB,OAKGjT,mBAAS,IALZ,mBAK5BmS,EAL4B,KAKfe,EALe,OAQPlT,mBAAS,IARF,mBAQ5B9E,EAR4B,KAQpB2jB,EARoB,OAWH7e,mBAAS,IAXN,mBAW5B7F,EAX4B,KAWlBkkB,EAXkB,OAYLre,oBAAS,GAZJ,mBAY5BxH,EAZ4B,KAYnBoI,EAZmB,OAaLZ,oBAAS,GAbJ,mBAa5BkX,EAb4B,KAanBC,EAbmB,OAgBGnX,oBAAS,GAhBZ,mBAgB5BwiB,EAhB4B,KAgBf2G,EAhBe,OAiBfnpB,mBAAS,MAjBM,mBAiB5B5E,EAjB4B,KAiBxB8pB,EAjBwB,OAkBLllB,oBAAS,GAlBJ,mBAkB5BlH,EAlB4B,KAkBnBswB,EAlBmB,KAkC5B1G,EAAyB,SAAA5lB,GAC5BqsB,GAAe,IAqBlB3nB,qBAAU,SAAA1E,GACPP,IAAMkF,IAAN,wDAA2D1B,EAAMsW,MAAMC,OAAOkC,WAA9E,YAA4FzY,EAAMsW,MAAMC,OAAOmC,gBAC9GlZ,MAAK,SAAAC,GACF6e,EAAY7e,EAAIC,MAChBmB,GAAW,MAEdhB,OAAM,SAAAC,GACAA,IACCe,GAAW,GACXuW,GAAW,SAIpB,CAACre,IAGJ,IAAM+I,EAAO1H,EAASqM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAGlE8M,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAI1E,OACS,kBAAC,GAAD,KAEE,kBAAC,GAAD,CAAqBjN,KAAMpM,EAAS+N,QAnC3B,SAACoG,EAAQD,GACR,cAAXC,GAILmc,GAAW,IA8BqDhsB,QAAQ,UAAUiP,QAAQ,0BAElF,kBAACzF,GAAA,EAAD,CACC1B,KAAMsd,EACNtZ,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAAS6b,EACT3b,kBAAgB,2BAChBqC,mBAAiB,kCAEb,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,6BAGJ,kBAACiO,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,yEAKA,kBAACmO,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QAlEX,SAAArF,GACfP,IAAMqrB,OAAN,yCAA+CxsB,IAC9CmE,MAAK,SAAAC,GACJ4pB,GAAW,GACXD,GAAe,MAEhBvpB,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,OA4DsBzC,QAAQ,WAAWC,MAAM,WAAvD,OAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAASugB,EAAwBtlB,QAAQ,WAAWC,MAAM,aAAlE,QAMd,kBAACuW,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC5D,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,wBAAwBsE,UAAWF,EAAQmR,MACpE,kBAAC,KAAD,CAAgBjR,UAAWF,EAAQoK,OADrC,cAKC,kBAACzO,GAAA,EAAD,CACCF,MAAM,cACNG,KAAI,GACJqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OANjC,SAWA,kBAACnB,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAE1B,kBAACqP,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAEzB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACd,kBAAC1K,EAAA,EAAD,CACErB,MAAOrG,EACPiI,SAAU,SAAAjC,GAAC,OAAI2d,EAAU3d,EAAEI,OAAOC,QAClCnG,GAAG,SACH6H,KAAK,SACLD,MAAM,iBACND,WAAS,EACTmN,cAAY,EACZ9S,QAAQ,eAMR,6BACA,6BAEI,yBAAK0E,UAAWF,EAAQ+Q,cAEpB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE5C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,qBACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,mBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,WACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,cACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,gBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,WACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,kBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,aAOA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAIJ,kBAAC,WAAD,KAEE6Z,EAEA,kBAAC3S,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,2EAIJ,kBAAC,WAAD,KAEkB,IAAhBtM,EAAK8R,OAEL,kBAACpP,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,8EAMDgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAEH3G,QAAO,SAAAwJ,GAAG,OAAoE,IAAhEA,EAAIgU,YAAYP,cAAchF,OAAOjY,EAAOid,kBAC1Drd,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIgU,aAEP,kBAAClU,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIiC,YAAYiQ,OAAO,gBACvD,kBAACpS,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIiU,QAC7B,kBAACnU,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIoK,YAC7B,kBAACtK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAImK,IAC7B,kBAACrK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIkU,SAC7B,kBAACpU,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAImU,eAE7B,kBAACrU,GAAA,EAAD,CAAWlH,MAAM,QAGA,YAAfoH,EAAIzJ,OAEJ,kBAAC,WAAD,KACE,kBAAC+jB,GAAA,EAAD,CAASrV,MAAM,iBAAiBsV,UAAU,OACvC,kBAACxb,GAAA,EAAD,CAAYtB,QAAS,SAAArF,GAAC,OAvMxC,SAAA1B,GACvB8pB,EAAM9pB,GACN+tB,GAAe,GAqMoDE,CAAkB3kB,EAAItJ,KAAKuI,aAAW,SAAStG,MAAM,aAC9E,kBAAC,KAAD,SAKJ,kBAAC,WAAD,KACA,0EAmBXoW,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aA9PT,SAACpF,EAAOuH,GAC1BtB,EAAQsB,IA8PmBC,oBA3PF,SAAAxH,GAC3BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IA0PqByB,iBAAkB3C,Y,0CC/XlD3K,GAAa,SAAArH,GACf,OAAO,kBAACsH,GAAA,EAAD,eAAOC,UAAU,MAASvH,KAG/BpC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFI,QAAS,QAEboiB,OAAQ,CACJC,OAAQ1iB,EAAM0iB,OAAOC,OAAS,EAC9BC,WAAY5iB,EAAM6iB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ/iB,EAAM6iB,YAAYE,OAAOC,MACjCC,SAAUjjB,EAAM6iB,YAAYI,SAASC,iBAG7CC,YAAa,CACT9hB,WAlBY,IAmBZZ,MAAM,eAAD,OAnBO,IAmBP,OACLmiB,WAAY5iB,EAAM6iB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ/iB,EAAM6iB,YAAYE,OAAOC,MACjCC,SAAUjjB,EAAM6iB,YAAYI,SAASG,kBAG7CC,WAAY,CACR9U,YAAa,IAEjB+U,KAAM,CACFjjB,QAAS,QAEbsiB,OAAQ,CACJliB,MAhCY,IAiCZwT,WAAY,EACZsP,WAAY,UAEhBC,WAAY,CACR/iB,MArCY,IAsCZmiB,WAAY5iB,EAAM6iB,YAAYC,OAAO,QAAS,CAC1CC,OAAQ/iB,EAAM6iB,YAAYE,OAAOC,MACjCC,SAAUjjB,EAAM6iB,YAAYI,SAASG,kBAG7CK,YAAY,aACRb,WAAY5iB,EAAM6iB,YAAYC,OAAO,QAAS,CAC1CC,OAAQ/iB,EAAM6iB,YAAYE,OAAOC,MACjCC,SAAUjjB,EAAM6iB,YAAYI,SAASC,gBAEzCnO,UAAW,SACXtU,MAAOT,EAAMc,QAAQ,GAAK,GACzBd,EAAM2M,YAAYC,GAAG,MAAQ,CAC1BnM,MAAOT,EAAMc,QAAQ,GAAK,IAGlC4iB,QAAQ,aACJrjB,QAAS,OACTE,WAAY,SACZojB,eAAgB,WAChBjQ,QAAS1T,EAAMc,QAAQ,EAAG,IACvBd,EAAMkN,OAAOwW,SAEpBE,QAAS,CACL1jB,SAAU,EACVwT,QAAS1T,EAAMc,QAAQ,QAuO/B,IAIM2H,GAAqB,CAAEzJ,cAEdyc,eAAWna,aANF,SAAA3E,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,QAKmC+L,GAAzBnH,EAvO1B,SAAwBY,GAAQ,IAAD,IACrB6B,EAAUjE,KACVE,EAAQmU,eAFa,EAKHhS,oBAAS,GALN,mBAKpBkF,EALoB,KAKdmO,EALc,OAMOrT,oBAAS,GANhB,mBAMpB4hB,EANoB,KAMTC,EANS,OASD7hB,mBAAS,GATR,mBASpBiS,EAToB,KASbsH,EATa,OAYavZ,oBAAS,GAZtB,mBAYNyZ,GAZM,WA2BrBzR,EAA2B,SAAAlL,GAC7B+kB,GAAa,IA0BjB,OARArgB,qBAAU,SAAA1E,GAENP,IAAMkF,IAAI,sDACTlC,MAAK,SAAAC,GAAG,OAAI+Z,EAAS/Z,EAAIC,KAAKwS,UAC9BrS,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QAE5B,CAACoS,IAGC,yBAAKnQ,UAAWF,EAAQ9D,MAEpB,kBAAC8I,GAAA,EAAD,CACI1B,KAAM0c,EACN1Y,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAASmB,EACTjB,kBAAgB,2BAChBqC,mBAAiB,kCAEjB,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,eAEL,kBAACiO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,gCAIJ,kBAACmO,GAAA,EAAD,KACI,kBAAC1F,EAAA,EAAD,CAAQ1B,QAAS6F,EAA0B5K,QAAQ,WAAWC,MAAM,WAApE,UAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QA9CF,SAAAjB,GAClBnB,EAAMlD,cA6CsCO,QAAQ,WAAWC,MAAM,aAAzD,YAOR,kBAAC6E,EAAA,EAAD,MACA,kBAACsH,GAAA,EAAD,CACI3K,SAAS,QACTiD,UAAWggB,aAAKlgB,EAAQ0e,OAAT,eACV1e,EAAQof,YAAc9b,KAG3B,kBAACuE,GAAA,EAAD,CAAS3D,MAAO,CAAEoF,gBAAiB,YAC/B,kBAACzH,GAAA,EAAD,CACIpG,MAAM,UACNsG,aAAW,cACXxB,QAhFK,WACrBkR,GAAQ,IAgFQ3P,KAAK,QACL5B,UAAWggB,aAAKlgB,EAAQsf,WAAT,eACVtf,EAAQuf,KAAOjc,KAGpB,kBAAC,KAAD,OAEJ,kBAAC/H,EAAA,EAAD,CAAYC,QAAQ,KAAKwM,QAAM,GAA/B,oBAMR,kBAACM,GAAA,EAAD,CACI9M,QAAQ,YACR0E,UAAWggB,aAAKlgB,EAAQ4e,QAAT,mBACV5e,EAAQyf,WAAanc,GADX,cAEVtD,EAAQ0f,aAAepc,GAFb,IAIftD,QAAS,CACL5D,MAAO8jB,cAAI,mBACNlgB,EAAQyf,WAAanc,GADf,cAENtD,EAAQ0f,aAAepc,GAFjB,KAKfA,KAAMA,GAGN,yBAAKpD,UAAWF,EAAQ2f,SAEpB,kBAACpkB,EAAA,EAAD,+BAEA,kBAACsG,GAAA,EAAD,CAAYtB,QA7GF,WACtBkR,GAAQ,MA6GSxV,EAAMyJ,UAAsB,kBAAC,KAAD,SAIrC,kBAAC1B,GAAA,EAAD,MAEA,kBAACN,GAAA,EAAD,KAEI,kBAAC,GAAD,CACIuV,GAAG,MACHlV,QAAQ,WACRqG,KAAM,kBAAC,KAAD,QAGV,kBAAC,GAAD,CACI6O,GAAG,oBACHlV,QAAQ,kBACRqG,KAAM,kBAAC,KAAD,SAKV,kBAACpG,GAAA,EAAD,MAEJ,kBAACN,GAAA,EAAD,KAEI,kBAAC,GAAD,CACIuV,GAAG,uBACHlV,QAAQ,oBACRqG,KAAM,kBAAC,KAAD,SAKd,kBAACpG,GAAA,EAAD,MAEA,kBAACN,GAAA,EAAD,KAEI,kBAAC,GAAD,CACIN,YAAa,SAAAlI,GAAC,OArIR,SAAAub,GACtB,IAAMqB,EAAO,CAAErB,SAEf9b,IAAM+C,KAAK,2DAA4Doa,GACtEna,MAAK,SAAAC,GACFia,GAAgB,MAEnB7Z,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,MA8HQ8Z,CAAkB,UACpCkB,GAAG,0BACHlV,QAAQ,uBACRqG,KAAM,kBAAC,KAAD,MACNiG,MAAOA,IAOX,kBAAC,GAAD,CACI4I,GAAG,sBACHlV,QAAQ,oBACRqG,KAAM,kBAAC,KAAD,QAGV,kBAACpG,GAAA,EAAD,MAIA,kBAAC,GAAD,CACIiV,GAAG,oBACHlV,QAAQ,iBACRqG,KAAM,kBAAC,KAAD,SAKd,kBAACpG,GAAA,EAAD,MAGA,kBAACN,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUO,MAAO,CAAEzI,MAAO,OAASmI,QAAM,EAACrD,QAlL/B,SAAArF,GACvB+kB,GAAa,KAkLG,kBAACpc,GAAA,EAAD,KACI,kBAAC,KAAD,CAAepI,MAAM,WAEzB,kBAACqI,GAAA,EAAD,kBAMZ,0BAAM5D,UAAWF,EAAQ6f,SACrB,yBAAK3f,UAAWF,EAAQ2f,UACvBxhB,EAAMiiB,eCpTjBrkB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,SA0DtB2qB,OAtDf,SAAoBvpB,GACZ,IAAM6B,EAAUjE,KADE,EAGcqC,mBAAS,IAHvB,mBAGPiV,EAHO,KAGCC,EAHD,KAgClB,OA3BI1T,qBAAU,SAAA1E,GACNP,IAAMkF,IAAI,uBACTlC,MAAK,SAAAC,GAAG,OAAI0V,EAAU1V,EAAIC,SAC1BG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QAC5B,IAwBF,6BACI,kBAAC,GAAD,KACI,kBAACgL,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAEtB,kBAAC,KAAD,CACIqX,QAAS,CAAEC,KAAgBC,MAC3BC,YAAY,eACZC,UAAU,EACVN,OAAQA,EACRO,aAzBG,SAAAC,GAAS,OAC5B,kBAAC,WAAD,KAGA,uBAAGjY,KAAI,uBAAkBiY,EAAUzI,MAAM0I,KAAKC,WAC5C,0BAAM7P,MAAO,CAACzI,MAAO,QAAS6N,gBAAgB,GAAD,OAAIuK,EAAUvK,mBAE1D,2BAAIuK,EAAUG,UAFf,QAGE,8BAAOH,EAAUzI,MAAMrD,WAkBXuY,YAAY,YACZrM,UAjCR,SAAAC,GAEZ/V,EAAM2B,QAAQC,KAAd,oCAAgDmU,EAAIC,iBCnBtD1K,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCKid,G,2KAtBX,OACE,6BACE,kBAAC3c,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAAC,GAAD,CACEA,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAS+H,KAAKpF,MAAM3C,QACpBiP,QAASlH,KAAKpF,MAAMsM,gB,GAhBGS,IAAM/G,WChDnCqB,GAAa,SAAArH,GACf,OAAO,kBAACsH,GAAA,EAAD,eAAOC,UAAU,MAASvH,KAI/B0R,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAQzD,IAAM6a,GAASvkB,aAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CAGFmN,cAAepN,EAAMc,QAAQ,IAEhC+T,MAAO,CACRpU,MAAO,OACP2M,cAAe,QACblN,SAAU,GAEZgV,KAAM,CACN7U,QAAS,QAEN8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAET2B,YAAa,CAEZvR,SAAU,SAEjBmU,aAAc,CACXC,UAAW,QAEbrU,MAAO,CACLC,SAAU,SA2Sd,IAIM8H,GAAqB,CAAEkjB,qBtBraO,SAAA1sB,GACnC,MAAO,CACNpC,K7DwB0C,iCmF2YO+uB,wBtBpZZ,SAAA3sB,GACtC,MAAO,CACNpC,K7DS6C,oCmFyY6BooB,mBtB9Y1C,SAAA1nB,GAAE,OAAI,SAAA2B,GACvCR,IAAMqrB,OAAN,gDAAsDxsB,IACrDmE,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,K7DGuC,iC6DDvCkF,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QsByYqE6pB,wBtBtYzD,SAAA5sB,GACtC,MAAQ,CAAEpC,K7DFoC,qCmFyYhCyE,gBANS,SAAA3E,GAAK,MAAK,CAChCkB,aAAclB,EAAMkB,gBAKkB4K,GAAzBnH,EA7Sf,SAAwBY,GAChB,IAAM6B,EAAUugB,KADM,EAMAniB,mBAAS,GANT,mBAMjBkS,EANiB,KAMXe,EANW,OAOcjT,mBAAS,GAPvB,mBAOjBmS,EAPiB,KAOJe,EAPI,OASJlT,qBATI,mBASjB5E,EATiB,KASb8pB,EATa,OAWIllB,mBAAS,IAXb,mBAWjBiV,EAXiB,KAWTqN,EAXS,OAYMtiB,oBAAS,GAZf,mBAYjBxH,EAZiB,KAYRoI,EAZQ,OAaMZ,oBAAS,GAbf,mBAajBkX,EAbiB,KAaRC,EAbQ,OAgBEnX,oBAAS,GAhBX,mBAgBjBpH,EAhBiB,KAgBVwkB,EAhBU,OAiBKpd,oBAAS,GAjBd,mBAiBjBnH,EAjBiB,KAiBR0pB,EAjBQ,OAkBMviB,oBAAS,GAlBf,mBAkBjBlH,EAlBiB,KAkBRswB,EAlBQ,OAqBeppB,oBAAS,GArBxB,mBAqBjBwiB,EArBiB,KAqBJC,EArBI,KA8EhBC,EAAyB,SAAA5lB,GAC7B2lB,GAAgB,IAGlBjhB,qBAAU,SAAA1E,GAEVP,IAAMkF,IAAI,uBACTlC,MAAK,SAAAC,GACJ8iB,EAAU9iB,EAAIC,MACdmB,GAAW,MAEZhB,OAAM,SAAAC,GACFA,GACDsX,GAAW,QAGb,CAACpX,EAAMrE,aAAa9C,MAAOmH,EAAMrE,aAAa7C,QAASkH,EAAMrE,aAAa5C,UAGhF0I,qBAAU,SAAA1E,GACLiD,EAAMrE,aAAa9C,OAClBwkB,GAAS,GAEbE,YAAW,WAAYvd,EAAMypB,yBAA0B,OAGvD,CAACzpB,EAAMrE,aAAa9C,QAEtB4I,qBAAU,SAAA1E,GACJiD,EAAMrE,aAAa7C,SACnB0pB,GAAU,GAEdjF,YAAW,WAAYvd,EAAM0pB,4BAA6B,OAE1D,CAAC1pB,EAAMrE,aAAa7C,UAEtB2I,qBAAU,SAAA1E,GACJiD,EAAMrE,aAAa5C,SACnBswB,GAAW,GAEf9L,YAAW,WAAYvd,EAAM2pB,4BAA6B,OAE1D,CAAC3pB,EAAMrE,aAAa5C,UAEtB,IAAM+I,EAAOoT,EAAOzO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAIhE8M,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAEvE,OACI,6BACI,kBAAC,GAAD,KAIG,kBAACvL,GAAA,EAAD,CACA1B,KAAMsd,EACNtZ,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAAS6b,EACT3b,kBAAgB,2BAChBqC,mBAAiB,kCAEb,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,uBAGJ,kBAACiO,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,8CAKA,kBAACmO,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QAnFR,SAAArF,GAClBiD,EAAM+iB,mBAAmB1nB,GAEzBqnB,GAAgB,IAgFgCrlB,QAAQ,WAAWC,MAAM,WAAvD,OAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAASugB,EAAwBtlB,QAAQ,WAAWC,MAAM,aAAlE,QAMZ,kBAAC,GAAD,CAAqB6H,KAAMtM,EAAOiO,QAhItB,SAACmG,EAAOC,GACL,cAAXA,IAIJmQ,GAAS,GACTrd,EAAMypB,yBA0HkDpsB,QAAQ,UAAUiP,QAAQ,wBAClF,kBAAC,GAAD,CAAqBnH,KAAMrM,EAASgO,QAvHlB,SAACmG,EAAOC,GACX,cAAXA,IAIJsV,GAAU,GACVxiB,EAAM0pB,4BAiH0DrsB,QAAQ,UAAUiP,QAAQ,sCAC1F,kBAAC,GAAD,CAAqBnH,KAAMpM,EAAS+N,QA/GhB,SAACmG,EAAOC,GACb,cAAXA,IAIJmc,GAAW,GACXrpB,EAAM2pB,4BAyG0DtsB,QAAQ,UAAUiP,QAAQ,sCAGzF,kBAACxI,EAAA,EAAD,CACOrG,KAAK,6BACLsE,UAAWF,EAAQ4D,OACnBpI,QAAQ,WACRC,MAAM,aAJb,aAQG,6BACA,6BAEA,kBAACwN,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAEtB,yBAAKgE,UAAWF,EAAQ+Q,cAEpB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE5C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,oBACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,iBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,iBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,sBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,eACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,YAMA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAIJ,kBAAC,WAAD,KAEE6Z,EAEA,kBAAC3S,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,4EAKDgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAEH/G,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIiF,OAEP,kBAACnF,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIiS,UAAUC,OAAO,gBACrD,kBAACpS,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIqQ,MAAM6B,OAAO,OACjD,kBAACpS,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIqS,OAC7B,kBAACvS,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAImS,OAC7B,kBAACrS,GAAA,EAAD,CAAWlH,MAAM,QAEX,kBAAC0hB,GAAA,EAAD,CAASrV,MAAM,SAASsV,UAAU,OACjC,kBAACxb,GAAA,EAAD,CAAYjG,KAAI,wCAAmCkH,EAAItJ,IAAMuI,aAAW,OAAOtG,MAAM,WACpF,kBAAC,KAAD,QAIJ,kBAAC2hB,GAAA,EAAD,CAASrV,MAAM,SAASsV,UAAU,OAC/B,kBAACxb,GAAA,EAAD,CAAYtB,QAAS,SAAArF,GAAC,OAlL1C,SAAA1B,GACnB8pB,EAAM9pB,GAENqnB,GAAgB,GA+KiDkH,CAAajlB,EAAItJ,KAAKuI,aAAW,OAAOtG,MAAM,aACvE,kBAAC,KAAD,cAafoW,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aA3PH,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IA2PkBC,oBAxPI,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAuPkByB,iBAAkB3C,eC/YlDoQ,GAASvkB,aAAW,SAAAC,GAAK,MAAK,CAChCC,KAAK,yBACDI,QAAS,OACTmT,SAAU,QACNxT,EAAMkN,OAAOC,WAHjB,IAIAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAG/BX,MAAM,aACJC,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG3ByR,UAAW,CACPoB,MAAO,QACPnU,MAAO,OAEX0S,YAAa,CAEXvR,SAAU,SAEZsF,OAAO,CACL7F,UAAWJ,EAAMc,QAAQ,IAE3B+N,MAAO,CACH6E,QAAS1T,EAAMc,UAAY,GAE5BoU,KAAM,CACX7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAERhD,MAAO,CACPlN,QAAS,YA0Sb,IAKMoI,GAAqB,CAAEsjB,gBvBtWE,SAAAnqB,GAAI,OAAI,SAAA1C,GACtCR,IAAM+C,KAAK,+BAAgCG,GAC1CF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,K7DkCoC,yB6DjCpCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,auBgWTN,gBAPS,SAAA3E,GAAK,MAAK,CAChCkB,aAAclB,EAAMkB,aACpBd,OAAQJ,EAAMI,UAKwB0L,GAAzBnH,EA5Sf,SAAsBY,GACd,IAAM6B,EAAUugB,KADI,EAKQniB,mBAAS,CACjC2J,MAAO,GACPoN,MAAO,GACPC,YAAa,GACb9L,gBAAgB,YATA,mBAKb4N,EALa,KAKLC,EALK,OAaQ/Y,mBAAS,CACjC8W,OAAQ,KACR3P,SAAU,KAfM,mBAab2P,EAba,KAaL4R,EAbK,OAkBqB1oB,mBAAS,IAAIvC,MAlBlC,mBAkBZggB,EAlBY,KAkBEC,EAlBF,OAmBqB1d,mBAAS,IAAIvC,MAnBlC,mBAmBZkgB,EAnBY,KAmBEC,EAnBF,OAqBS5d,mBAAS,IArBlB,mBAqBZpF,EArBY,KAqBJyF,EArBI,KAkFpB,OAZAmB,qBAAU,SAAA1E,GACJiD,EAAMrE,aAAa9C,OACnBmH,EAAM2B,QAAQC,KAAK,uBAEvB,CAAC5B,EAAMrE,aAAa9C,QAGtB4I,qBAAU,SAAA1E,GACLiD,EAAMnF,QACLyF,EAAUN,EAAMnF,UACpB,CAACmF,EAAMnF,SAGL,6BACI,kBAAC,GAAD,KAEA,kBAACgZ,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC1D,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,oBAAoBsE,UAAWF,EAAQmR,MAChE,kBAAC,KAAD,CAAcjR,UAAWF,EAAQoK,OADnC,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,6BACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAajR,UAAWF,EAAQoK,OANhC,QAWA,kBAACnB,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAEd,kBAACiE,EAAA,EAAD,CAAWE,SAAS,MAElB,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,uBAGI,6BAEF,0BAAMkF,YAAU,EAACC,SA/ExB,SAAAvB,GACjBA,EAAEC,iBAGF,IAAMwV,EAAWD,KAAO+G,GAAc7G,OAAO,cACvCiH,EAAWnH,KAAOiH,GAAc/G,OAAO,YAEvC7B,EAAI,UAAM4B,EAAN,YAAkBkH,GAWxBmC,GATiB,uCACdlH,GACAhC,GAFc,IAGjB/B,OACA4B,WACAkH,WACAhH,MAAO,cAGF,IAAIiF,UACbkE,EAAG9D,OAAO,SAAUpF,EAAOA,QAC3BkJ,EAAG9D,OAAO,QAASpD,EAAOnP,OAC1BqW,EAAG9D,OAAO,QAASpD,EAAO/B,OAC1BiJ,EAAG9D,OAAO,cAAepD,EAAO9B,aAChCgJ,EAAG9D,OAAO,WAAYpF,EAAO3P,UAC7B6Y,EAAG9D,OAAO,kBAAmBpD,EAAO5N,iBACpC8U,EAAG9D,OAAO,OAAQnH,GAClBiL,EAAG9D,OAAO,WAAYvF,GACtBqJ,EAAG9D,OAAO,WAAY2B,GACtBmC,EAAG9D,OAAO,QAAS,aAInBnc,EAAM6pB,gBAAgB5J,IA+C2C2I,QAAQ,uBAEjD,kBAACxrB,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAII,kBAAC+P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACX,kBAAC1K,EAAA,EAAD,CACArB,MAAOuX,EAAOnP,MACdxG,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAanP,MAAOzI,EAAEI,OAAOC,UACjDnG,GAAG,QACH6H,KAAK,QACLD,MAAM,2BACND,WAAS,EACTmN,cAAY,KAGpB,0BAAMpK,MAAO,CAAEzI,MAAO,QACdzC,EAAO+O,OAEf,6BACC,kBAACwD,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACZ,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aACtC,kBAAC,KAAD,CAAyBgO,MAAOC,MACxB,kBAAC,KAAD,CACEzc,MAAOkc,EACPta,SAlH/B,SAAA4R,GACf2I,EAAgB3I,IAkH8BkJ,gBAAc,EACd7gB,QAAQ,SACRwZ,OAAO,aACPlY,OAAO,SACPtD,GAAG,qBACH4H,MAAM,oBACNkb,oBAAqB,CACnB,aAAc,oBAMjC,0BAAMpY,MAAO,CAAEzI,MAAO,QACfzC,EAAOma,MAGf,6BAEC,kBAAC5H,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACZ,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aACtC,kBAAC,KAAD,CAAyBgO,MAAOC,MAC5B,kBAAC,KAAD,CACCpH,OAAQ,UACPrV,MAAOoc,EACPxa,SAxI3B,SAAAgb,GACfP,EAAgBO,IAwI0Bzf,OAAO,SACPtD,GAAG,cACH4H,MAAM,cACNkb,oBAAqB,CACnB,aAAc,eAEhBE,aAAc,kBAAC,KAAD,WAK3B,6BAED,kBAACjR,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACX,kBAAC1K,EAAA,EAAD,CACIrB,MAAOuX,EAAO/B,MACd5T,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa/B,MAAO7V,EAAEI,OAAOC,UACrDnG,GAAG,QACH6H,KAAK,QACLD,MAAM,8BACND,WAAS,EACTmN,cAAY,KAGnB,0BAAMpK,MAAO,CAAEzI,MAAO,QACfzC,EAAOmc,OAEf,6BAER,kBAAC5J,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,EAAGP,WAAW,YAEnC,kBAAC+O,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAQX,2BACAnK,SAAU,SAAAjC,GAAC,OAAIwnB,EAAU,2BAAI5R,GAAL,IAAaA,OAAQ5V,EAAEI,OAAOgb,MAAM,GAAInV,SAAUjG,EAAEI,OAAOgb,MAAM,GAAGrZ,KAAKkV,cAAc0Q,MAAM,KAAKC,KAAK,SAC/HhnB,UAAWF,EAAQwJ,MAAOhQ,GAAG,SAAS6H,KAAK,SAASvI,KAAK,SACvD,2BAAO6V,QAAQ,UACb,kBAAC9M,GAAA,EAAD,CAAYpG,MAAM,UAAUsG,aAAW,iBAAiB3B,UAAU,QAChE,kBAAC,KAAD,SAMR,kBAACmL,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACb,kBAAC1K,EAAA,EAAD,CACArB,MAAOuV,EAAO3P,SACd/L,GAAG,uBACH4H,MAAM,uBACNI,WAAW,kCACXL,WAAS,EACPO,WAAY,CACP6V,UAAU,GAEdnJ,gBAAiB,CACZC,QAAQ,OAKvB,0BAAMnK,MAAO,CAAEzI,MAAO,QACPzC,EAAOkc,QAGvB,6BAEA,kBAAC3J,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,EAAGP,WAAW,YAEvC,kBAAC+O,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACT,kBAAC1K,EAAA,EAAD,CACMrB,MAAOuX,EAAO9B,YACd7T,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa9B,YAAa9V,EAAEI,OAAOC,UACvDnG,GAAG,cACH6H,KAAK,cACLD,MAAM,2BACND,WAAS,EACTmN,cAAY,EACZS,WAAS,KAIrB,6BACE,0BAAM7K,MAAO,CAAEzI,MAAO,QACZzC,EAAOoc,aAGnB,kBAAC7J,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACP,kBAAC1K,EAAA,EAAD,CACAlI,KAAK,QACL6G,MAAOuX,EAAO5N,gBACd/H,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa5N,gBAAiBhK,EAAEI,OAAOC,UAC3DnG,GAAG,QACH6H,KAAK,QACLD,MAAM,uDACND,WAAS,EACTmN,cAAY,MAMxB,kBAACrM,EAAA,EAAD,CACInJ,KAAK,SACL0C,QAAQ,WACRC,MAAM,YACNyE,UAAWF,EAAQkC,QAJvB,sBC1T9Bqe,GAASvkB,aAAW,SAAAC,GAAK,MAAK,CAChCC,KAAK,yBACDI,QAAS,OACTmT,SAAU,QACNxT,EAAMkN,OAAOC,WAHjB,IAIAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAG/BX,MAAM,aACJC,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG3ByR,UAAW,CACPoB,MAAO,QACPnU,MAAO,OAEX0S,YAAa,CAEXvR,SAAU,SAEZsF,OAAO,CACL7F,UAAWJ,EAAMc,QAAQ,IAE3B+N,MAAO,CACH6E,QAAS1T,EAAMc,UAAY,GAE5BoU,KAAM,CACX7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAERhD,MAAO,CACPlN,QAAS,YA6Ub,IAKMoI,GAAqB,CAAEujB,mBxB5XK,SAACzuB,EAAGqE,GAAJ,OAAa,SAAA1C,GAC9CR,IAAM+C,KAAN,gDAAoDlE,GAAMqE,GACzDF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,K7DkBuC,iC6DhBvCkF,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,awBuXTN,gBAPS,SAAA3E,GAAK,MAAK,CAChCkB,aAAclB,EAAMkB,aACpBd,OAAQJ,EAAMI,UAKwB0L,GAAzBnH,EA/Uf,SAAyBY,GACjB,IAAM6B,EAAUugB,KADO,EAKKniB,mBAAS,CACjC2J,MAAO,GACPoN,MAAO,GACPC,YAAa,GACbyR,QAAQ,KATW,mBAKhB3P,EALgB,KAKRC,EALQ,OAaK/Y,mBAAS,CACjC8W,OAAQ,KACR3P,SAAU,KAfS,mBAahB2P,EAbgB,KAaR4R,EAbQ,OAkBkB1oB,mBAAS,IAAIvC,MAlB/B,mBAkBfggB,EAlBe,KAkBDC,EAlBC,OAmBkB1d,mBAAS,IAAIvC,MAnB/B,mBAmBfkgB,EAnBe,KAmBDC,EAnBC,OAqBM5d,mBAAS,IArBf,mBAqBfpF,EArBe,KAqBPyF,EArBO,OAuBUL,oBAAS,GAvBnB,mBAuBfgpB,EAvBe,KAuBLC,EAvBK,KAoHvB,OAtCAznB,qBAAU,SAAA1E,GACRP,IAAMkF,IAAN,6BAAgC1B,EAAMsW,MAAMC,OAAOlb,KAClDmE,MAAK,SAAAC,GACJuZ,EAAU,CACVpP,MAAOnK,EAAIC,KAAKkK,MAChBoN,MAAOvX,EAAIC,KAAKsX,MAChBC,YAAaxX,EAAIC,KAAKuX,YACtByR,QAASjpB,EAAIC,KAAKyL,kBAMlBwS,EAAgBle,EAAIC,KAAKsV,MACzB6I,EAAgBpe,EAAIC,KAAKsV,SAI1BnV,OAAM,SAAAC,GAAG,OAAIA,OACd,IAGF2B,qBAAU,SAAA1E,GACJiD,EAAMrE,aAAa7C,SACnBkH,EAAM2B,QAAQC,KAAK,uBAEvB,CAAC5B,EAAMrE,aAAa7C,UAGtB2I,qBAAU,SAAA1E,GACLiD,EAAMnF,QACLyF,EAAUN,EAAMnF,QAEjBmF,EAAMnF,OAAO2kB,KACd0J,GAAY,KACd,CAAClpB,EAAMnF,SAIL,6BACI,kBAAC,GAAD,KACA,kBAAC,GAAD,CAAqBsK,KAAM8jB,EAAUniB,QAjDzB,SAACmG,EAAOC,GACX,cAAXA,GAIJgc,GAAY,IA4CqD7rB,QAAQ,QAAQiP,QAASzR,EAAO2kB,MAE3F,kBAAC3L,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC1D,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,oBAAoBsE,UAAWF,EAAQmR,MAChE,kBAAC,KAAD,CAAcjR,UAAWF,EAAQoK,OADnC,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,6BACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAajR,UAAWF,EAAQoK,OANhC,QAWA,kBAACnB,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAEd,kBAACiE,EAAA,EAAD,CAAWE,SAAS,MAElB,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,uBAGI,6BAEF,0BAAMkF,YAAU,EAACC,SAjHxB,SAAAvB,GACjBA,EAAEC,iBAGF,IAAMwV,EAAWD,KAAO+G,GAAc7G,OAAO,cACvCiH,EAAWnH,KAAOiH,GAAc/G,OAAO,YAEvC7B,EAAI,UAAM4B,EAAN,YAAkBkH,GAUrBmC,GARc,2BACdlH,GADc,IAEjB/D,OACA4B,WACAkH,WACAhH,MAAO,cAGC,IAAIiF,UAChBkE,EAAG9D,OAAO,SAAUpF,EAAOA,QAC3BkJ,EAAG9D,OAAO,QAASpD,EAAOnP,OAC1BqW,EAAG9D,OAAO,QAASpD,EAAO/B,OAC1BiJ,EAAG9D,OAAO,cAAepD,EAAO9B,aAChCgJ,EAAG9D,OAAO,WAAYpF,EAAO3P,UAC7B6Y,EAAG9D,OAAO,UAAWpD,EAAO2P,SAC5BzI,EAAG9D,OAAO,OAAQnH,GAClBiL,EAAG9D,OAAO,WAAYvF,GACtBqJ,EAAG9D,OAAO,WAAY2B,GACtBmC,EAAG9D,OAAO,QAAS,aAInBnc,EAAM8pB,mBAAmB9pB,EAAMsW,MAAMC,OAAOlb,GAAI4kB,IAkFiB3D,QAAQ,uBAEjD,kBAAClf,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAII,kBAAC+P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACX,kBAAC1K,EAAA,EAAD,CACArB,MAAOuX,EAAOnP,MACdxG,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAanP,MAAOzI,EAAEI,OAAOC,UACjDnG,GAAG,QACH6H,KAAK,QACLD,MAAM,2BACND,WAAS,EACTmN,cAAY,KAGpB,0BAAMpK,MAAO,CAAEzI,MAAO,QACdzC,EAAO+O,OAEf,6BACC,kBAACwD,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACZ,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aACtC,kBAAC,KAAD,CAAyBgO,MAAOC,MACxB,kBAAC,KAAD,CACEzc,MAAOkc,EACPta,SAnJ/B,SAAA4R,GACf2I,EAAgB3I,IAmJ8BkJ,gBAAc,EACd7gB,QAAQ,SACRwZ,OAAO,aACPlY,OAAO,SACPtD,GAAG,qBACH4H,MAAM,oBACNkb,oBAAqB,CACnB,aAAc,oBAMjC,0BAAMpY,MAAO,CAAEzI,MAAO,QACfzC,EAAOma,MAGf,6BAEC,kBAAC5H,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACZ,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aACtC,kBAAC,KAAD,CAAyBgO,MAAOC,MAC5B,kBAAC,KAAD,CACCpH,OAAQ,UACPrV,MAAOoc,EACPxa,SAzK3B,SAAAgb,GACfP,EAAgBO,IAyK0Bzf,OAAO,SACPtD,GAAG,cACH4H,MAAM,cACNkb,oBAAqB,CACnB,aAAc,eAEhBE,aAAc,kBAAC,KAAD,WAK3B,6BAED,kBAACjR,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACX,kBAAC1K,EAAA,EAAD,CACIrB,MAAOuX,EAAO/B,MACd5T,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa/B,MAAO7V,EAAEI,OAAOC,UACrDnG,GAAG,QACH6H,KAAK,QACLD,MAAM,8BACND,WAAS,EACTmN,cAAY,KAGnB,0BAAMpK,MAAO,CAAEzI,MAAO,QACfzC,EAAOmc,OAEf,6BAER,kBAAC5J,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,EAAGP,WAAW,YAEnC,kBAAC+O,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAQX,2BACAnK,SAAU,SAAAjC,GAAC,OAAIwnB,EAAU,2BAAI5R,GAAL,IAAaA,OAAQ5V,EAAEI,OAAOgb,MAAM,GAAInV,SAAUjG,EAAEI,OAAOgb,MAAM,GAAGrZ,SAC5FnB,UAAWF,EAAQwJ,MAAOhQ,GAAG,SAAS6H,KAAK,SAASvI,KAAK,SACvD,2BAAO6V,QAAQ,UACb,kBAAC9M,GAAA,EAAD,CAAYpG,MAAM,UAAUsG,aAAW,iBAAiB3B,UAAU,QAChE,kBAAC,KAAD,SAMR,kBAACmL,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACb,kBAAC1K,EAAA,EAAD,CACArB,MAAOuV,EAAO3P,SACd/L,GAAG,uBACH4H,MAAM,uBACNI,WAAW,kCACXL,WAAS,EACPO,WAAY,CACP6V,UAAU,GAEdnJ,gBAAiB,CACZC,QAAQ,OAKvB,0BAAMnK,MAAO,CAAEzI,MAAO,QACPzC,EAAOkc,QAGvB,6BAEA,kBAAC3J,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,EAAGP,WAAW,YAEvC,kBAAC+O,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACT,kBAAC1K,EAAA,EAAD,CACMrB,MAAOuX,EAAO9B,YACd7T,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa9B,YAAa9V,EAAEI,OAAOC,UACvDnG,GAAG,cACH6H,KAAK,cACLD,MAAM,2BACND,WAAS,EACTmN,cAAY,EACZS,WAAS,KAIrB,6BACE,0BAAM7K,MAAO,CAAEzI,MAAO,QACZzC,EAAOoc,aAGnB,kBAAC7J,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACP,kBAAC1K,EAAA,EAAD,CACAlI,KAAK,QACL6G,MAAOuX,EAAO2P,QACdtlB,SAAU,SAAAjC,GAAC,OAAI6X,EAAU,2BAAID,GAAL,IAAa2P,QAASvnB,EAAEI,OAAOC,UACnDnG,GAAG,QACH6H,KAAK,QACLD,MAAM,uDACND,WAAS,EACTmN,cAAY,MAMxB,kBAACrM,EAAA,EAAD,CACInJ,KAAK,SACL0C,QAAQ,WACRC,MAAM,YACNyE,UAAWF,EAAQkC,QAJvB,sBCpX9BuH,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCKid,G,2KAtBX,OACE,6BACE,kBAAC3c,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAAC,GAAD,CACEA,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAQ,UACRiP,QAAQ,8B,GAhBeS,IAAM/G,WCzEnCsF,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCKwd,G,2KAtBX,OACE,6BACE,kBAACld,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAAC,GAAD,CACEA,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAQ,UACRiP,QAAQ,gC,GAhBkBS,IAAM/G,WCzEtCsF,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCKyd,G,2KAtBX,OACE,6BACE,kBAACnd,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAAC,GAAD,CACEA,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAQ,UACRiP,QAAQ,gC,GAhBgBS,IAAM/G,WCjDpC0L,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAqXzD,IAIMid,GAAqB,CAAED,cAAY0F,cvB/aZ,SAAA5uB,GAAE,OAAI,SAAA2B,GAClCR,IAAMqrB,OAAN,0CAAgDxsB,IAC/CmE,MAAM,SAAAC,GAAG,OAAIzC,EAAS,CACtBrC,KlEjC4B,iBkEkC5BC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,SuB2aZV,gBANS,SAAA3E,GAAK,MAAK,CAC9Ba,QAASb,EAAMa,WAKqBkpB,GAAzBplB,CAA6C6G,cA7W7C,SAAAnI,GAAK,MAAK,CACrBC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEhC+T,MAAO,CACRpU,MAAO,OACP2M,cAAe,QACblN,SAAU,GAEZ+U,aAAc,CACdlI,WAAW,IAEZmF,YAAa,CAERvR,SAAU,SAEjBmU,aAAc,CACXC,UAAW,QAEbrU,MAAO,CACLC,SAAU,QAuV8CwH,EAnV5D,SAAsBjG,GAClB,IAAM6B,EAAU7B,EADQ,EAKFC,mBAAS,GALP,mBAKnBkS,EALmB,KAKbe,EALa,OAMYjT,mBAAS,GANrB,mBAMnBmS,EANmB,KAMNe,EANM,OASMlT,mBAAS,IATf,mBASnBkP,EATmB,KASTN,EATS,OAUoB5O,oBAAS,GAV7B,mBAUnBoP,EAVmB,KAUFkE,EAVE,OAaYtT,mBAAS,IAbrB,mBAarBuX,EAbqB,KAaPC,EAbO,OAcQxX,mBAAS,IAdjB,mBAcrBwkB,EAdqB,KAcTC,EAdS,OAiBEzkB,oBAAS,GAjBX,mBAiBrBxH,EAjBqB,KAiBZoI,EAjBY,OAoBJZ,oBAAS,GApBL,mBAoBrBkF,EApBqB,KAoBfmO,EApBe,OAqBQrT,oBAAS,GArBjB,mBAqBrBiqB,EArBqB,KAqBTC,EArBS,OAsBQlqB,oBAAS,GAtBjB,mBAsBrBmqB,EAtBqB,KAsBTC,EAtBS,KA6E5B5oB,qBAAW,SAAA1E,GAEP,IAAM1B,EAAKmY,aAAa,SAAAzW,IACpB,yCAAC,WAAMA,GAAN,gBAAA2J,EAAA,sEACqBlK,IAAMkF,IAAI,iBAD/B,OACSjC,EADT,OAEGoP,EAAYpP,EAAIC,MAChB6T,GAAmB,GAHtB,2CAAD,0DAKD,KAEH,OAAO,SAAAxW,GACH0W,cAAcpY,MAGpB,IAGFoG,qBAAW,SAAA1E,GAEP,IAAM1B,EAAKmY,aAAa,SAAAzW,GAEpBiD,EAAMukB,aACN1jB,GAAW,KAEZ,KAEH,OAAO,SAAA9D,GACH0W,cAAcpY,MAGpB,IAEFoG,qBAAW,SAAA1E,GACJiD,EAAM1E,QAAQzC,OACbya,GAAQ,KACd,CAACtT,EAAM1E,QAAQzC,QAEjB4I,qBAAW,SAAA1E,GACNiD,EAAM1E,QAAQxC,SACbuxB,GAAc,KAClB,CAACrqB,EAAM1E,QAAQxC,UAIf,IAAMgJ,EAAO9B,EAAM1E,QAAQtC,QAAQyN,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KACnFzL,QAAO,SAAAwJ,GAAG,OAAIA,EAAII,SAAWyS,KAG1B9D,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAErE,OACI,6BACI,kBAAC,GAAD,KAEA,kBAAC,GAAD,CAAsBjN,KAAMA,EAAM2B,QAvF7B,SAACmG,EAAOC,GACV,cAAXA,GAIJoG,GAAQ,MAmFI,kBAAC,GAAD,CAAyBnO,KAAMilB,EAAYtjB,QAzE/B,SAACmG,EAAOC,GAClB,cAAXA,GAGHmd,GAAc,MAsEF,kBAAC,GAAD,CAAuBllB,KAAM+kB,EAAYpjB,QAjF7B,SAACmG,EAAOC,GAClB,cAAXA,GAGHid,GAAc,MA+EE,kBAACrmB,EAAA,EAAD,CACIrG,KAAK,iCACLsE,UAAWF,EAAQkR,aACnB1V,QAAQ,WACRC,MAAM,aAJV,cANJ,OAeI,kBAACwG,EAAA,EAAD,CACIrG,KAAK,mCACLsE,UAAWF,EAAQkR,aACnB1V,QAAQ,WACRC,MAAM,WAJV,gBASA,6BACA,6BAGA,kBAACwN,GAAA,EAAD,CAAO/I,UAAWF,EAAQ8Q,OAE1B,kBAACvF,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACrB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GAClB,kBAAC8C,GAAA,EAAD,CAAatN,WAAS,GACjB,kBAACH,EAAA,EAAD,CACIxH,GAAG,kCACH0Y,QAAM,EACN9Q,MAAM,mBACNzB,MAAOgW,EACPpU,SAnIT,SAAAjC,GACzBsW,EAAgBtW,EAAEI,OAAOC,QAmISwS,YAAa,CACXC,QAAQ,IAGN5E,EAEA,iCAGA,kBAAC,WAAD,KACI,iCACCF,EAASpU,KAAI,SAACgK,EAAO1J,GACpB,OACA,4BAAQuJ,IAAKvJ,EAAImG,MAAOuD,EAAO4L,YAAa5L,EAAO4L,mBAS3E,kBAACvD,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACnB,kBAAC3K,EAAA,EAAD,CACIxH,GAAG,aACH6H,KAAK,aACLD,MAAM,uBACND,WAAS,EACTjB,UAAU,sBACVP,MAAOijB,EACPtU,aAAa,aACb/M,SA/JP,SAAAjC,GACrBujB,EAAcvjB,EAAEI,OAAOC,aAqKP,6BAGA,kBAACsJ,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MACtB,yBAAKgE,UAAWF,EAAQ+Q,cAEpB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE5C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,eACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,cACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,qBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,sBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,oBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,iBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,kBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,4BACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,aAKA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAKJ,kBAAC,WAAD,KAEoB,KAAjBka,GAAuC,IAAhB1V,EAAK8R,OAC5B,kBAACnP,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACtD,kBAAC,KAAD,MAAmB,6BADnB,iDAKAgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAGH3G,QAAO,SAAAwJ,GAAG,OAAuE,IAAnEA,EAAIoK,WAAWqJ,cAAchF,OAAOqR,EAAWrM,kBAC7Drd,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAII,QAEP,kBAACN,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIoK,YAC7B,kBAACtK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsU,SAC7B,kBAACxU,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIggB,aAC7B,kBAAClgB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIigB,gBAC7B,kBAACngB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIkgB,iBAC7B,kBAACpgB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAImgB,kBAC7B,kBAACrgB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsS,aAC7B,kBAACxS,GAAA,EAAD,CAAWlH,MAAM,QAEjB,kBAAC0hB,GAAA,EAAD,CAASrV,MAAM,SAASsV,UAAU,OAC/B,kBAACxb,GAAA,EAAD,CAAYjG,KAAM,qCAAuCkH,EAAItJ,GAAIuI,aAAW,OAAOtG,MAAM,WACxF,kBAAC,KAAD,QAKJ,kBAAC2hB,GAAA,EAAD,CAASrV,MAAM,SAASsV,UAAU,OAC/B,kBAACxb,GAAA,EAAD,CAAYE,aAAW,SAAStG,MAAM,YAAY8E,QAAU,SAAArF,GAAC,OAlN/E1B,EAkNsGsJ,EAAItJ,QAjNhIsU,OAAO8T,QAAQ,8CACdzjB,EAAMiqB,cAAc5uB,GACpB8uB,GAAc,KAHO,IAAA9uB,IAmNmB,kBAAC,KAAD,cAYXqY,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aA3RX,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IA2R0BC,oBAxRJ,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAuR0ByB,iBAAkB3C,gBC/ZlD3K,GAAa,SAAArH,GACf,OAAO,kBAACsH,GAAA,EAAD,eAAOC,UAAU,MAASvH,KAI/B0R,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAMzD,IAAM3J,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CAEF8M,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,IAEhC+T,MAAO,CACRpU,MAAO,OACP2M,cAAe,QACblN,SAAU,GAEZgV,KAAM,CACN7U,QAAS,QAEN8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAEZ0E,aAAc,CACdlI,WAAW,IAERmF,YAAa,CAEZvR,SAAU,SAEjBmU,aAAc,CACXC,UAAW,QAEbrU,MAAO,CACLC,SAAU,SAwYd,IAKM8H,GAAqB,CAAE+jB,iBvD/ZG,SAACjvB,EAAIqE,EAAMulB,GAAX,OAAqB,SAAAjoB,GACpDR,IAAM+C,KAAN,6DAAiElE,GAAMqE,GACtEF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnCpFmD,wCmCqFnDC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,UAIvBlD,IAAM+C,KAAK,4DAA6D0lB,GACvEzlB,MAAK,SAAAC,GAAG,OAAIA,KACZI,OAAM,SAAAC,GAAG,OAAIA,OuDiZgCyqB,iBvD9Yf,SAAClvB,EAAIqE,EAAMulB,GAAX,OAAqB,SAAAjoB,GACpDR,IAAM+C,KAAN,6DAAiElE,GAAMqE,GACtEF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnCpGmD,wCmCqGnDC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,UAGvBlD,IAAM+C,KAAK,4DAA6D0lB,GACvEzlB,MAAK,SAAAC,GAAG,OAAIA,KACZI,OAAM,SAAAC,GAAG,OAAIA,QuDmYAV,gBAPS,SAAA3E,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,KACZkB,kBAAmBjB,EAAMiB,qBAKW6K,GAAzBnH,EA3Yf,SAAkCY,GAC1B,IAAM6B,EAAUjE,KADgB,EAMEqC,mBAAS,IANX,mBAM3Bmd,EAN2B,KAMfpC,EANe,OAOA/a,mBAAS,GAPT,mBAO3BuqB,EAP2B,KAOhBC,EAPgB,OAQJxqB,oBAAS,GARL,mBAQ3BxH,EAR2B,KAQlBoI,EARkB,OASRZ,oBAAS,GATD,mBAS3B6C,EAT2B,KASpBhC,EAToB,OAYVb,mBAAS,GAZC,mBAY3BkS,EAZ2B,KAYrBe,EAZqB,OAaIjT,mBAAS,GAbb,mBAa3BmS,EAb2B,KAade,EAbc,OAedlT,qBAfc,mBAe3B5E,EAf2B,KAevB8pB,EAfuB,OAgBFllB,mBAAS,IAhBP,mBAgB3BC,EAhB2B,KAgBjBklB,EAhBiB,OAiBJnlB,mBAAS,IAjBL,mBAiB3BgZ,EAjB2B,KAiBlBuC,EAjBkB,OAmBMvb,mBAAS,IAnBf,mBAmB3BkZ,EAnB2B,KAmBbkM,EAnBa,OAsBNplB,mBAAS,IAtBH,mBAsB3BiN,EAtB2B,KAsBnBoY,EAtBmB,QAyBdrlB,mBAAS,iBAAtBrG,GAzB2B,wBA0BdqG,mBAAS,iBAAtBpG,GA1B2B,wBA4BQoG,oBAAS,GA5BjB,qBA4B5BslB,GA5B4B,MA4BbC,GA5Ba,SA6BSvlB,oBAAS,GA7BlB,qBA6B3BwlB,GA7B2B,MA6BZC,GA7BY,SA+BMzlB,oBAAS,GA/Bf,qBA+B3B0lB,GA/B2B,MA+BbC,GA/Ba,SAgCM3lB,oBAAS,GAhCf,qBAgC3B4lB,GAhC2B,MAgCbC,GAhCa,MA8C5BC,GAA2B,SAAAhpB,GAC7ByoB,IAAkB,IAGhBQ,GAA2B,SAAAjpB,GAC7B2oB,IAAkB,IA0ChBgF,GAAgB,SAAA3tB,GACpB,IAAMkpB,EAAe,CACnB/qB,OAAQtB,IAGJssB,EAAY,CAChBhmB,WACA+Y,UACAE,gBAEFnZ,EAAMsqB,iBAAiBjvB,EAAG4qB,EAAcC,GACxCV,IAAkB,IAKdmF,GAAgB,SAAA5tB,GACpB,IAAMopB,EAAe,CACnBjrB,OAAQrB,IAGJqsB,EAAY,CAChBhmB,WACA+Y,UACAE,eACAjM,UAGFlN,EAAMuqB,iBAAiBlvB,EAAI8qB,EAAcD,GACzCR,IAAkB,IAMtBjkB,qBAAU,SAAA1E,GACFP,IAAMkF,IAAI,oDACTlC,MAAK,SAAAC,GACFub,EAAcvb,EAAIC,KAAKoC,MACvB2oB,EAAahrB,EAAIC,KAAKwS,OACtBrR,GAAW,MAEdhB,OAAM,SAAAC,GACAA,GACHgB,GAAS,QAGnB,CAAC0pB,EAAWE,GAAeC,KAG7BlpB,qBAAU,SAAA1E,GACFiD,EAAMtE,kBAAkBhC,iBACvBksB,IAAgB,KAEvB,CAAC5lB,EAAMtE,kBAAkBhC,kBAG3B+H,qBAAU,SAAA1E,GACFiD,EAAMtE,kBAAkB/B,iBACxBmsB,IAAgB,KAEtB,CAAC9lB,EAAMtE,kBAAkB/B,kBAG3B,IAAMmI,GAAOsb,EAAW3W,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KACzDzL,QAAO,SAAAwJ,GAAG,MAAmB,cAAfA,EAAIzJ,UAG7BwY,GAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,GAAK8R,OAASzB,EAAOC,GAEvE,OACI,6BACI,kBAAC,GAAD,KAGA,kBAAC,GAAD,CAAqBjN,KAAMwgB,GAAc7e,QAlHvB,SAACmG,EAAOC,GACX,cAAXA,GAIJ0Y,IAAgB,IA6GuDvoB,QAAQ,UAAUiP,QAAQ,8BAGjG,kBAAC,GAAD,CAAqBnH,KAAM0gB,GAAc/e,QA7GvB,SAACmG,EAAOC,GACX,cAAXA,GAIJ4Y,IAAgB,IAwGuDzoB,QAAQ,OAAOiP,QAAQ,8BAO3F,kBAACzF,GAAA,EAAD,CACA1B,KAAMogB,GACNpc,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAASif,GACT/e,kBAAgB,2BAChBqC,mBAAiB,kCAEb,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,6BAGJ,kBAACiO,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,qDAKA,kBAACmO,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QAASsoB,GAAertB,QAAQ,WAAWC,MAAM,WAAzD,OAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAAS2jB,GAA0B1oB,QAAQ,WAAWC,MAAM,aAApE,QAQR,kBAACuJ,GAAA,EAAD,CACG1B,KAAMsgB,GACNtc,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAASkf,GACThf,kBAAgB,2BAChBqC,mBAAiB,kCAEb,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,4BAGJ,kBAACiO,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,kEAII,kBAACwH,EAAA,EAAD,CACEO,SA5IT,SAAAjC,GACnBmkB,EAAUnkB,EAAEI,OAAOC,QA4IS2B,WAAS,EACTxE,OAAO,QACPtD,GAAG,SACH4H,MAAM,SACNtI,KAAK,OACLqI,WAAS,KAIf,kBAACwG,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QAASuoB,GAAettB,QAAQ,WAAWC,MAAM,WAAzD,QAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAAS4jB,GAA0B3oB,QAAQ,WAAWC,MAAM,aAApE,YAOX,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAApB,yBAID,4FAIC,kBAACyN,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MACvB,yBAAKgE,UAAWF,EAAQ+Q,cAEvB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAEzC,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,0BACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,uBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,kBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,eACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,QACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,YAMA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAIJ,kBAAC,WAAD,KAEoB,IAAhBwE,GAAK8R,OAET,kBAACnP,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACnD,6BADH,kCAKI,kBAAC,WAAD,KAEItL,EAEA,kBAAC2B,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACnD,6BADH,8EAMLgE,EAAc,EACXtQ,GAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,IAEH/G,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIsU,SAEP,kBAACxU,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAII,QAC7B,kBAACN,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsW,gBAC7B,kBAACxW,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIsS,aAC7B,kBAACxS,GAAA,EAAD,CAAWlH,MAAM,QACf,uBAAGE,KAAMkH,EAAIwC,KAAM5F,OAAO,UACxB,kBAAC,KAAD,OAEDoD,EAAIyC,UAEP,kBAAC3C,GAAA,EAAD,CAAWlH,MAAM,QACb,kBAACuG,EAAA,EAAD,CAAQzG,QAAQ,YAChBC,MAAM,UACN8E,QAAS,SAAArF,GAAC,OAhQ5B,SAAC1B,EAAI6E,EAAU+Y,EAASX,GAC1C6M,EAAM9pB,GACN+pB,EAAYllB,GACZsb,EAAWvC,GACXoM,EAAgB/M,GAEhBkN,IAAkB,GA0PgCY,CAAezhB,EAAItJ,GAAIsJ,EAAIzE,SAAUyE,EAAIsU,QAAStU,EAAIsW,kBAFpE,UAMA,6BAPJ,IASI,kBAACnX,EAAA,EAAD,CACA1B,QAAS,SAAArF,GAAC,OA9P1B,SAAC1B,EAAI6E,EAAU+Y,EAASX,GAC5C6M,EAAM9pB,GACN+pB,EAAYllB,GACZsb,EAAWvC,GACXoM,EAAgB/M,GAEhBoN,IAAkB,GAwPgCW,CAAe1hB,EAAItJ,GAAIsJ,EAAIzE,SAAUyE,EAAIsU,QAAStU,EAAIsW,iBACpE5d,QAAQ,YACRC,MAAM,aAHN,kBAkBXoW,GAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,KAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,GAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aA7UH,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IA6UkBC,oBA1UI,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAyUkByB,iBAAkB3C,e,qBCtflDpU,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAG/B+O,KAAM,CACJU,OAAQ,OACRlQ,QAAS,OACTC,cAAe,UAEjByP,UAAW,CACThD,WAAY,UAEdoD,YAAa,CACXjQ,SAAU,GAEZgV,KAAM,CACJ4H,eAAgB,YA6FTgQ,OAzFf,SAAyB5qB,GAEjB,IAAM6B,EAAUjE,KAEhB,OACI,6BACI,kBAAC,GAAD,KAEQ,yBAAKmE,UAAWF,EAAQ9D,MAEpB,kBAACqP,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAErB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACoS,GAAI,EAAGD,GAAI,IAClB,kBAACG,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MAErB,kBAACC,GAAA,EAAD,CACE7L,UAAWF,EAAQgM,UACnBC,MAAOlV,KACPgR,MAAM,2BAGR,kBAACoE,GAAA,EAAD,CAAajM,UAAWF,EAAQoM,aAE5B,kBAAC7Q,EAAA,EAAD,CAAY8Q,cAAY,EAAC7Q,QAAQ,KAAK4E,UAAU,MAAhD,qCAIA,kBAAC7E,EAAA,EAAD,CAAY6E,UAAU,KAAtB,0GAOJ,kBAACkM,GAAA,EAAD,KACI,kBAAC,IAAD,CAAM2M,GAAG,0CAA0C/Y,UAAWF,EAAQmR,MAClE,kBAAClP,EAAA,EAAD,CAAQI,KAAK,QAAQ7G,QAAQ,WAAWC,MAAM,aAA9C,oBAShB,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACoS,GAAI,EAAGD,GAAI,IAClB,kBAACG,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MAErB,kBAACC,GAAA,EAAD,CACE7L,UAAWF,EAAQgM,UACnBC,MAAOhS,KACP8N,MAAM,2BAGR,kBAACoE,GAAA,EAAD,CAAajM,UAAWF,EAAQoM,aAE5B,kBAAC7Q,EAAA,EAAD,CAAY8Q,cAAY,EAAC7Q,QAAQ,KAAK4E,UAAU,MAAhD,gBAIA,kBAAC7E,EAAA,EAAD,CAAY6E,UAAU,KAAtB,wFAOJ,kBAACkM,GAAA,EAAD,KACC,kBAAC,IAAD,CAAM2M,GAAG,iCAAiC/Y,UAAWF,EAAQmR,MACtD,kBAAClP,EAAA,EAAD,CAAQI,KAAK,QAAQ7G,QAAQ,WAAWC,MAAM,aAA9C,wBCnDnCutB,GAA2B,SAAA9tB,GACvC,MAAO,CAAEpC,K5F9B4B,2B6FEhC+W,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QA+QzD,IAIMhB,GAAqB,CAAEukB,kBD5WI,SAAA/tB,GAAC,OAAI,SAAAC,GACrCA,EAAS6tB,IACTruB,IAAMkF,IAAI,oCACTlC,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,K5FciC,sB4FbjCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,SCuWZV,gBANS,SAAA3E,GAAK,MAAK,CAC9BgB,cAAehB,EAAMgB,iBAKe8K,GAAzBnH,CAA6C6G,cA/Q7C,SAAAnI,GAAK,MAAK,CACrBC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEhC+T,MAAO,CACRpU,MAAO,OACP2M,cAAe,QACblN,SAAU,GAEZgV,KAAM,CACN7U,QAAS,QAEN8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAEZ0E,aAAc,CACdlI,WAAW,IAERmF,YAAa,CAEZvR,SAAU,SAEjBmU,aAAc,CACXC,UAAW,QAEbrU,MAAO,CACLC,SAAU,QAiP8CwH,EA7O5D,SAAuBjG,GACf,IAAM6B,EAAU7B,EADK,EAMCC,mBAAS,GANV,mBAMhBkS,EANgB,KAMVe,EANU,OAOejT,mBAAS,GAPxB,mBAOhBmS,EAPgB,KAOHe,EAPG,OAUalT,mBAAS,IAVtB,mBAUhB8qB,EAVgB,KAUJC,EAVI,OAYO/qB,oBAAS,GAZhB,mBAYhBxH,EAZgB,KAYPoI,EAZO,OAeWZ,oBAAS,GAfpB,mBAehBgrB,EAfgB,KAeLC,EAfK,OAiBejrB,oBAAS,GAjBxB,mBAiBhBkrB,EAjBgB,KAiBHC,EAjBG,KA0DrB3pB,qBAAW,SAAA1E,GAET,IAAM1B,EAAKmY,aAAa,SAAAzW,GACpBiD,EAAM8qB,oBACNjqB,GAAW,KACb,KAEA,OAAO,SAAA9D,GACL0W,cAAcpY,MAGlB,IAGFoG,qBAAW,SAAA1E,GACNiD,EAAMvE,cAAc5C,OACnBqyB,GAAa,KAEhB,CAAClrB,EAAMvE,cAAc5C,QAGxB4I,qBAAW,SAAA1E,GACNiD,EAAMvE,cAActC,UACnBiyB,GAAe,KAElB,CAACprB,EAAMvE,cAActC,WAI9B,IAAM2I,EAAO9B,EAAMvE,cAAczC,QAAQyN,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAGrF8M,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAErE,OACI,6BACI,kBAAC,GAAD,KAEA,kBAAC,GAAD,CAAqBjN,KAAM8lB,EAAWnkB,QA3D1B,SAACmG,EAAOC,GACL,cAAXA,GAIJge,GAAa,IAsD+C7tB,QAAQ,UAAUiP,QAAQ,kBACtF,kBAAC,GAAD,CAAqBnH,KAAMgmB,EAAarkB,QAnD3B,SAACmG,EAAOC,GACN,cAAXA,GAIJke,GAAe,IA8CgD/tB,QAAQ,UAAUiP,QAAQ,oBAIxF,kBAACxI,EAAA,EAAD,CACOrG,KAAK,qCACLsE,UAAWF,EAAQkR,aACnB1V,QAAQ,WACRC,MAAM,aAJb,mBAUD,yBAAMyI,MAAO,CAACmF,cAAe,GAAIL,WAAY,KACzC,kBAACC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MACrB,kBAACuS,GAAA,EAAD,CAAatN,WAAS,GACb,kBAACH,EAAA,EAAD,CACIxH,GAAG,OACH6H,KAAK,OACLD,MAAM,iBACNzB,MAAOupB,EACP3nB,SAvFL,SAAAjC,GACrB6pB,EAAc7pB,EAAEI,OAAOC,aA6Ff,kBAACsJ,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MACtB,yBAAKgE,UAAWF,EAAQ+Q,cAExB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAExC,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,wBACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,gBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,WACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,UACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,cACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,eACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,cACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,WACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,iBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,YAMA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,gDAKD8U,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAEH3G,QAAO,SAAAwJ,GAAG,OAAiE,IAA7DA,EAAIzB,KAAKkV,cAAchF,OAAO2X,EAAW3S,kBACvDrd,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIzB,MAEP,kBAACuB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAI0mB,MAC7B,kBAAC5mB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAItC,KAC7B,kBAACoC,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAII,QAC7B,kBAACN,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIoK,YAC7B,kBAACtK,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAI2mB,UAC7B,kBAAC7mB,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIuN,MAAQ,EAAZ,UAAmBvN,EAAIuN,MAAvB,oBAA0CvN,EAAIuN,MAA9C,UACzB,kBAACzN,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAI4mB,WAC7B,kBAAC9mB,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIiC,YAAYiQ,OAAO,eACvD,kBAACpS,GAAA,EAAD,CAAWlH,MAAM,QAEb,kBAAC0hB,GAAA,EAAD,CAASrV,MAAM,SAASsV,UAAU,OAC/B,kBAACxb,GAAA,EAAD,CAAYjG,KAAI,gDAA2CkH,EAAItJ,IAAMuI,aAAW,OAAOtG,MAAM,WAC5F,kBAAC,KAAD,aAUfoW,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aA7LH,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IA6LkBC,oBA1LI,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAyLkByB,iBAAkB3C,gBCoDxD,IAKMzL,GAAqB,CAAEilB,W5BpYH,SAAAC,GAAO,OAAI,SAAAzuB,GACpCR,IAAM+C,KAAK,+BAAgCksB,GAC1CjsB,MAAK,SAAAC,GAAG,OACRzC,EAAS,CACRrC,KlETwB,ckEUxBC,QAAS6E,EAAIC,UAEdG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CAChBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,a4B6Xf6Z,eAAWna,aAPF,SAAA3E,GAAK,MAAK,CACjCa,QAASb,EAAMa,QACfT,OAAQJ,EAAMI,UAKoC0L,GAAzBnH,CAA6C6G,cAjYxD,SAAAnI,GAAK,MAAK,CACrBC,KAAK,yBACDI,QAAS,OACTmT,SAAU,QACNxT,EAAMkN,OAAOC,WAHjB,IAIAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjCwR,OAAO,aACH7R,MAAO,OACPY,WAAYrB,EAAMc,QAAQ,GAC1ByN,YAAavO,EAAMc,QAAQ,IAC1Bd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDL,MAAO,IACPY,WAAY,OACZkN,YAAa,SAGjBpO,MAAM,aACJC,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG3ByR,UAAW,CACPoB,MAAO,QACPnU,MAAO,OAEX0S,YAAa,CAEXvR,SAAU,SAEZsF,OAAO,CACL7F,UAAWJ,EAAMc,QAAQ,IAE3B+N,MAAO,CACH6E,QAAS1T,EAAMc,UAAY,GAE5BoU,KAAM,CACX7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,OAiV2DpI,EA7UvE,SAAoBjG,GAEnB,IAAM6B,EAAU7B,EAFS,EAOOC,mBAAS,IAPhB,mBAOlBkP,EAPkB,KAORN,EAPQ,OAQqB5O,oBAAS,GAR9B,mBAQlBoP,EARkB,KAQDkE,EARC,OAWGtT,mBAAS,IAXZ,mBAWlB8E,EAXkB,KAWVsjB,EAXU,OAYKpoB,mBAAS,IAZd,mBAYlB8O,EAZkB,KAYN2c,EAZM,OAaKzrB,mBAAS,IAbd,mBAalBgZ,EAbkB,KAaTuC,EAbS,OAcavb,mBAAS,IAdtB,mBAclB0kB,EAdkB,KAcLgH,EAdK,OAemB1rB,mBAAS,IAf5B,mBAelB2kB,EAfkB,KAeFgH,EAfE,OAgBqB3rB,mBAAS,IAhB9B,mBAgBlB4kB,EAhBkB,KAgBDgH,EAhBC,OAiBuB5rB,mBAAS,IAjBhC,mBAiBlB6kB,EAjBkB,KAiBAgH,EAjBA,OAkBa7rB,mBAAS,IAlBtB,mBAkBlBgX,EAlBkB,KAkBL8U,EAlBK,OAqBG9rB,mBAAS,IArBZ,mBAqBlBpF,EArBkB,KAqBVyF,EArBU,KA0GzB,OA5BAmB,qBAAW,SAAA1E,GACV,IAAM1B,EAAKmY,aAAa,SAAAzW,IACvB,yCAAC,WAAMA,GAAN,gBAAA2J,EAAA,sEACkBlK,IAAMkF,IAAI,iBAD5B,OACMjC,EADN,OAECoP,EAAYpP,EAAIC,MACb6T,GAAmB,GAHvB,2CAAD,0DAKE,KAEH,OAAO,SAAAxW,GACN0W,cAAcpY,MAEd,IAGFoG,qBAAW,SAAA1E,GACPiD,EAAMnF,QACRyF,EAAUN,EAAMnF,UAEhB,CAACmF,EAAMnF,SAGT4G,qBAAW,SAAA1E,GACPiD,EAAM1E,QAAQzC,OAChBmH,EAAM2B,QAAQC,KAAK,0BAEnB,CAAC5B,EAAM1E,QAAQzC,QAGf,kBAAC,GAAD,KAEC,kBAACgb,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SACxD,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,uBAAuBsE,UAAWF,EAAQmR,MACnE,kBAAC,KAAD,CAAcjR,UAAWF,EAAQoK,OADnC,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,iCACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAajR,UAAWF,EAAQoK,OANhC,QAWH,yBAAKlK,UAAWF,EAAQ9D,MAEvB,0BAAMgE,UAAWF,EAAQuO,QAEZ,kBAACtF,GAAA,EAAD,CACA/I,UAAWF,EAAQ5D,MACnB8H,MAAO,CAAE8E,WAAY,OAAQK,cAAc,SAEzC,kBAAC9N,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,kCAGC,6BAEA,kBAACyE,EAAA,EAAD,CAAWE,SAAS,MAEnB,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAKA,0BAAMoF,YAAU,EAACC,SAzFpB,SAAAvB,GACpBA,EAAEC,iBAEF,IAAM4qB,EAAe,CACpBjnB,SACAgK,aACAkK,UACA0L,cACAC,iBACAC,kBACAC,mBACA7N,eAIDjX,EAAMwrB,WAAWQ,KA2EO,kBAAC5e,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAExB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACtB,kBAAC8C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEzC,kBAACO,GAAA,EAAD,CAAYC,QAAQ,iBAApB,UAEA,kBAACC,GAAA,EAAD,CACCjP,MAAOuD,EACP3B,SAnIR,SAAAjC,GACjBknB,EAAUlnB,EAAEI,OAAOC,QAoIMkP,WAAY,CACXxN,KAAM,SACN7H,GAAG,kBAIJgU,EACK,kBAACpG,GAAA,EAAD,MAEJkG,EAASpU,KAAI,SAACgK,EAAQ1J,GACrB,OAAO,kBAAC4N,GAAA,EAAD,CAAUrE,IAAKvJ,EAAImG,MAAOuD,EAAO4L,YAAa5L,EAAO4L,WAArD,UAOT,0BAAM5K,MAAO,CAAEzI,MAAO,QACfzC,EAAOkK,SAKjB,kBAACqI,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACtB,kBAAC3K,EAAA,EAAD,CACArB,MAAOuN,EACP3L,SA3JR,SAAAjC,GAClBuqB,EAAQvqB,EAAEI,OAAOC,QA2JSnG,GAAG,aACH6H,KAAK,aACLD,MAAM,aACND,WAAS,EACTmN,aAAa,eAEb,0BAAMpK,MAAO,CAAEzI,MAAO,QACbzC,EAAOkU,aAKlB,kBAAC3B,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC1K,EAAA,EAAD,CACArB,MAAOyX,EACP7V,SAvKJ,SAAAjC,GACrBqa,EAAWra,EAAEI,OAAOC,QAuKKnG,GAAG,UACH6H,KAAK,UACLD,MAAM,oBACND,WAAS,EACTmN,aAAa,YAEb,0BAAMpK,MAAO,CAAEzI,MAAO,QACjBzC,EAAOoe,UAKZ,kBAAC7L,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC1K,EAAA,EAAD,CACCrB,MAAOmjB,EACPvhB,SAnLF,SAAAjC,GACzBwqB,EAAexqB,EAAEI,OAAOC,QAmLGnG,GAAG,cACH6H,KAAK,cACLD,MAAM,0BACND,WAAS,EACTmN,aAAa,gBAEd,0BAAMpK,MAAO,CAAEzI,MAAO,QACbzC,EAAO8pB,cAKjB,kBAACvX,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC1K,EAAA,EAAD,CACCrB,MAAOojB,EACPxhB,SA/LC,SAAAjC,GAC5ByqB,EAAkBzqB,EAAEI,OAAOC,QA+LAnG,GAAG,iBACH6H,KAAK,iBACLD,MAAM,4BACND,WAAS,EACTmN,aAAa,mBAEd,0BAAMpK,MAAO,CAAEzI,MAAO,QACbzC,EAAO+pB,iBAKjB,kBAACxX,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACtB,kBAAC3K,EAAA,EAAD,CACCrB,MAAOqjB,EACPzhB,SA3ME,SAAAjC,GAC7B0qB,EAAmB1qB,EAAEI,OAAOC,QA2MDnG,GAAG,kBACH6H,KAAK,kBACLD,MAAM,mBACND,WAAS,EACTmN,aAAa,kBACbxV,KAAK,WAEN,0BAAMoL,MAAO,CAAEzI,MAAO,QACbzC,EAAOgqB,kBAIjB,kBAACzX,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACtB,kBAAC3K,EAAA,EAAD,CACCrB,MAAOsjB,EACP1hB,SAvNG,SAAAjC,GAC9B2qB,EAAoB3qB,EAAEI,OAAOC,QAuNFnG,GAAG,mBACH6H,KAAK,mBACLD,MAAM,oBACND,WAAS,EACTmN,aAAa,mBACbxV,KAAK,WAEN,0BAAMoL,MAAO,CAAEzI,MAAO,QACbzC,EAAOiqB,mBAKjB,kBAAC1X,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC1K,EAAA,EAAD,CACCrB,MAAOyV,EACP7T,SApOF,SAAAjC,GACzB4qB,EAAe5qB,EAAEI,OAAOC,QAoOGnG,GAAG,cACH6H,KAAK,cACLD,MAAM,kCACN2N,WAAS,EACTC,QAAQ,IACR9O,UAAWF,EAAQmO,YACnBrR,OAAO,SACPqE,WAAS,KAIX,kBAACc,EAAA,EAAD,CACCnJ,KAAK,SACL0C,QAAQ,WACRC,MAAM,YACNyE,UAAWF,EAAQkC,QAJpB,0BCtWrBuH,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCK0f,G,2KAtBX,OACE,6BACE,kBAACpf,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAAC,GAAD,CACEA,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAQ,QACRiP,QAASlH,KAAKpF,MAAMksB,e,GAhBInf,IAAM/G,WCkW1C,IAKMO,GAAqB,CAAE4lB,c9B1ZA,SAAC9wB,EAAIowB,GAAL,OAAiB,SAAAzuB,GAC7CR,IAAM+C,KAAN,0CAA8ClE,GAAMowB,GACnDjsB,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KlErB4B,iBkEsB5BC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,a8BoZT6Z,eAAWna,aAPF,SAAA3E,GAAK,MAAK,CACjCa,QAASb,EAAMa,QACfT,OAAQJ,EAAMI,UAKoC0L,GAAzBnH,CAA6C6G,cApaxD,SAAAnI,GAAK,MAAK,CACrBC,KAAK,yBACDI,QAAS,OACTmT,SAAU,QACNxT,EAAMkN,OAAOC,WAHjB,IAIAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjCwR,OAAO,aACH7R,MAAO,OACPY,WAAYrB,EAAMc,QAAQ,GAC1ByN,YAAavO,EAAMc,QAAQ,IAC1Bd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDL,MAAO,IACPY,WAAY,OACZkN,YAAa,SAGjBpO,MAAM,aACJC,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG3ByR,UAAW,CACPoB,MAAO,QACPnU,MAAO,OAEX0S,YAAa,CAEXvR,SAAU,SAEZsF,OAAO,CACL7F,UAAWJ,EAAMc,QAAQ,IAE3B+N,MAAO,CACH6E,QAAS1T,EAAMc,UAAY,GAE5BoU,KAAM,CACX7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,OAoX2DpI,EAhXvE,SAAoBjG,GAEnB,IAAM6B,EAAU7B,EAFS,EAOOC,mBAAS,IAPhB,mBAOlBkP,EAPkB,KAORN,EAPQ,OAQqB5O,oBAAS,GAR9B,mBAQlBoP,EARkB,KAQDkE,EARC,OAWGtT,mBAAS,IAXZ,mBAWlB8E,EAXkB,KAWVsjB,EAXU,OAYKpoB,mBAAS,IAZd,mBAYlB8O,EAZkB,KAYN2c,EAZM,OAaKzrB,mBAAS,IAbd,mBAalBgZ,EAbkB,KAaTuC,EAbS,OAcavb,mBAAS,IAdtB,mBAclB0kB,EAdkB,KAcLgH,EAdK,OAemB1rB,mBAAS,IAf5B,mBAelB2kB,EAfkB,KAeFgH,EAfE,OAgBqB3rB,mBAAS,IAhB9B,mBAgBlB4kB,EAhBkB,KAgBDgH,EAhBC,OAiBuB5rB,mBAAS,IAjBhC,mBAiBlB6kB,EAjBkB,KAiBAgH,EAjBA,OAkBa7rB,mBAAS,IAlBtB,mBAkBlBgX,EAlBkB,KAkBL8U,EAlBK,OAqBG9rB,mBAAS,IArBZ,mBAqBlBpF,EArBkB,KAqBVyF,EArBU,QAsBOL,oBAAS,GAtBhB,qBAsBlBgpB,GAtBkB,MAsBRC,GAtBQ,MAyIzB,OAhDAznB,qBAAW,SAAA1E,GACV,IAAM1B,EAAKmY,aAAa,SAAAzW,IACvB,yCAAC,WAAMA,GAAN,gBAAA2J,EAAA,sEACkBlK,IAAMkF,IAAI,iBAD5B,OACMjC,EADN,OAECoP,EAAYpP,EAAIC,MACb6T,GAAmB,GAHvB,2CAAD,0DAKE,KAEH,OAAO,SAAAxW,GACN0W,cAAcpY,MAEd,IAGFoG,qBAAW,SAAA1E,IAET,yCAAC,WAAMA,GAAN,gBAAA2J,EAAA,sEACkBlK,IAAMkF,IAAN,kCAAqC1B,EAAMsW,MAAMC,OAAOlb,KAD1E,OACMoE,EADN,OAEC4oB,EAAU5oB,EAAIC,KAAKqF,QACnB2mB,EAAQjsB,EAAIC,KAAKqP,YACjByM,EAAW/b,EAAIC,KAAKuZ,SACpB0S,EAAelsB,EAAIC,KAAKilB,aACxBiH,EAAkBnsB,EAAIC,KAAKklB,gBAC3BiH,EAAmBpsB,EAAIC,KAAKmlB,iBAC5BiH,EAAoBrsB,EAAIC,KAAKolB,kBAC7BiH,EAAetsB,EAAIC,KAAKuX,aATzB,4CAAD,0DAWA,IAGFxV,qBAAW,SAAA1E,GACPiD,EAAMnF,QACRyF,EAAUN,EAAMnF,QAGdmF,EAAMnF,OAAO2kB,KACf0J,IAAY,KAEZ,CAAClpB,EAAMnF,SAGT4G,qBAAW,SAAA1E,GACPiD,EAAM1E,QAAQxC,SAChBkH,EAAM2B,QAAQC,KAAK,0BAEnB,CAAC5B,EAAM1E,QAAQxC,UAGf,kBAAC,GAAD,KAEA,kBAAC,GAAD,CAAuBqM,KAAM8jB,GAAUniB,QA9DpB,SAACmG,EAAOC,GACX,cAAXA,GAIJgc,IAAY,IAyDgDgD,OAAQrxB,EAAO2kB,MAE3E,kBAAC3L,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SACxD,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,uBAAuBsE,UAAWF,EAAQmR,MACnE,kBAAC,KAAD,CAAcjR,UAAWF,EAAQoK,OADnC,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAM,qCAAuCuC,EAAMsW,MAAMC,OAAOlb,GAChEyY,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAajR,UAAWF,EAAQoK,OANhC,QAWH,yBAAKlK,UAAWF,EAAQ9D,MAEvB,0BAAMgE,UAAWF,EAAQuO,QAEZ,kBAACtF,GAAA,EAAD,CACA/I,UAAWF,EAAQ5D,MACnB8H,MAAO,CAAE8E,WAAY,OAAQK,cAAc,SAEzC,kBAAC9N,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,kCAGC,6BAEA,kBAACyE,EAAA,EAAD,CAAWE,SAAS,MAEnB,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAKA,0BAAMoF,YAAU,EAACC,SAzHpB,SAAAvB,GACpBA,EAAEC,iBAEF,IAAM4qB,EAAe,CACpBjnB,SACAgK,aACAkK,UACA0L,cACAC,iBACAC,kBACAC,mBACA7N,eAMDjX,EAAMmsB,cAAcnsB,EAAMsW,MAAMC,OAAOlb,GAAG2wB,KAyGlB,kBAAC5e,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAExB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACtB,kBAAC8C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEzC,kBAACO,GAAA,EAAD,CAAYC,QAAQ,iBAApB,UAEA,kBAACC,GAAA,EAAD,CACCjP,MAAOuD,EACP3B,SAnKR,SAAAjC,GACjBknB,EAAUlnB,EAAEI,OAAOC,QAoKMkP,WAAY,CACXxN,KAAM,SACN7H,GAAG,kBAIJgU,EACK,kBAACpG,GAAA,EAAD,MAEJkG,EAASpU,KAAI,SAACgK,EAAQ1J,GACrB,OAAO,kBAAC4N,GAAA,EAAD,CAAUrE,IAAKvJ,EAAImG,MAAOuD,EAAO4L,YAAa5L,EAAO4L,WAArD,UAOT,0BAAM5K,MAAO,CAAEzI,MAAO,QACfzC,EAAOkK,SAKjB,kBAACqI,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACtB,kBAAC3K,EAAA,EAAD,CACArB,MAAOuN,EACP3L,SA3LR,SAAAjC,GAClBuqB,EAAQvqB,EAAEI,OAAOC,QA2LSnG,GAAG,aACH6H,KAAK,aACLD,MAAM,aACND,WAAS,EACTmN,aAAa,eAEb,0BAAMpK,MAAO,CAAEzI,MAAO,QACbzC,EAAOkU,aAKlB,kBAAC3B,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC1K,EAAA,EAAD,CACArB,MAAOyX,EACP7V,SAvMJ,SAAAjC,GACrBqa,EAAWra,EAAEI,OAAOC,QAuMKnG,GAAG,UACH6H,KAAK,UACLD,MAAM,oBACND,WAAS,EACTmN,aAAa,YAEb,0BAAMpK,MAAO,CAAEzI,MAAO,QACjBzC,EAAOoe,UAKZ,kBAAC7L,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC1K,EAAA,EAAD,CACCrB,MAAOmjB,EACPvhB,SAnNF,SAAAjC,GACzBwqB,EAAexqB,EAAEI,OAAOC,QAmNGnG,GAAG,cACH6H,KAAK,cACLD,MAAM,0BACND,WAAS,EACTmN,aAAa,gBAEd,0BAAMpK,MAAO,CAAEzI,MAAO,QACbzC,EAAO8pB,cAKjB,kBAACvX,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC1K,EAAA,EAAD,CACCrB,MAAOojB,EACPxhB,SA/NC,SAAAjC,GAC5ByqB,EAAkBzqB,EAAEI,OAAOC,QA+NAnG,GAAG,iBACH6H,KAAK,iBACLD,MAAM,4BACND,WAAS,EACTmN,aAAa,mBAEd,0BAAMpK,MAAO,CAAEzI,MAAO,QACbzC,EAAO+pB,iBAKjB,kBAACxX,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACtB,kBAAC3K,EAAA,EAAD,CACCrB,MAAOqjB,EACPzhB,SA3OE,SAAAjC,GAC7B0qB,EAAmB1qB,EAAEI,OAAOC,QA2ODnG,GAAG,kBACH6H,KAAK,kBACLD,MAAM,mBACND,WAAS,EACTmN,aAAa,kBACbxV,KAAK,WAEN,0BAAMoL,MAAO,CAAEzI,MAAO,QACbzC,EAAOgqB,kBAIjB,kBAACzX,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GACtB,kBAAC3K,EAAA,EAAD,CACCrB,MAAOsjB,EACP1hB,SAvPG,SAAAjC,GAC9B2qB,EAAoB3qB,EAAEI,OAAOC,QAuPFnG,GAAG,mBACH6H,KAAK,mBACLD,MAAM,oBACND,WAAS,EACTmN,aAAa,mBACbxV,KAAK,WAEN,0BAAMoL,MAAO,CAAEzI,MAAO,QACbzC,EAAOiqB,mBAKjB,kBAAC1X,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC1K,EAAA,EAAD,CACCrB,MAAOyV,EACP7T,SApQF,SAAAjC,GACzB4qB,EAAe5qB,EAAEI,OAAOC,QAoQGnG,GAAG,cACH6H,KAAK,cACLD,MAAM,kCACN2N,WAAS,EACTC,QAAQ,IACR9O,UAAWF,EAAQmO,YACnBrR,OAAO,SACPqE,WAAS,KAMX,kBAACc,EAAA,EAAD,CACCnJ,KAAK,SACL0C,QAAQ,WACRC,MAAM,YACNyE,UAAWF,EAAQkC,QAJpB,0BC1XdqoB,GAAqB,SAAArvB,GACjC,MAAO,CAAEpC,KjGNoB,mBkGXxB2Q,GAAc,CAClBC,QAASC,KACTC,QAASC,KACT5I,MAAO6I,KACPC,KAAMC,MAmER,IAAMC,GAA2B7F,cAhEjB,SAAAnI,GAAK,MAAK,CACxByN,QAAS,CACPJ,gBAAiBnM,IAAM,MAEzB8D,MAAO,CACLqI,gBAAiBrN,EAAMsN,QAAQtI,MAAMiJ,MAEvCH,KAAM,CACJT,gBAAiBrN,EAAMsN,QAAQxF,QAAQmG,MAEzCN,QAAS,CACPN,gBAAiBa,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAavO,EAAMc,WAErB0N,QAAS,CACPnO,QAAS,OACTE,WAAY,aA0CiB4H,EAtCjC,SAA2BjG,GAAQ,IACzB6B,EAA4D7B,EAA5D6B,QAASE,EAAmD/B,EAAnD+B,UAAWuK,EAAwCtM,EAAxCsM,QAASxF,EAA+B9G,EAA/B8G,QAASzJ,EAAsB2C,EAAtB3C,QAAYkP,EAD1B,aACoCvM,EADpC,uDAE1BwM,EAAOlB,GAAYjO,GAEzB,OACE,kBAACoP,GAAA,EAAD,eACE1K,UAAW2K,KAAW7K,EAAQxE,GAAU0E,GACxCsH,mBAAiB,kBACjBiD,QACE,0BAAMjR,GAAG,kBAAkB0G,UAAWF,EAAQyK,SAC5C,kBAACE,EAAD,CAAMzK,UAAW2K,KAAW7K,EAAQoK,KAAMpK,EAAQsK,eACjDG,GAGL5R,OAAQ,CACN,kBAACgJ,GAAA,EAAD,CACEkB,IAAI,QACJhB,aAAW,QACXtG,MAAM,UACNyE,UAAWF,EAAQ8K,MACnBvK,QAAS0E,GAET,kBAAC,KAAD,CAAW/E,UAAWF,EAAQoK,UAG9BM,OAuCK8f,G,2KAtBX,OACE,6BACE,kBAACxf,GAAA,EAAD,CACEhE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd5D,KAAMC,KAAKpF,MAAMmF,KACjB2H,iBAAkB,IAClBhG,QAAS1B,KAAKpF,MAAM8G,SAEpB,kBAAC,GAAD,CACEA,QAAS1B,KAAKpF,MAAM8G,QACpBzJ,QAAQ,UACRiP,QAAQ,2C,GAhBsBS,IAAM/G,WClD1C0L,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QA+SzD,IAIMhB,GAAqB,CAAE+lB,gBFlZE,SAAAvvB,GAAC,OAAI,SAAAC,GACnCA,EAASovB,IACT5vB,IAAMkF,IAAI,yBACTlC,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KjGY4B,iBiGX5BC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,SE6YZV,gBANS,SAAA3E,GAAK,MAAK,CAC9Be,IAAKf,EAAMe,OAKyB+K,GAAzBnH,CAA6C6G,cAvS7C,SAAAnI,GAAK,MAAK,CACrBC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEhC+T,MAAO,CACRpU,MAAO,OACP2M,cAAe,QACblN,SAAU,GAEZgV,KAAM,CACN7U,QAAS,QAEN8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAEZ0E,aAAc,CACdlI,WAAW,IAERmF,YAAa,CAEZvR,SAAU,SAEjBmU,aAAc,CACXC,UAAW,QAEbrU,MAAO,CACLC,SAAU,QAyQ8CwH,EArQ5D,SAAwBjG,GAChB,IAAM6B,EAAU7B,EADM,EAKAC,mBAAS,GALT,mBAKjBkS,EALiB,KAKXe,EALW,OAMcjT,mBAAS,GANvB,mBAMjBmS,EANiB,KAMJe,EANI,OASQlT,mBAAS,IATjB,mBASjBkP,EATiB,KASPN,EATO,OAUsB5O,oBAAS,GAV/B,mBAUjBoP,EAViB,KAUAkE,EAVA,OAagBtT,mBAAS,IAbzB,mBAajBuX,EAbiB,KAaHC,EAbG,OAgBQxX,oBAAS,GAhBjB,mBAgBfxH,EAhBe,KAgBNoI,EAhBM,OAmBEZ,oBAAS,GAnBX,mBAmBfkF,EAnBe,KAmBTmO,EAnBS,KAgDtB7R,qBAAW,SAAA1E,GAEP,IAAM1B,EAAKmY,aAAa,SAAAzW,IACpB,yCAAC,WAAMA,GAAN,gBAAA2J,EAAA,sEACqBlK,IAAMkF,IAAI,iBAD/B,OACSjC,EADT,OAEGoP,EAAYpP,EAAIC,MAChB6T,GAAmB,GAHtB,2CAAD,0DAKD,KAEH,OAAO,SAAAxW,GACH0W,cAAcpY,MAGpB,IAGFoG,qBAAW,SAAA1E,GAEP,IAAM1B,EAAKmY,aAAa,SAAAzW,GACpBiD,EAAMssB,kBACNzrB,GAAW,KACZ,KAEH,OAAO,SAAA9D,GACH0W,cAAcpY,MAGpB,IAGFoG,qBAAU,SAAA1E,GACHiD,EAAMxE,IAAIvC,YACTqa,GAAQ,KAEd,CAACtT,EAAMxE,IAAIvC,aAKnB,IAAM6I,EAAO9B,EAAMxE,IAAItC,SAASuN,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAChFzL,QAAO,SAAAwJ,GAAG,OAAIA,EAAII,SAAWyS,KAG1B9D,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GACrE,OACI,6BACI,kBAAC,GAAD,KAEA,kBAAC,GAAD,CAA6BjN,KAAMA,EAAM2B,QA5D1B,SAACmG,EAAOC,GACR,cAAXA,GAIJoG,GAAQ,MAyDR,kBAACO,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC1D,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,uBAAuBsE,UAAWF,EAAQmR,MACnE,kBAAC,KAAD,CAAcjR,UAAWF,EAAQoK,OADnC,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,mCACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAajR,UAAWF,EAAQoK,OANhC,iBAYH,kBAACnI,EAAA,EAAD,CACOrG,KAAK,+CACLsE,UAAWF,EAAQkR,aACnB1V,QAAQ,WACRC,MAAM,aAJb,oBAUD,yBAAMyI,MAAO,CAACmF,cAAe,GAAIL,WAAY,KACzC,kBAACC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MACrB,kBAACuS,GAAA,EAAD,CAAatN,WAAS,GACb,kBAACH,EAAA,EAAD,CACIxH,GAAG,kCACH0Y,QAAM,EACN9Q,MAAM,mBACNzB,MAAOgW,EACPpU,SAtGC,SAAAjC,GAC3BsW,EAAgBtW,EAAEI,OAAOC,QAsGCwS,YAAa,CACXC,QAAQ,IAGN5E,EAEA,iCAGA,kBAAC,WAAD,KACI,iCACCF,EAASpU,KAAI,SAACgK,EAAO1J,GACpB,OACA,4BAAQuJ,IAAKvJ,EAAImG,MAAOuD,EAAO4L,YAAa5L,EAAO4L,oBAY/E,kBAAC7F,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MACtB,yBAAKgE,UAAWF,EAAQ+Q,cAEnB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE7C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,0BACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,UACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,uBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,qBAKA,kBAACmH,GAAA,EAAD,KACIjM,EAGE,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAKJ,kBAAC,WAAD,KAEoB,KAAjBka,GAAuC,IAAhB1V,EAAK8R,OAC5B,kBAACnP,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACtD,kBAAC,KAAD,MAAmB,6BADnB,iDAKAgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAEH/G,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIsU,SAEP,kBAACxU,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAII,QAC7B,kBAACN,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIzE,UAC7B,kBAACuE,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIiC,YAAYiQ,OAAO,oBAO9DnD,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aAlNH,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IAkNkBC,oBA/MI,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IA8MkByB,iBAAkB3C,gBCjCxD,IAMMzL,GAAqB,CAAEgmB,gBHrVE,SAAA7sB,GAAI,OAAI,SAAA1C,GACtCR,IAAM+C,KAAK,uBAAwBG,GAClCF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KjGGgC,qBiGFhCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACAyC,QAASkF,EAAIC,SAASL,YG6UiB6kB,eAEhCnlB,gBARS,SAAA3E,GAAK,MAAK,CAChCa,QAASb,EAAMa,QAAQtC,QACvBwC,IAAKf,EAAMe,IACXX,OAAQJ,EAAMI,UAKwB0L,GAAzBnH,CAA6C6G,cA5U7C,SAAAnI,GAAK,MAAK,CACrBC,KAAK,yBACDI,QAAS,OACTmT,SAAU,QACNxT,EAAMkN,OAAOC,WAHjB,IAIAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjCwR,OAAO,aACH7R,MAAO,OACPY,WAAYrB,EAAMc,QAAQ,GAC1ByN,YAAavO,EAAMc,QAAQ,IAC1Bd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDL,MAAO,IACPY,WAAY,OACZkN,YAAa,SAGjBpO,MAAM,aACJC,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG3ByR,UAAW,CACPoB,MAAO,QACPnU,MAAO,OAEX0S,YAAa,CAEXvR,SAAU,SAEZsF,OAAO,CACL7F,UAAWJ,EAAMc,QAAQ,IAE3B+N,MAAO,CACH6E,QAAS1T,EAAMc,UAAY,GAE5BoU,KAAM,CACX7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,OA4RgDpI,EAvR5D,SAA+BjG,GACvB,IAAM6B,EAAU7B,EADa,EAODC,mBAAS,CAEpCgZ,QAAS,GACT/Y,SAAS,GACTC,SAAS,GAGVI,cAAc,EAEdisB,YAAY,IAhBiB,mBAOtBzT,EAPsB,KAOdC,EAPc,OAoBD/Y,mBAAS,IApBR,mBAoBtBpF,EApBsB,KAoBdyF,EApBc,KAsBvBe,EAAe,SAAAC,GAAI,OAAI,SAAAH,GACzB6X,EAAU,2BAAID,GAAL,kBAAczX,EAAOH,EAAEI,OAAOC,WA4B3CC,qBAAW,SAAA1E,GAEHiD,EAAMukB,aACNvL,EAAU,2BAAID,GAAL,IAAayT,YAAY,OAExC,IAGF/qB,qBAAU,SAAA1E,GACHiD,EAAMxE,IAAIvC,YACL+G,EAAM2B,QAAQC,KAAK,uCAE7B,CAAC5B,EAAMxE,IAAIvC,aAGbwI,qBAAW,SAAA1E,GACJiD,EAAMnF,QACLyF,EAAUN,EAAMnF,UAEtB,CAACmF,EAAMnF,SAGT,IAAM4xB,EAASzsB,EAAM1E,QAAQmL,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAExE8lB,EAAeD,EAAOtxB,QAAO,SAAAK,GAAG,OAAIA,EAAIyd,UAAYF,EAAOE,QAAQA,WAEzE,OACI,6BACI,kBAAC,GAAD,KAEC,kBAACpF,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC3D,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,uBAAuBsE,UAAWF,EAAQmR,MACnE,kBAAC,KAAD,CAAcjR,UAAWF,EAAQoK,OADnC,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,UACNG,KAAK,mCAELsE,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAajR,UAAWF,EAAQoK,OANhC,gBAUC,kBAACzO,GAAA,EAAD,CACCF,MAAM,cACNG,KAAK,+CACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAcjR,UAAWF,EAAQoK,OANhC,aAYD,yBAAKlK,UAAWF,EAAQ9D,MAEpB,0BAAMgE,UAAWF,EAAQuO,QAErB,kBAACtF,GAAA,EAAD,CACC/I,UAAWF,EAAQ5D,MACnB8H,MAAO,CAAE8E,WAAY,OAAQK,cAAc,SAG5C,kBAAC9N,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,0CAGC,6BAEA,kBAACyE,EAAA,EAAD,CAAWE,SAAS,MAEjB,0BAAMO,YAAU,EAACC,SA3FpB,SAAAvB,GACjBA,EAAEC,iBAEF,IAAMurB,EAAQ,CACV1T,QAASF,EAAOE,QAAQA,QACxBlU,OAAQgU,EAAOE,QAAQlU,OACvB7E,SAAU6Y,EAAO7Y,SACjBC,SAAU4Y,EAAO5Y,SACjBxF,KAAM,OAGTqF,EAAMusB,gBAAgBI,KAkFH,kBAACvf,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAEnB,kBAACxB,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAKE,kBAAC,WAAD,KAEA,kBAAC+P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACX,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEtC,kBAACO,GAAA,EAAD,CAAYC,QAAQ,kBAApB,gBAEA,kBAACC,GAAA,EAAD,CACIjP,MAAOuX,EAAOE,QACd7V,SAAU/B,EAAa,WACvBqP,WAAY,CACRxN,KAAM,UACN7H,GAAG,mBAIP0d,EAAOyT,WACF,kBAACvjB,GAAA,EAAD,MAKJwjB,EAAO1xB,KAAI,SAAAS,GACR,OAAO,kBAACyN,GAAA,EAAD,CAAWzH,MAAOhG,GAAMA,EAAIyd,cAM9C,0BAAMlT,MAAO,CAAEzI,MAAO,QAClBzC,EAAOoe,UAKhB,kBAAC7L,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IAEQ,KAAnBwL,EAAOE,QAEP,kBAAC,WAAD,MAGAyT,EAAa3xB,KAAI,SAAAS,GAAG,OAEf,kBAAC,WAAD,KACM,kBAACqH,EAAA,EAAD,CACCxH,GAAG,SACH6H,KAAK,SACL1B,MAAOhG,EAAIuJ,OACTxB,WAAY,CACV6V,UAAU,GAEdpW,WAAS,UAUzB,kBAACoK,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACX,kBAAC1K,EAAA,EAAD,CACIrB,MAAOuX,EAAO7Y,SACdkD,SAAU/B,EAAa,YACvBhG,GAAG,WACH6H,KAAK,WACLD,MAAM,WACND,WAAS,IAGb,0BAAM+C,MAAO,CAAEzI,MAAO,QACjBzC,EAAOqF,WAIhB,kBAACkN,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACf,kBAAC1K,EAAA,EAAD,CACIG,WAAS,EACT3H,GAAG,WACH6H,KAAK,WACLD,MAAM,WACNtI,KAAMoe,EAAOxY,aAAe,OAAS,WACrCiB,MAAOuX,EAAO5Y,SACdiD,SAAU/B,EAAa,YACvBkC,WAAY,CACRC,aACK,kBAACC,GAAA,EAAD,CAAgB3E,SAAS,OACtB,kBAAC4E,GAAA,EAAD,CACIC,KAAK,MACLC,aAAW,6BACXxB,QAxMpB,WAC5B4W,EAAU,2BAAKD,GAAN,IAAcxY,cAAewY,EAAOxY,iBAwMGsD,YArMpB,SAACoJ,GAC7BA,EAAM7L,mBAsM2C2X,EAAOxY,aAAe,kBAAC,KAAD,MAAoB,kBAAC,KAAD,WAQ3D,0BAAMwF,MAAO,CAAEzI,MAAO,QACjBzC,EAAOsF,YAMxB,6BACA,kBAAC2D,EAAA,EAAD,CACInJ,KAAK,SACL0C,QAAQ,WACRC,MAAM,YACNyE,UAAWF,EAAQkC,QAJvB,uBC2H1BwC,GAAqB,CAAEqmB,gBT9ZE,SAAAC,GAAW,OAAI,SAAA7vB,GAC7CR,IAAM+C,KAAK,mCAAoCstB,GAC9CrtB,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,K5FVgC,qB4FWhCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,aSwZTN,gBAPS,SAAA3E,GAAK,MAAK,CACjCgB,cAAehB,EAAMgB,cACrBZ,OAAQJ,EAAMI,UAKyB0L,GAAzBnH,CAA6C6G,cA3a7C,SAAAnI,GAAK,MAAK,CACrBC,KAAK,yBACDI,QAAS,OACTmT,SAAU,QACNxT,EAAMkN,OAAOC,WAHjB,IAIAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjCwR,OAAO,aACH7R,MAAO,OACPY,WAAYrB,EAAMc,QAAQ,GAC1ByN,YAAavO,EAAMc,QAAQ,IAC1Bd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDL,MAAO,IACPY,WAAY,OACZkN,YAAa,SAGjBpO,MAAM,aACJC,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG3ByR,UAAW,CACPoB,MAAO,QACPnU,MAAO,OAEX0S,YAAa,CAEXvR,SAAU,SAEZsF,OAAO,CACL7F,UAAWJ,EAAMc,QAAQ,IAE3B+N,MAAO,CACH6E,QAAS1T,EAAMc,UAAY,GAE5BoU,KAAM,CACX7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,OA2XgDpI,EAvX/B,SAACjG,GAE7B,IAAM6B,EAAU7B,EAFuB,EAOXC,mBAAS,CAEpCiD,KAAK,GAELmoB,KAAK,GAELhpB,IAAI,GAEJ0C,OAAO,GAEPgK,WAAW,GAEXuc,SAAU,GAEVpZ,MAAO,GAEPqZ,UAAW,KAvB2B,mBAOhCxS,EAPgC,KAOxBC,EAPwB,OA4BP/Y,mBAAS,IA5BF,mBA4BhCkP,EA5BgC,KA4BtBN,EA5BsB,OA6BO5O,oBAAS,GA7BhB,mBA6BhCoP,EA7BgC,KA6BfkE,EA7Be,OA8BAtT,mBAAS,IA9BT,mBA8BhCmP,EA9BgC,KA8BnBM,EA9BmB,OA+BazP,oBAAS,GA/BtB,mBA+BhCqP,EA/BgC,KA+BZkJ,EA/BY,OAkCXvY,mBAAS,IAlCE,mBAkChCpF,EAlCgC,KAkCxByF,EAlCwB,KAsCjCe,EAAe,SAAAC,GAAI,OAAI,SAAAH,GAC5B6X,EAAU,2BAAID,GAAL,kBAAczX,EAAOH,EAAEI,OAAOC,WAkDvC,OAvCDC,qBAAW,SAAA1E,GAEV,IAAM1B,EAAKmY,aAAa,SAAAzW,IAEvB,yCAAC,WAAMA,GAAN,gBAAA2J,EAAA,sEACkBlK,IAAMkF,IAAI,iBAD5B,OACMjC,EADN,OAECoP,EAAYpP,EAAIC,MACb6T,GAAmB,GAHvB,2CAAD,wDAMA,yCAAC,WAAMxW,GAAN,gBAAA2J,EAAA,sEACkBlK,IAAMkF,IAAI,oBAD5B,OACMjC,EADN,OAEAiQ,EAAejQ,EAAIC,MACnB8Y,GAAsB,GAHtB,2CAAD,0DAME,KAEH,OAAO,SAAAzb,GACN0W,cAAcpY,MAGd,IAIFoG,qBAAW,SAAA1E,GACPiD,EAAMvE,cAAc5C,OAEtBmH,EAAM2B,QAAQC,KAAK,uBAEnB,CAAC5B,EAAMvE,cAAc5C,QAGvB4I,qBAAW,SAAA1E,GACPiD,EAAMnF,QACRyF,EAAUN,EAAMnF,UAChB,CAACmF,EAAMnF,SAGN,6BAEA,kBAAC,GAAD,KAEA,kBAACgZ,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SACxD,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,oBAAoBsE,UAAWF,EAAQmR,MAChE,kBAAC,KAAD,CAAcjR,UAAWF,EAAQoK,OADnC,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,qCACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAajR,UAAWF,EAAQoK,OANhC,QAWH,yBAAKlK,UAAWF,EAAQ9D,MAEvB,0BAAMgE,UAAWF,EAAQuO,QAExB,kBAACtF,GAAA,EAAD,CAAO/I,UAAWF,EAAQ5D,MAC1B8H,MAAO,CAAE8E,WAAY,OAAQK,cAAc,SAG1C,kBAAC9N,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,kCAGe,6BAEA,kBAACyE,EAAA,EAAD,CAAWE,SAAS,MAEpB,0BAAMO,YAAU,EAACC,SApFpB,SAAAvB,GACpBA,EAAEC,iBAEFpB,EAAM4sB,gBAAgB7T,KAmFE,kBAAC3b,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAIlB,kBAAC+P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACf,kBAAC1K,EAAA,EAAD,CACCrB,MAAOuX,EAAO7V,KACdE,SAAU/B,EAAa,QACvBhG,GAAG,OACH6H,KAAK,OACLD,MAAM,sBACND,WAAS,EACTmN,cAAY,KAIb,0BAAMpK,MAAO,CAAEzI,MAAO,QACUzC,EAAOqI,MAGvC,6BACA,kBAACkK,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEzC,kBAACO,GAAA,EAAD,CAAYC,QAAQ,eAApB,mBAEA,kBAACC,GAAA,EAAD,CACCjP,MAAOuX,EAAOsS,KACdjoB,SAAU/B,EAAa,QACvBqP,WAAY,CACXxN,KAAK,OACL7H,GAAG,gBAIJ,kBAAC4N,GAAA,EAAD,CAAUzH,MAAM,YAAhB,YACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,YAAhB,YACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,YAAhB,YACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,YAAhB,YACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,YAAhB,YACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,mBAAhB,sBAOH,0BAAMuE,MAAO,CAAEzI,MAAO,QACUzC,EAAOwwB,MAEvC,6BAEA,kBAACje,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC1K,EAAA,EAAD,CACoBrB,MAAOuX,EAAO1W,IACde,SAAU/B,EAAa,OACvBhG,GAAG,MACH6H,KAAK,MACLD,MAAM,yBACND,WAAS,KAI9B,0BAAM+C,MAAO,CAAEzI,MAAO,QACUzC,EAAOwH,KAEvC,6BAGA,kBAAC+K,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAEzB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GAEtB,kBAAC8C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEtB,kBAACO,GAAA,EAAD,CAAYC,QAAQ,iBAApB,yBAEA,kBAACC,GAAA,EAAD,CACCjP,MAAOuX,EAAOhU,OACd3B,SAAU/B,EAAa,UAEvBqP,WAAY,CACXxN,KAAM,SACN7H,GAAG,kBAIJgU,EACK,kBAACpG,GAAA,EAAD,MAEJkG,EAASpU,KAAI,SAACgK,EAAQ1J,GACrB,OAAO,kBAAC4N,GAAA,EAAD,CAAUrE,IAAKvJ,EAAImG,MAAOuD,EAAO4L,YAAa5L,EAAO4L,WAArD,UAOb,0BAAM5K,MAAO,CAAEzI,MAAO,QACRzC,EAAOkK,SAMtC,kBAACqI,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GAEvB,kBAAC8C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEtB,kBAACO,GAAA,EAAD,CAAYC,QAAQ,qBAApB,cAEA,kBAACC,GAAA,EAAD,CACCjP,MAAOuX,EAAOhK,WACd3L,SAAU/B,EAAa,cAEvBqP,WAAY,CACXxN,KAAM,aACN7H,GAAG,sBAIJiU,EACK,kBAACrG,GAAA,EAAD,MAEJmG,EAAYrU,KAAI,SAACgK,EAAQ1J,GACxB,OAAO,kBAAC4N,GAAA,EAAD,CAAUrE,IAAKvJ,EAAImG,MAAOuD,EAAOgK,YAAahK,EAAOgK,WAArD,UAOZ,0BAAMhJ,MAAO,CAAEzI,MAAO,QACTzC,EAAOkU,cAMvC,6BAEA,kBAAC3B,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEzC,kBAACO,GAAA,EAAD,CAAYC,QAAQ,mBAApB,yBAEA,kBAACC,GAAA,EAAD,CACCjP,MAAOuX,EAAOuS,SACdloB,SAAU/B,EAAa,YACvBqP,WAAY,CACXxN,KAAK,WACL7H,GAAG,oBAIJ,kBAAC4N,GAAA,EAAD,CAAUzH,MAAM,eAAhB,eACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,cAAhB,cACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,WAAhB,WACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,WAAhB,cAOH,0BAAMuE,MAAO,CAAEzI,MAAO,QACUzC,EAAOywB,UAEvC,6BAEA,kBAACle,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEzC,kBAACO,GAAA,EAAD,CAAYC,QAAQ,gBAApB,kCAEA,kBAACC,GAAA,EAAD,CACCjP,MAAOuX,EAAO7G,MACd9O,SAAU/B,EAAa,SACvBqP,WAAY,CACXxN,KAAK,QACL7H,GAAG,iBAIJ,kBAAC4N,GAAA,EAAD,CAAUzH,MAAM,OAAhB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,OAAhB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,OAAhB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,WAAhB,cAOH,0BAAMuE,MAAO,CAAEzI,MAAO,QACUzC,EAAOqX,OAEvC,6BAEA,kBAAC9E,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC1K,EAAA,EAAD,CACoBrB,MAAOuX,EAAOwS,UACdnoB,SAAU/B,EAAa,aACvBhG,GAAG,YACH6H,KAAK,YACLD,MAAM,uCACN2N,WAAS,EACTC,QAAQ,IACR9O,UAAWF,EAAQmO,YACnBrR,OAAO,SACPqE,WAAS,KAG9B,6BAEA,kBAACc,EAAA,EAAD,CACoBnJ,KAAK,SACL0C,QAAQ,WACRC,MAAM,YACNyE,UAAWF,EAAQkC,QAJvC,yBCkEFwC,GAAqB,CAAEumB,oBVrbM,SAACzxB,EAAIwxB,GAAL,OAAqB,SAAA7vB,GACvDR,IAAM+C,KAAN,6CAAiDlE,GAAMwxB,GACtDrtB,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,K5FrBmC,wB4FsBnCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAKxC,EACLyC,QAASkF,EAAIC,SAASL,aU+aTN,gBAPS,SAAA3E,GAAK,MAAK,CACjCgB,cAAehB,EAAMgB,cACrBZ,OAAQJ,EAAMI,UAKyB0L,GAAzBnH,CAA6C6G,cA9c7C,SAAAnI,GAAK,MAAK,CACrBC,KAAK,yBACDI,QAAS,OACTmT,SAAU,QACNxT,EAAMkN,OAAOC,WAHjB,IAIAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjCwR,OAAO,aACH7R,MAAO,OACPY,WAAYrB,EAAMc,QAAQ,GAC1ByN,YAAavO,EAAMc,QAAQ,IAC1Bd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDL,MAAO,IACPY,WAAY,OACZkN,YAAa,SAGjBpO,MAAM,aACJC,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG3ByR,UAAW,CACPoB,MAAO,QACPnU,MAAO,OAEX0S,YAAa,CAEXvR,SAAU,SAEZsF,OAAO,CACL7F,UAAWJ,EAAMc,QAAQ,IAE3B+N,MAAO,CACH6E,QAAS1T,EAAMc,UAAY,GAE5BoU,KAAM,CACX7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,OA8ZgDpI,EA1Z/B,SAACjG,GAE7B,IAAM6B,EAAU7B,EAFuB,EAOXC,mBAAS,CAEpCiD,KAAM,GAENmoB,KAAM,GAENhpB,IAAK,GAEL0C,OAAQ,GAERgK,WAAY,GAEZuc,SAAU,GAEVpZ,MAAO,GAEPqZ,UAAW,KAvB2B,mBAOhCxS,EAPgC,KAOxBC,EAPwB,OA4BP/Y,mBAAS,IA5BF,mBA4BhCkP,EA5BgC,KA4BtBN,EA5BsB,OA6BO5O,oBAAS,GA7BhB,mBA6BhCoP,EA7BgC,KA6BfkE,EA7Be,OA8BAtT,mBAAS,IA9BT,mBA8BhCmP,EA9BgC,KA8BnBM,EA9BmB,OA+BazP,oBAAS,GA/BtB,mBA+BhCqP,EA/BgC,KA+BZkJ,EA/BY,OAkCXvY,mBAAS,IAlCE,mBAkChCpF,EAlCgC,KAkCxByF,EAlCwB,OAmCPL,oBAAS,GAnCF,mBAmChCgpB,EAnCgC,KAmCtBC,EAnCsB,KAuCjC7nB,EAAe,SAAAC,GAAI,OAAI,SAAAH,GAC5B6X,EAAU,2BAAID,GAAL,kBAAczX,EAAOH,EAAEI,OAAOC,WAkFvC,OA5DDC,qBAAW,SAAA1E,GAEV,IAAM1B,EAAKmY,aAAa,SAAAzW,IAEvB,yCAAC,WAAMA,GAAN,gBAAA2J,EAAA,sEACkBlK,IAAMkF,IAAI,iBAD5B,OACMjC,EADN,OAECoP,EAAYpP,EAAIC,MACb6T,GAAmB,GAHvB,2CAAD,wDAMA,yCAAC,WAAMxW,GAAN,gBAAA2J,EAAA,sEACkBlK,IAAMkF,IAAI,oBAD5B,OACMjC,EADN,OAEAiQ,EAAejQ,EAAIC,MACnB8Y,GAAsB,GAHtB,2CAAD,0DAOE,KAEH,OAAO,SAAAzb,GACN0W,cAAcpY,MAGd,IAGFoG,qBAAW,SAAA1E,GACVP,IAAMkF,IAAN,2CAA8C1B,EAAMsW,MAAMC,OAAOlb,KAChEmE,MAAK,SAAAC,GAAG,OAAIuZ,EAAU,CACvB9V,KAAMzD,EAAIC,KAAKwD,KACfmoB,KAAM5rB,EAAIC,KAAK2rB,KACfhpB,IAAK5C,EAAIC,KAAK2C,IACd0C,OAAQtF,EAAIC,KAAKqF,OACjBgK,WAAYtP,EAAIC,KAAKqP,WACrBuc,SAAU7rB,EAAIC,KAAK4rB,SACnBpZ,MAAOzS,EAAIC,KAAKwS,MAChBqZ,UAAW9rB,EAAIC,KAAK6rB,eAEnB1rB,OAAM,SAAAC,GAAG,OAAIA,OACb,IAIF2B,qBAAW,SAAA1E,GACPiD,EAAMvE,cAActC,UAEtB6G,EAAM2B,QAAQC,KAAK,uBAEnB,CAAC5B,EAAMvE,cAActC,WAGvBsI,qBAAW,SAAA1E,GACPiD,EAAMnF,QACRyF,EAAUN,EAAMnF,QAEdmF,EAAMnF,OAAO2kB,KACf0J,GAAY,KAEZ,CAAClpB,EAAMnF,SAGN,6BAEA,kBAAC,GAAD,KAEC,kBAAC,GAAD,CAAqBsK,KAAM8jB,EAAUniB,QA5ErB,SAACmG,EAAOC,GACV,cAAXA,GAIJgc,GAAY,IAuEgD7rB,QAAQ,QAAQiP,QAASzR,EAAO2kB,MAE5F,kBAAC3L,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SACxD,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,oBAAoBsE,UAAWF,EAAQmR,MAChE,kBAAC,KAAD,CAAcjR,UAAWF,EAAQoK,OADnC,QAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAK,qCACLqW,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAajR,UAAWF,EAAQoK,OANhC,QAWH,yBAAKlK,UAAWF,EAAQ9D,MAEvB,0BAAMgE,UAAWF,EAAQuO,QAExB,kBAACtF,GAAA,EAAD,CAAO/I,UAAWF,EAAQ5D,MAC1B8H,MAAO,CAAE8E,WAAY,OAAQK,cAAc,SAG1C,kBAAC9N,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,UAA/B,kCAGe,6BAEA,kBAACyE,EAAA,EAAD,CAAWE,SAAS,MAEpB,0BAAMO,YAAU,EAACC,SAtHpB,SAAAvB,GACpBA,EAAEC,iBAEFoO,QAAQC,IAAIsJ,GACZ/Y,EAAM8sB,oBAAoB9sB,EAAMsW,MAAMC,OAAOlb,GAAG0d,KAoHxB,kBAAC3b,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAIlB,kBAAC+P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACf,kBAAC1K,EAAA,EAAD,CACCrB,MAAOuX,EAAO7V,KACdE,SAAU/B,EAAa,QACvBhG,GAAG,OACH6H,KAAK,OACLD,MAAM,sBACND,WAAS,EACTmN,cAAY,KAIb,0BAAMpK,MAAO,CAAEzI,MAAO,QACUzC,EAAOqI,MAGvC,6BACA,kBAACkK,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEzC,kBAACO,GAAA,EAAD,CAAYC,QAAQ,eAApB,mBAEA,kBAACC,GAAA,EAAD,CACCjP,MAAOuX,EAAOsS,KACdjoB,SAAU/B,EAAa,QACvBqP,WAAY,CACXxN,KAAK,OACL7H,GAAG,gBAIJ,kBAAC4N,GAAA,EAAD,CAAUzH,MAAM,YAAhB,YACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,YAAhB,YACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,YAAhB,YACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,YAAhB,YACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,YAAhB,YACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,mBAAhB,sBAOH,0BAAMuE,MAAO,CAAEzI,MAAO,QACUzC,EAAOwwB,MAEvC,6BAEA,kBAACje,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC1K,EAAA,EAAD,CACoBrB,MAAOuX,EAAO1W,IACde,SAAU/B,EAAa,OACvBhG,GAAG,MACH6H,KAAK,MACLD,MAAM,yBACND,WAAS,KAI9B,0BAAM+C,MAAO,CAAEzI,MAAO,QACUzC,EAAOwH,KAEvC,6BAGA,kBAAC+K,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAEzB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GAEtB,kBAAC8C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEtB,kBAACO,GAAA,EAAD,CAAYC,QAAQ,iBAApB,yBAEA,kBAACC,GAAA,EAAD,CACCjP,MAAOuX,EAAOhU,OACd3B,SAAU/B,EAAa,UAEvBqP,WAAY,CACXxN,KAAM,SACN7H,GAAG,kBAIJgU,EACK,kBAACpG,GAAA,EAAD,MAEJkG,EAASpU,KAAI,SAACgK,EAAQ1J,GACrB,OAAO,kBAAC4N,GAAA,EAAD,CAAUrE,IAAKvJ,EAAImG,MAAOuD,EAAO4L,YAAa5L,EAAO4L,WAArD,UAOb,0BAAM5K,MAAO,CAAEzI,MAAO,QACRzC,EAAOkK,SAMtC,kBAACqI,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAAIC,GAAI,GAEvB,kBAAC8C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEtB,kBAACO,GAAA,EAAD,CAAYC,QAAQ,qBAApB,cAEA,kBAACC,GAAA,EAAD,CACCjP,MAAOuX,EAAOhK,WACd3L,SAAU/B,EAAa,cAEvBqP,WAAY,CACXxN,KAAM,aACN7H,GAAG,sBAIJiU,EACK,kBAACrG,GAAA,EAAD,MAEJmG,EAAYrU,KAAI,SAACgK,EAAQ1J,GACxB,OAAO,kBAAC4N,GAAA,EAAD,CAAUrE,IAAKvJ,EAAImG,MAAOuD,EAAOgK,YAAahK,EAAOgK,WAArD,UAOZ,0BAAMhJ,MAAO,CAAEzI,MAAO,QACTzC,EAAOkU,cAMvC,6BAEA,kBAAC3B,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEzC,kBAACO,GAAA,EAAD,CAAYC,QAAQ,mBAApB,yBAEA,kBAACC,GAAA,EAAD,CACCjP,MAAOuX,EAAOuS,SACdloB,SAAU/B,EAAa,YACvBqP,WAAY,CACXxN,KAAK,WACL7H,GAAG,oBAIJ,kBAAC4N,GAAA,EAAD,CAAUzH,MAAM,eAAhB,eACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,cAAhB,cACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,WAAhB,WACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,WAAhB,cAOH,0BAAMuE,MAAO,CAAEzI,MAAO,QACUzC,EAAOywB,UAEvC,6BAEA,kBAACle,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC+C,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAEzC,kBAACO,GAAA,EAAD,CAAYC,QAAQ,gBAApB,kCAEA,kBAACC,GAAA,EAAD,CACCjP,MAAOuX,EAAO7G,MACd9O,SAAU/B,EAAa,SACvBqP,WAAY,CACXxN,KAAK,QACL7H,GAAG,iBAIJ,kBAAC4N,GAAA,EAAD,CAAUzH,MAAM,OAAhB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,OAAhB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,OAAhB,OACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAM,WAAhB,cAOH,0BAAMuE,MAAO,CAAEzI,MAAO,QACUzC,EAAOqX,OAEvC,6BAEA,kBAAC9E,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACd,kBAAC1K,EAAA,EAAD,CACoBrB,MAAOuX,EAAOwS,UACdnoB,SAAU/B,EAAa,aACvBhG,GAAG,YACH6H,KAAK,YACLD,MAAM,uCACN2N,WAAS,EACTC,QAAQ,IACR9O,UAAWF,EAAQmO,YACnBrR,OAAO,SACPqE,WAAS,KAG9B,6BAEA,kBAACc,EAAA,EAAD,CACoBnJ,KAAK,SACL0C,QAAQ,WACRC,MAAM,YACNyE,UAAWF,EAAQkC,QAJvC,yBCtaFnG,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEb6U,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAETV,KAAM,CACN8D,MAAO,SACNvP,SAAU,KAEZ+T,MAAO,CACL7H,UAAW,UAEb8H,OAAQ,CACN/K,gBAAiBgL,KAAI,UAsGV4W,OAjGf,SAA0B/sB,GAEtB,IAAM6B,EAAUjE,KAFY,EAIFqC,mBAAS,IAJP,mBAIrBgN,EAJqB,KAIdoJ,EAJc,KAaxB,OAPJ5U,qBAAU,SAAA1E,GACNP,IAAMkF,IAAN,6BAAgC1B,EAAMsW,MAAMC,OAAOlb,KAClDmE,MAAK,SAAAC,GAAG,OAAI4W,EAAS5W,EAAIC,SACzBG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QAC5B,IAIM,6BACI,kBAAC,GAAD,KACI,kBAACkC,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAE9B,kBAACC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAG3B,kBAAC8V,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SAC1D,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,MAAMsE,UAAWF,EAAQmR,MAClD,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OADpC,YAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAI,uBAAkBuC,EAAMsW,MAAMC,OAAOlb,IACzCyY,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OANlC,UAaJ,kBAACmB,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACjB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAEP,kBAACG,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MACvB,kBAAC6I,GAAA,EAAD,CACEN,OACE,kBAACO,GAAA,EAAD,CAAQ7S,aAAW,SAAS7B,UAAWF,EAAQqU,QAA/C,OASFtM,MAAOqD,EAAMrD,MACb8M,UAAS,UAAKC,KAAO1J,EAAM2J,UAAUC,OAAO,eAAnC,gBAAyD5J,EAAM6J,SAG9E,kBAAClJ,GAAA,EAAD,CAAW7L,UAAWF,EAAQoU,OACxB,yBAAKlQ,MAAO,CAACsI,OAAQ,QAAS9P,MAAO,SAAU8D,IAAG,UAAK4K,EAAM8J,WAG/D,kBAAC/I,GAAA,EAAD,KACG,kBAAC5Q,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,KAA5D,UACSgL,EAAM+J,OAGhB,kBAAC5Z,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,cAAc2E,UAAU,KACvDgL,EAAMgK,cAGX,kBAAC9I,GAAA,EAAD,CAAa+I,gBAAc,MAQrC,kBAAC9J,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,UC9HnC3P,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEjC4L,KAAM,CACFjM,MAAO,OACP2D,SAAU,IACViJ,gBAAiBrN,EAAMsN,QAAQzB,WAAW1L,OAE9CwH,OAAQ,CACJ9G,OAAQb,EAAMc,QAAQC,MAE1BwM,MAAO,CACHlN,QAAS,QAEb6U,KAAM,CACN7U,QAAS,QAEV8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAETV,KAAM,CACN8D,MAAO,SACNvP,SAAU,KAEZ+T,MAAO,CACL7H,UAAW,UAEb8H,OAAQ,CACN/K,gBAAiBgL,KAAI,UAwKV6W,OAnKf,SAAqBhtB,GAEjB,IAAM6B,EAAUjE,KAFO,EAIKqC,mBAAS,IAJd,mBAIhBiV,EAJgB,KAIRC,EAJQ,OAKOlV,oBAAS,GALhB,mBAKhBkX,EALgB,KAKPC,EALO,KAiBnB,OATJ3V,qBAAU,SAAA1E,GACNP,IAAMkF,IAAN,uCAA0C1B,EAAMsW,MAAMC,OAAOK,WAC5DpX,MAAK,SAAAC,GAAG,OAAI0V,EAAU1V,EAAIC,SAC1BG,OAAM,SAAAC,GACAA,GACCsX,GAAW,QAErB,IAGM,6BACI,kBAAC,GAAD,KAEQ,kBAACpV,EAAA,EAAD,CAAW+D,MAAO,CAAC8E,WAAY,KAGlC,kBAACC,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAE1C,kBAAC8V,GAAA,EAAD,CAAajQ,aAAW,aAAcmC,MAAO,CAAEmF,cAAe,SACvD,kBAAC1N,GAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,MAAMsE,UAAWF,EAAQmR,MAClD,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OADpC,YAKA,kBAACzO,GAAA,EAAD,CACEF,MAAM,cACNG,KAAI,oCAA+BuC,EAAMsW,MAAMC,OAAOK,UACtD9C,eAAa,OACb/R,UAAWF,EAAQmR,MAErB,kBAAC,KAAD,CAAejR,UAAWF,EAAQoK,OANlC,WAWY,kBAAC,WAAD,KAQQkL,EAEA,kBAAC/J,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACpB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACd,kBAACnQ,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,IAAI1E,MAAM,UAChE,kBAAC,KAAD,CAAawI,MAAO,CAACzI,MAAO,SADlC,IAC6C,6BAD7C,iDAMF,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,KAIjB,kBAAC,WAAD,KAE0B,IAAlB2H,EAAOtB,OAEL,kBAACxG,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACtB,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GACd,kBAACnQ,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,IAAI1E,MAAM,UAChE,kBAAC,KAAD,CAA4BwI,MAAO,CAACzI,MAAO,WADjD,IAC8D,6BAD9D,sEAMF,kBAAC8P,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,KAMrB,kBAAC,WAAD,KAGI2H,EAAOna,KAAI,SAAAkS,GAAK,OAE5B,kBAACG,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GACb,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,IAGb,kBAACH,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAEP,kBAACG,GAAA,EAAD,CAAM3L,UAAWF,EAAQ8L,MACvB,kBAAC6I,GAAA,EAAD,CACEN,OACE,kBAACO,GAAA,EAAD,CAAQ7S,aAAW,SAAS7B,UAAWF,EAAQqU,QAA/C,OASFtM,MAAOqD,EAAMrD,MACb8M,UAAS,UAAKC,KAAO1J,EAAM2J,UAAUC,OAAO,eAAnC,gBAAyD5J,EAAM6J,SAG9E,kBAAClJ,GAAA,EAAD,CAAW7L,UAAWF,EAAQoU,OACxB,yBAAKlQ,MAAO,CAACsI,OAAQ,QAAS9P,MAAO,SAAU8D,IAAG,UAAK4K,EAAM8J,WAG/D,kBAAC/I,GAAA,EAAD,KACG,kBAAC5Q,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgB2E,UAAU,KAA5D,UACSgL,EAAM+J,OAGhB,kBAAC5Z,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,cAAc2E,UAAU,KACvDgL,EAAMgK,cAGX,kBAAC9I,GAAA,EAAD,CAAa+I,gBAAc,MAQrC,kBAAC9J,GAAA,EAAD,CAAMhS,MAAI,EAACmS,IAAE,gBC/J/CmE,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAOzD,IAAM3J,GAAYC,aAAW,SAAAC,GAAK,gBAC7B6U,MAAO,CACRpU,MAAO,OACP2M,cAAe,QACblN,SAAU,GAEZgV,KAAM,CACN7U,QAAS,QAEN8N,KAAM,CACLI,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,IAEZ0E,aAAc,CACdlI,WAAW,IAERmF,YAAa,CAEZvR,SAAU,SAEjBmU,aAAc,CACXC,UAAW,QAEbrU,MAAO,CACLC,SAAU,MAzBoB,qBA2BzB,CACLN,QAAS,OACTyc,eAAgB,OACftd,MAAO,UACN,UAAW,CACXsd,eAAgB,eAhCY,4BAmClB,CACbzc,QAAS,OACPyc,eAAgB,OAChBtd,MAAO,UACL,UAAW,CACXsd,eAAgB,eAxCW,qBA2CzB,CACJvO,YAAavO,EAAMc,QAAQ,IAC3BL,MAAO,GACP8P,OAAQ,KA9CqB,KAqPlC,IAKM9H,GAAqB,CAAEsO,WlDjVH,SAAA9X,GAAC,OAAI,SAAAC,GAC9BR,IAAMkF,IAAI,iBACTlC,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KvDoDyB,cuDnDzBC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QkD2UcykB,eAE1BnlB,gBAPS,SAAA3E,GAAK,MAAK,CACjC7B,QAAS6B,EAAM7B,QACf0C,QAASb,EAAMa,QAAQtC,WAKgBuN,GAAzBnH,EA1Mf,SAAwBY,GAEvB,IAAM6B,EAAUjE,KAFa,EAMDqC,mBAAS,GANR,mBAMlBkS,EANkB,KAMZe,EANY,OAOajT,mBAAS,IAPtB,mBAOlBmS,EAPkB,KAOLe,EAPK,OASalT,mBAAS,IATtB,mBASlBgtB,EATkB,KASLC,EATK,KAyB7BzrB,qBAAU,SAAA1E,GACTiD,EAAM6U,aACN7U,EAAMukB,eACL,IAED,IAAMkI,EAASzsB,EAAM1E,QAAQmL,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAIxE9E,EAAO9B,EAAMpH,QAAQI,QAAQyN,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAGhF8M,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAI3E,OAFA5C,QAAQC,IAAIwd,GAGV,6BACS,kBAAC,GAAD,KAEC,kBAACpZ,GAAA,EAAD,CAAajQ,aAAW,cAC3B,kBAAC,IAAD,CAAMkX,GAAG,sBAAsB/Y,UAAWF,EAAQmR,MACjD,kBAAC,KAAD,CAAUjR,UAAWF,EAAQoK,OAD9B,QAKE,kBAAC,IAAD,CACE6O,GAAI,IACJhH,eAAa,OACb/R,UAAWF,EAAQ4d,aAErB,kBAAC,KAAD,CAAa1d,UAAWF,EAAQoK,OALhC,aAYD,kBAACnB,GAAA,EAAD,KACE,kBAACwF,GAAA,EAAD,CAAatN,WAAS,EAACjB,UAAWF,EAAQmO,aAER,kBAACO,GAAA,EAAD,CAAYC,QAAQ,kBAApB,gBAEA,kBAACC,GAAA,EAAD,CACIjP,MAAOyrB,EACP7pB,SAAU,SAAAjC,GAAC,OAAI+rB,EAAe/rB,EAAEI,OAAOC,QACvCkP,WAAY,CACRxN,KAAM,UACN7H,GAAG,mBAIP2E,EAAM1E,QAAQ7C,QACT,kBAACwQ,GAAA,EAAD,MAKJwjB,EAAO1xB,KAAI,SAAAS,GACR,OAAO,kBAACyN,GAAA,EAAD,CAAWzH,MAAOhG,EAAIyd,SAAUzd,EAAIyd,eAOpF,6BAEP,kBAACnO,GAAA,EAAD,KACE,yBAAK/I,UAAWF,EAAQ+Q,cAEL,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE7C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,0BACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,UACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,gBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,sBACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,QACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,oBAKA,kBAACmH,GAAA,EAAD,KACI1E,EAAMpH,QAAQH,QAGZ,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAKJ,kBAAC,WAAD,KAEmB,KAAhB2vB,GAAsC,IAAhBnrB,EAAK8R,OAC3B,kBAACnP,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACtD,kBAAC,KAAD,MAAmB,6BADnB,iDAKAgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAEH3G,QAAO,SAAAwJ,GAAG,OAAIA,EAAIsU,UAAYgU,KAC9BlyB,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIsU,SAEP,kBAACxU,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAII,QAC7B,kBAACN,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIob,aAC7B,kBAACtb,GAAA,EAAD,CAAWlH,MAAM,QAAQoH,EAAIqb,YAC7B,kBAACvb,GAAA,EAAD,CAAWlH,MAAM,QACjB,uBAAGE,KAAMkH,EAAIwC,MACZ,kBAAC,KAAD,QAKD,kBAAC1C,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIiC,YAAYiQ,OAAO,oBAO9DnD,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aApKT,SAACpF,EAAOuH,GAC3BtB,EAAQsB,IAoKoBC,oBAjKF,SAAAxH,GAC1BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IAgKoByB,iBAAkB3C,e,qBC/TlDmb,GAAa,SAACntB,GAAD,OAAW,kBAACxC,GAAA,EAAD,iBAAUwC,EAAV,CAAiBiC,UAAWmrB,QAEpDxvB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,yBACCI,QAAS,OACTmT,SAAU,QACNxT,EAAMkN,OAAOC,WAHnB,IAIEJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAG/BX,MAAM,aACJC,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,IACtBd,EAAM2M,YAAYC,GAAG,IAAyB,EAAnB5M,EAAMc,QAAQ,IAAU,CAClDV,UAAWJ,EAAMc,QAAQ,GACzB2S,aAAczT,EAAMc,QAAQ,GAC5B4S,QAAS1T,EAAMc,QAAQ,KAG3ByR,UAAW,CACPoB,MAAO,QACPnU,MAAO,OAEX0S,YAAa,CAEXvR,SAAU,QACVyM,cAAe,IAEjBnH,OAAO,CACL7F,UAAWJ,EAAMc,QAAQ,IAE3B+N,MAAO,CACH6E,QAAS1T,EAAMc,UAAY,GAEhCoU,KAAM,CACN7U,QAAS,QAEX8N,KAAM,CACJI,YAAavO,EAAMc,QAAQ,IAC5BL,MAAO,GACP8P,OAAQ,IAERhD,MAAO,CACPlN,QAAS,QAEVQ,OAAQ,CACPA,OAAQb,EAAMc,QAAQ,IAExByuB,WAAY,CACXniB,cAAe,IAEhBzF,OAAQ,CACPyF,cAAe,QA+LlB,IAKM3E,GAAqB,CAAE+mB,WvF5OH,SAAA5tB,GAAI,OAAI,SAAA1C,GACjCR,IAAM+C,KAAK,+BAAgCG,GAC1CF,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnB6CyB,cmB5CzBC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI9C,EAAS,CACtBrC,KAAMxC,EACNyC,QAASkF,EAAIC,SAASL,auFsOTN,gBAPS,SAAA3E,GAAK,MAAK,CACjCqB,YAAarB,EAAMqB,YAAY5B,OAC/BW,OAAQJ,EAAMI,UAKyB0L,GAAzBnH,EAlMf,SAAoBY,GAEnB,IAAM6B,EAAUjE,KAFU,EAKJqC,mBAAS,CAC9BkH,KAAM,KACNC,SAAU,GACVmmB,KAAM,KARmB,mBAKnB9R,EALmB,KAKdC,EALc,OAWEzb,mBAAS,IAXX,mBAWnBpF,EAXmB,KAWXyF,EAXW,KAuCzB,OAZDmB,qBAAU,SAAA1E,GACNiD,EAAMnF,QACRyF,EAAUN,EAAMnF,UAChB,CAACmF,EAAMnF,SAET4G,qBAAU,SAAA1E,GACNiD,EAAMlE,aACRkE,EAAM2B,QAAQC,KAAK,yCAClB,CAAC5B,EAAMlE,cAKP,6BACC,kBAAC,GAAD,KAEC,kBAAC+X,GAAA,EAAD,CAAajQ,aAAW,aAAa7B,UAAWF,EAAQwrB,YACnD,kBAAC,GAAD,CAAYtrB,UAAWF,EAAQmR,KAAM1V,MAAM,UAAUwd,GAAG,wBACxD,kBAAC,KAAD,CAAcjZ,QAASA,EAAQoK,OAD/B,QAKM,kBAAC,GAAD,CAAYlK,UAAWF,EAAQmR,KAAM1V,MAAM,cAAcwd,GAAG,kCAC5D,kBAAC,KAAD,CAAWjZ,QAASA,EAAQoK,OAD5B,gBAOP,kBAAC,GAAD,CAAY6O,GAAG,uCACd,kBAAChX,EAAA,EAAD,CAAQxG,MAAM,YAAYD,QAAQ,YAAlC,cAKD,6BACA,6BAGH,kBAACyN,GAAA,EAAD,CAAO/I,UAAWF,EAAQ9D,MAEzB,kBAACqP,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,GAGf,kBAACwO,GAAA,EAAD,CAAMhS,MAAI,EAACqS,GAAI,EAAGF,GAAI,IAGtB,kBAACH,GAAA,EAAD,CAAOhS,MAAI,EAACmS,GAAI,GAAIE,GAAI,GAGpB,kBAACrQ,EAAA,EAAD,CAAYC,QAAQ,MAApB,6BAIS,0BAAMoF,YAAU,EAACC,SAnE1B,SAAAvB,GACpBA,EAAEC,iBAEF,IAAM6e,EAAK,IAAIlE,SACfkE,EAAG9D,OAAO,OAAQV,EAAItU,MACtB8Y,EAAG9D,OAAO,WAAYV,EAAIrU,UAC1B6Y,EAAG9D,OAAO,OAAQV,EAAI8R,MAEtBvtB,EAAMstB,WAAWrN,KA8DoB,yBAAKle,UAAWF,EAAQlD,QACzC,kBAACyO,GAAA,EAAD,CAAMC,WAAS,EAACzO,QAAS,EAAGP,WAAW,YAErC,kBAAC+O,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,GAKtB,2BAAOnK,SAAU,SAAAjC,GAAC,OAAIua,EAAO,2BAAID,GAAL,IAAUtU,KAAMhG,EAAEI,OAAOgb,MAAM,GAAInV,SAAUjG,EAAEI,OAAOgb,MAAM,GAAGrZ,SAC3FnB,UAAWF,EAAQwJ,MAAOhQ,GAAG,OAAO6H,KAAK,OAAOvI,KAAK,SAChD,2BAAO6V,QAAQ,QACb,kBAAC9M,GAAA,EAAD,CAAYpG,MAAM,UAAUsG,aAAW,iBAAiB3B,UAAU,QAChE,kBAAC,KAAD,SAMF,kBAACmL,GAAA,EAAD,CAAMhS,MAAI,EAACmS,GAAI,IACb,kBAAC1K,EAAA,EAAD,CACArB,MAAOia,EAAIrU,SACX/L,GAAG,uBACH4H,MAAM,sBACNI,WAAW,uCACXL,WAAS,EACPO,WAAY,CACc6V,UAAU,GAEdnJ,gBAAiB,CACfC,QAAQ,OAgBjC,0BAAMnK,MAAO,CAAEzI,MAAO,QACMzC,EAAOsM,OAM5C,kBAACmJ,GAAA,EAAD,CAAavO,UAAWF,EAAQmO,aAC5B,kBAACO,GAAA,EAAD,CAAYlV,GAAG,mCAAf,8BACA,kBAACoV,GAAA,EAAD,CACCrN,SAAU,SAAAjC,GAAC,OAAIua,EAAO,2BAAID,GAAL,IAAU8R,KAAMpsB,EAAEI,OAAOC,UAC9CA,MAAOia,EAAI8R,KACVC,QAAQ,kCACRnyB,GAAG,6BAEH,kBAAC4N,GAAA,EAAD,CAAUzH,MAAM,IACd,qCAEF,kBAACyH,GAAA,EAAD,CAAUzH,MAAO,WAAjB,YACA,kBAACyH,GAAA,EAAD,CAAUzH,MAAO,OAAjB,2BAGJ,0BAAMuE,MAAO,CAAEzI,MAAO,QACazC,EAAO0yB,MAEd,6BAEjB,qFAEC,kBAACzpB,EAAA,EAAD,CACOnJ,KAAK,SACLqI,WAAS,EACT3F,QAAQ,YACRC,MAAM,UACNyE,UAAWF,EAAQkC,QAL1B,YAgBd,kBAACqJ,GAAA,EAAD,CAAMhS,MAAI,EAACqS,GAAI,EAAGF,GAAI,WCtNlClG,GAAa,SAAArH,GACf,OAAO,kBAACsH,GAAA,EAAD,eAAOC,UAAU,MAASvH,KAI/B0R,GAAkBzL,cAAW,SAAAnI,GAAK,MAAK,CAC3C6T,KAAM,CACJxG,gBAAiB,mBACjB7N,MAAOQ,EAAMsN,QAAQzO,OAAOiV,OAE9BC,KAAM,CACJ3F,SAAU,OANUjG,CAQpBxB,MAGEqN,GAAajU,aAAW,SAAAC,GAAK,MAAK,CACtCC,KAAM,CACJgU,WAAY,EACZ5S,WAAYrB,EAAMc,QAAQ,UAM9B,SAASoT,GAAuBhS,GAC9B,IAAM6B,EAAUiQ,KACVhU,EAAQmU,eACNC,EAA2ClS,EAA3CkS,MAAOC,EAAoCnS,EAApCmS,KAAMC,EAA8BpS,EAA9BoS,YAAaC,EAAiBrS,EAAjBqS,aAkBlC,OACE,yBAAKtQ,UAAWF,EAAQ9D,MACtB,kBAAC2F,GAAA,EAAD,CACEtB,QAnB6B,SAAA6K,GACjCoF,EAAapF,EAAO,IAmBhBqF,SAAmB,IAATH,EACVvO,aAAW,cAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAmB,kBAAC,KAAD,OAElD,kBAAC7D,GAAA,EAAD,CAAYtB,QArBc,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAoBmBG,SAAmB,IAATH,EAAYvO,aAAW,iBACtD,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAyB,kBAAC,KAAD,OAExD,kBAAC7D,GAAA,EAAD,CACEtB,QArBwB,SAAA6K,GAC5BoF,EAAapF,EAAOkF,EAAO,IAqBvBG,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAwB,kBAAC,KAAD,OAEvD,kBAAC7D,GAAA,EAAD,CACEtB,QAxB4B,SAAA6K,GAChCoF,EAAapF,EAAOsF,KAAKE,IAAI,EAAGF,KAAKC,KAAKN,EAAQE,GAAe,KAwB7DE,SAAUH,GAAQI,KAAKC,KAAKN,EAAQE,GAAe,EACnDxO,aAAW,aAEU,QAApB9F,EAAMyJ,UAAsB,kBAAC,KAAD,MAAoB,kBAAC,KAAD,QAMzD,IAAM3J,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAK,2BACED,EAAMkN,OAAOC,WADhB,IAEAJ,WAAY/M,EAAMc,QAAQ,GAC1BsM,cAAepN,EAAMc,QAAQ,KAEhC+T,MAAO,CACRpU,MAAO,OACP2M,cAAe,QACblN,SAAU,GAEZ+U,aAAc,CACdlI,WAAW,IAEZmF,YAAa,CAERvR,SAAU,SAEjBmU,aAAc,CACXC,UAAW,QAEbrU,MAAO,CACLC,SAAU,KAEZ4uB,WAAY,CACXniB,cAAe,IAEf8H,KAAM,CACJ7U,QAAS,QAEX8N,KAAM,CACJI,YAAavO,EAAMc,QAAQ,IAC5BL,MAAO,GACP8P,OAAQ,QAIN8e,GAAa,SAACntB,GAAD,OAAW,kBAACxC,GAAA,EAAD,iBAAUwC,EAAV,CAAiBiC,UAAWmrB,QAmQ1D,IAIM7mB,GAAqB,CAAEgR,WxFvYH,SAAAxa,GAAC,OAAI,SAAAC,GAC9BA,EAASoJ,IACT5J,IAAMkF,IAAI,sBACTlC,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnB6DwB,amB5DxBC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAIA,OwFgY0B2tB,gBxFhXV,SAAA1wB,GAC9B,MAAO,CAAEpC,KnBoCuB,sB2G2UyB+yB,YxF3W/B,SAAAryB,GAAE,OAAI,SAAA2B,GAChCR,IAAMqrB,OAAN,8CAAoDxsB,IACnDmE,MAAK,SAAAC,GAAG,OAAIzC,EAAS,CACrBrC,KnB8BgC,qBmB7BhCC,QAAS6E,EAAIC,UAEbG,OAAM,SAAAC,GAAG,OAAI0P,QAAQC,IAAI3P,QwFqW4C6tB,iBxFlWvC,SAAA5wB,GAC/B,MAAO,CAAGpC,KnBwB6B,8B2G2UzByE,gBANS,SAAA3E,GAAK,MAAK,CACjCqB,YAAarB,EAAMqB,eAKoByK,GAAzBnH,EAvQf,SAAyBY,GACxB,IAAM6B,EAAUjE,KADc,EAINqC,mBAAS,GAJH,mBAIvBkS,EAJuB,KAIjBe,EAJiB,OAKWjT,mBAAS,GALpB,mBAKpBmS,EALoB,KAKPe,EALO,OAOClT,oBAAS,GAPV,mBAOpB/F,EAPoB,KAOZ0zB,EAPY,OAQP3tB,mBAAS,MARF,mBAQpB5E,EARoB,KAQhBojB,EARgB,OAWYxe,oBAAS,GAXrB,mBAWpBwiB,EAXoB,KAWPC,EAXO,OAYSziB,oBAAS,GAZlB,mBAYpBiqB,EAZoB,KAYRC,EAZQ,KA+BtBxH,EAAyB,SAAA5lB,GACxB2lB,GAAgB,IAiCzBjhB,qBAAU,SAAA1E,GACNiD,EAAMlE,YAAY5B,QACpB0zB,GAAU,GAEXrQ,YAAW,WAAavd,EAAMytB,oBAAoB,OAEjD,CAACztB,EAAMlE,YAAY5B,SAErBuH,qBAAU,SAAA1E,GACTiD,EAAMuX,eACL,CAACvX,EAAMlE,YAAY/C,UAErB0I,qBAAU,SAAA1E,GACNiD,EAAMlE,YAAY/C,SACpBoxB,GAAc,GAEf5M,YAAY,WAAYvd,EAAM2tB,qBAAsB,OAEnD,CAAC3tB,EAAMlE,YAAY/C,UAIpB,IAAM+I,EAAO9B,EAAMlE,YAAY9C,QAAQyN,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,WAAaD,EAAEC,YAAc,EAAI,KAGpF8M,EAAYtB,EAAcG,KAAKoB,IAAIvB,EAAatQ,EAAK8R,OAASzB,EAAOC,GAI5E,OACC,6BACE,kBAAC,GAAD,KAEA,kBAACvL,GAAA,EAAD,CACe1B,KAAMsd,EACNtZ,oBAAqB9B,GACrB+B,aAAW,EACXtC,QAAS6b,EACT3b,kBAAgB,2BAChBqC,mBAAiB,kCAEb,kBAACpC,GAAA,EAAD,CAAa5L,GAAG,4BACX,uBAGJ,kBAACiO,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CAAmBlO,GAAG,kCAAtB,6CAKA,kBAACmO,GAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CAAQ1B,QA7DZ,SAAArF,GACnBiD,EAAM0tB,YAAYryB,GAElBqnB,GAAgB,GAChByH,GAAc,IAyDuC9sB,QAAQ,WAAWC,MAAM,WAAvD,OAGA,kBAACwG,EAAA,EAAD,CAAQ1B,QAASugB,EAAwBtlB,QAAQ,WAAWC,MAAM,aAAlE,QAMZ,kBAAC,GAAD,CAAqB6H,KAAMjL,EAAQ4M,QA3FvB,SAACmG,EAAOC,GACL,cAAXA,IAIJ0gB,GAAU,GACV5tB,EAAMytB,oBAqFmDpwB,QAAQ,UAAUiP,QAAQ,uBACnF,kBAAC,GAAD,CAAqBnH,KAAM+kB,EAAYpjB,QAjFpB,SAACmG,EAAOC,GACZ,cAAXA,IAIJid,GAAc,GACdnqB,EAAM2tB,qBA2E8DtwB,QAAQ,UAAUiP,QAAQ,yBAG1G,kBAACuH,GAAA,EAAD,CAAajQ,aAAW,aAAa7B,UAAWF,EAAQwrB,YACjD,kBAAC,GAAD,CAAYtrB,UAAWF,EAAQmR,KAAM1V,MAAM,UAAUwd,GAAG,wBACxD,kBAAC,KAAD,CAAcjZ,QAASA,EAAQoK,OAD/B,QAKM,kBAAC,GAAD,CAAYlK,UAAWF,EAAQmR,KAAM1V,MAAM,UAAUwd,GAAG,kCACxD,kBAAC,KAAD,CAAWjZ,QAASA,EAAQoK,OAD5B,eAKA,kBAAC,GAAD,CAAYlK,UAAWF,EAAQmR,KAAM1V,MAAM,UAAUwd,GAAG,uCACxD,kBAAC,KAAD,CAAajZ,QAASA,EAAQoK,OAD9B,SAOV,kBAACnB,GAAA,EAAD,CAAO/I,UAAWF,EAAQ8Q,OACT,yBAAK5Q,UAAWF,EAAQ+Q,cAEpB,kBAACtO,GAAA,EAAD,CAAOvC,UAAWF,EAAQrD,MAAOoF,aAAW,2BAE5C,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,kBACA,kBAAC,GAAD,CAAiBjH,MAAM,QAAvB,cACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,QACA,kBAAC,GAAD,CAAiBA,MAAM,QAAvB,aAKA,kBAACmH,GAAA,EAAD,KACI1E,EAAMlE,YAAYrD,QAGhB,kBAAC+L,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WACpD,kBAACnK,EAAA,EAAD,CAAkB3G,MAAM,cAAc,6BACtC,+CAKJ,kBAAC,WAAD,KAEmB,IAAhBwE,EAAK8R,OACL,kBAACnP,GAAA,EAAD,CAAWyP,QAAS,EAAGC,QAAS,EAAGpO,MAAO,CAACqI,UAAW,WAAtD,0BAIAgE,EAAc,EACXtQ,EAAKsS,MAAMjC,EAAOC,EAAaD,EAAOC,EAAcA,GACpDtQ,GAGH/G,KAAI,SAAA4J,GAAG,OACN,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWxC,UAAU,KAAK4C,MAAM,OAC7BF,EAAIyC,UAEP,kBAAC3C,GAAA,EAAD,CAAWlH,MAAM,QAEH,YAAboH,EAAI4oB,KAEJ,WAEA,yBAGD,kBAAC9oB,GAAA,EAAD,CAAWlH,MAAM,QAAQoZ,KAAOhS,EAAIiC,YAAYiQ,OAAO,eACvD,kBAACpS,GAAA,EAAD,CAAWlH,MAAM,QAEjB,kBAAC0hB,GAAA,EAAD,CAASrV,MAAM,SAASsV,UAAU,OAC3B,kBAACxb,GAAA,EAAD,CAAYtB,QAAS,SAAArF,GAAC,OArLhD,SAAA1B,GACpBojB,EAAMpjB,GAENqnB,GAAgB,GAkLwDkH,CAAajlB,EAAItJ,KAAKuI,aAAW,OAAOtG,MAAM,aACvE,kBAAC,KAAD,cAYfoW,EAAY,GACX,kBAAClP,GAAA,EAAD,CAAUuB,MAAO,CAAEsI,OAAQ,GAAKqF,IAC9B,kBAACjP,GAAA,EAAD,CAAW0P,QAAS,MAI1B,kBAACE,GAAA,EAAD,KACE,kBAAC7P,GAAA,EAAD,KAGE,kBAAC8P,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEtR,MAAO,MAAOzB,OAAQ,IACxD2S,QAAS,EACTjC,MAAOpQ,EAAK8R,OACZxB,YAAaA,EACbD,KAAMA,EACN6B,YAAa,CACXtD,WAAY,CAAE,aAAc,iBAC5BuD,QAAQ,GAEV5B,aA/NX,SAACpF,EAAOuH,GAC/BtB,EAAQsB,IA+N0BC,oBA5NJ,SAAAxH,GAC9BkG,EAAeuB,SAASzH,EAAM1L,OAAOC,MAAO,KAC5C0R,EAAQ,IA2N0ByB,iBAAkB3C,eC/WzC5S,gBAJS,SAAA3E,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,QAGD4E,EA7BM,SAAC,GAAD,IAAc4G,EAAd,EAAG/D,UAAsBzH,EAAzB,EAAyBA,KAASqzB,EAAlC,4CACjB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAA9tB,GAAK,OACgB,IAAzBxF,EAAKjC,gBAIG,kBAACyN,EAAchG,GAKf,kBAAC,IAAD,CAAU8a,GAAG,aC6DjC,GAAI7d,aAAa8wB,SAAU,CAEzB,IAAMxxB,GAAQU,aAAa8wB,SAC3BzxB,EAAaC,IAEb,IAAMM,GAAU+C,IAAWrD,IAE3BN,EAAMe,SAASJ,EAAeC,KAI9B,IAAMmxB,GAActwB,KAAKuwB,MAAQ,IAC7BpxB,GAAQqxB,IAAMF,KAEhB/xB,EAAMe,SAASF,KAEf6S,OAAOC,SAASnS,KAAO,MAsFZ0wB,OAlFf,WACE,OACE,kBAAC,IAAD,CAAUlyB,MAAOA,GAEf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmyB,OAAK,EAACC,KAAK,IAAIpsB,UAAWqsB,KAGjC,kBAAC,IAAD,KAEE,kBAAC,GAAD,CAAcF,OAAK,EAACC,KAAK,MAAMpsB,UAAW2I,KAC1C,kBAAC,GAAD,CAAcwjB,OAAK,EAACC,KAAK,uBAAuBpsB,UAAW+K,KAC3D,kBAAC,GAAD,CAAcohB,OAAK,EAACC,KAAK,sCAAsCpsB,UAAWwM,KAC1E,kBAAC,GAAD,CAAc2f,OAAK,EAACC,KAAK,mCAAmCpsB,UAAWssB,KACvE,kBAAC,GAAD,CAAcH,OAAK,EAACC,KAAK,wCAAwCpsB,UAAW2S,KAC5E,kBAAC,GAAD,CAAcwZ,OAAK,EAACC,KAAK,aAAapsB,UAAWgT,KACjD,kBAAC,GAAD,CAAcmZ,OAAK,EAACC,KAAK,iBAAiBpsB,UAAWmU,KACrD,kBAAC,GAAD,CAAcgY,OAAK,EAACC,KAAK,6BAA6BpsB,UAAWusB,KACjE,kBAAC,GAAD,CAAcJ,OAAK,EAACC,KAAK,iBAAiBpsB,UAAWwsB,KACrD,kBAAC,GAAD,CAAcL,OAAK,EAACC,KAAK,+BAA+BpsB,UAAWysB,KAGnE,kBAAC,GAAD,CAAcN,OAAK,EAACC,KAAK,OAAOpsB,UAAW0sB,KAC3C,kBAAC,GAAD,CAAcP,OAAK,EAACC,KAAK,wBAAwBpsB,UAAW4Y,KAC5D,kBAAC,GAAD,CAAcuT,OAAK,EAACC,KAAK,0CAA0CpsB,UAAW2sB,KAC9E,kBAAC,GAAD,CAAcR,OAAK,EAACC,KAAK,qBAAqBpsB,UAAW4sB,KACzD,kBAAC,GAAD,CAAcT,OAAK,EAACC,KAAK,gBAAgBpsB,UAAW8a,KACpD,kBAAC,GAAD,CAAcqR,OAAK,EAACC,KAAK,oBAAoBpsB,UAAW+a,KACxD,kBAAC,GAAD,CAAcoR,OAAK,EAACC,KAAK,uCAAuCpsB,UAAWgb,KAC3E,kBAAC,GAAD,CAAcmR,OAAK,EAACC,KAAK,kBAAkBpsB,UAAW6sB,KACtD,kBAAC,GAAD,CAAcV,OAAK,EAACC,KAAK,8BAA8BpsB,UAAW8sB,KAClE,kBAAC,GAAD,CAAcX,OAAK,EAACC,KAAK,6CAA6CpsB,UAAW+sB,KACjF,kBAAC,GAAD,CAAcZ,OAAK,EAACC,KAAK,sBAAsBpsB,UAAWgtB,KAC1D,kBAAC,GAAD,CAAcb,OAAK,EAACC,KAAK,mBAAmBpsB,UAAWitB,KAGvD,kBAAC,GAAD,CAAcd,OAAK,EAACC,KAAK,KAAKpsB,UAAWigB,KACzC,kBAAC,GAAD,CAAckM,OAAK,EAACC,KAAK,mBAAmBpsB,UAAWktB,KACvD,kBAAC,GAAD,CAAcf,OAAK,EAACC,KAAK,kBAAkBpsB,UAAWulB,KACtD,kBAAC,GAAD,CAAc4G,OAAK,EAACC,KAAK,8BAA8BpsB,UAAWmtB,KAClE,kBAAC,GAAD,CAAchB,OAAK,EAACC,KAAK,+BAA+BpsB,UAAWotB,KACnE,kBAAC,GAAD,CAAcjB,OAAK,EAACC,KAAK,8CAA8CpsB,UAAWqtB,KAClF,kBAAC,GAAD,CAAclB,OAAK,EAACC,KAAK,sBAAsBpsB,UAAWstB,KAC1D,kBAAC,GAAD,CAAcnB,OAAK,EAACC,KAAK,yBAAyBpsB,UAAWutB,KAC7D,kBAAC,GAAD,CAAcpB,OAAK,EAACC,KAAK,wBAAwBpsB,UAAWwtB,KAC5D,kBAAC,GAAD,CAAcrB,OAAK,EAACC,KAAK,kBAAkBpsB,UAAWsmB,KACtD,kBAAC,GAAD,CAAc6F,OAAK,EAACC,KAAK,qCAAqCpsB,UAAWumB,KACzE,kBAAC,GAAD,CAAc4F,OAAK,EAACC,KAAK,4BAA4BpsB,UAAWytB,KAChE,kBAAC,GAAD,CAActB,OAAK,EAACC,KAAK,mCAAmCpsB,UAAW0tB,KACvE,kBAAC,GAAD,CAAcvB,OAAK,EAACC,KAAK,mDAAmDpsB,UAAWknB,KAGvF,kBAAC,GAAD,CAAciF,OAAK,EAACC,KAAK,MAAMpsB,UAAWsnB,KAC1C,kBAAC,GAAD,CAAc6E,OAAK,EAACC,KAAK,oBAAoBpsB,UAAW2tB,KACxD,kBAAC,GAAD,CAAcxB,OAAK,EAACC,KAAK,6BAA6BpsB,UAAW4tB,KACjE,kBAAC,GAAD,CAAczB,OAAK,EAACC,KAAK,oCAAoCpsB,UAAW6tB,KACxE,kBAAC,GAAD,CAAc1B,OAAK,EAACC,KAAK,uBAAuBpsB,UAAW8tB,KAC3D,kBAAC,GAAD,CAAc3B,OAAK,EAACC,KAAK,iCAAiCpsB,UAAW+tB,KACrE,kBAAC,GAAD,CAAc5B,OAAK,EAACC,KAAK,wCAAwCpsB,UAAWguB,KAC5E,kBAAC,GAAD,CAAc7B,OAAK,EAACC,KAAK,mCAAmCpsB,UAAWiuB,KACvE,kBAAC,GAAD,CAAc9B,OAAK,EAACC,KAAK,+CAA+CpsB,UAAWkuB,KACnF,kBAAC,GAAD,CAAc/B,OAAK,EAACC,KAAK,0BAA0BpsB,UAAWmuB,KAC9D,kBAAC,GAAD,CAAchC,OAAK,EAACC,KAAK,sBAAsBpsB,UAAW2oB,KAC1D,kBAAC,GAAD,CAAcwD,OAAK,EAACC,KAAK,oBAAoBpsB,UAAWouB,KACxD,kBAAC,GAAD,CAAcjC,OAAK,EAACC,KAAK,qCAAqCpsB,UAAWquB,KACzE,kBAAC,GAAD,CAAclC,OAAK,EAACC,KAAK,4CAA4CpsB,UAAWsuB,KAChF,kBAAC,GAAD,CAAcnC,OAAK,EAACC,KAAK,mBAAmBpsB,UAAW8qB,KACvD,kBAAC,GAAD,CAAcqB,OAAK,EAACC,KAAK,sCAAsCpsB,UAAW+qB,KAC1E,kBAAC,GAAD,CAAcoB,OAAK,EAACC,KAAK,0CAA0CpsB,UAAWuuB,KAC9E,kBAAC,GAAD,CAAcpC,OAAK,EAACC,KAAK,iCAAiCpsB,UAAWwuB,KACrE,kBAAC,GAAD,CAAcrC,OAAK,EAACC,KAAK,sCAAsCpsB,UAAWyuB,SC/JhEhoB,QACW,cAA7BiH,OAAOC,SAAS+gB,UAEe,UAA7BhhB,OAAOC,SAAS+gB,UAEhBhhB,OAAOC,SAAS+gB,SAASra,MACvB,2DCZNsa,IAAS9C,OAAO,kBAAC,GAAD,MAAS+C,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzxB,MAAK,SAAA0xB,GACjCA,EAAaC,kB","file":"static/js/main.5fb490d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/640x640_12988565.689b1515.png\";","module.exports = __webpack_public_path__ + \"static/media/images.24acc2dd.png\";","module.exports = __webpack_public_path__ + \"static/media/reports.400b10e1.png\";","module.exports = __webpack_public_path__ + \"static/media/indexhead.4ccd5ec6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/indexnewpic.f0f35d57.png\";","module.exports = __webpack_public_path__ + \"static/media/download.890b8cbc.png\";","module.exports = __webpack_public_path__ + \"static/media/request.806d0b8f.png\";","module.exports = __webpack_public_path__ + \"static/media/files-sharing.8d2c65be.jpg\";","//Login Reducers Type\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\n//LOST and Found Reducers\n// Lost Report Reducers\nexport const ADD_LOST_REPORT = 'ADD_LOST_REPORT';\nexport const GET_LOST_REPORTS = 'GET_LOST_REPORT';\nexport const REPORT_LOADING = 'REPORT_LOADING';\nexport const SET_REPORT_TO_FOUND = 'SET_REPORT_TO_FOUND';\nexport const SET_REPORT_TO_CLAIMED = 'SET_REPORT_TO_CLAIMED';\n// Found Report Reducers\nexport const GET_FOUND_REPORTS = 'GET_FOUND_REPORTS';\nexport const ADD_FOUND_REPORT = 'ADD_FOUND_REPORT';\nexport const DELETE_FOUND_REPORT = 'DELETE_FOUND_REPORT ';\n\n// OrgDesc Reducers \nexport const GET_ORGDESC = 'GET_ORGDESC';\nexport const ADD_ORGDESC = 'ADD_ORGDESC';\nexport const UPDATE_ORGDESC = 'UPDATE_ORGDESC';\nexport const DELETE_ORGDESC = 'DELETE_ORGDESC';\nexport const RECORD_LOADING = 'RECORD_LOADING';\n\n// OrgAccnts Reducers\nexport const GET_ORG_ACCNTS = 'GET_ORG_ACCNTS';\nexport const REGISTER_ORG_ACCNT = 'REGISTER_ORG_ACCNT';\nexport const ACCNTS_LOADING = 'ACCNTS_LOADING';\n\n//Id Replacement reducers\nexport const GET_ID_REPLACEMENTS = 'GET_ID_REPLACEMENTS';\nexport const ADD_ID_REPLACEMENT = 'ADD_ID_REPLACEMENT';\nexport const ID_FETCHED_BY_ID = 'ID_FETCHED_BY_ID';\nexport const UPDATE_ID_REPLACEMENT = 'UPDATE_ID_REPLACEMENT';\nexport const ID_REPLACEMENT_LOADING = 'ID_REPLACEMENT_LOADING';\n\n//Request Activity Reducers\n// Org Part \nexport const GET_ORG_FEEDS = 'GET_ORG_FEEDS';\nexport const GET_REQUEST_ACTIVITIES = 'GET_REQUEST_ACTIVITIES';\nexport const SUBMIT_REQUEST_ACTIVITIES = 'SUBMIT_REQUEST_ACTIVITIES';\nexport const REQUEST_ACTIVITIES_LOADING = 'REQUEST_ACTIVITIES_LOADING';\n// SOA Head Part \nexport const COUNT_REQUEST_ACTIVITIES_NOTIF = 'COUNT_REQUEST_ACTIVITIES_NOTIF';\nexport const GET_REQUEST_ACTIVITIES_HEAD = 'GET_REQUEST_ACTIVITIES_HEAD';\nexport const UPDATE_COUNT_NOTIF = 'UPDATE_COUNT_NOTIF';\nexport const SET_APPROVED_REQUEST_ACTIVITIES_HEAD = 'SET_APPROVED_REQUEST_ACTIVITIES_HEAD';\nexport const SET_DECLINED_REQUEST_ACTIVITIES_HEAD = 'SET_DECLINED_REQUEST_ACTIVITIES_HEAD';\n//SOA Admin Reduceres\nexport const SET_APPROVED_REQUEST_ACTIVITIES_ADMIN = 'SET_APPROVED_REQUEST_ACTIVITIES_ADMIN';\nexport const SET_DECLINED_REQUEST_ACTIVITIES_ADMIN = 'SET_DECLINED_REQUEST_ACTIVITIES_ADMIN';\n\n//Announcements reducers\nexport const ADD_ANNOUNCEMENT_ADMIN = 'ADD_ANNOUNCEMENT_ADMIN';\nexport const ADD_ANNOUNCEMENT_ADMIN_FALSE = 'ADD_ANNOUNCEMENT_ADMIN_FALSE';\nexport const UPDATE_ANNOUNCEMENT_ADMIN = 'UPDATE_ANNOUNCEMENT_ADMIN';\nexport const UPDATE_ANNOUNCEMENT_ADMIN_FALSE = 'UPDATE_ANNOUNCEMENT_ADMIN_FALSE';\nexport const DELETE_ANNOUNCEMENT_ADMIN = 'DELETE_ANNOUNCEMENT_ADMIN';\nexport const DELETE_ANNOUNCEMENT_ADMIN_FALSE = 'DELETE_ANNOUNCEMENT_ADMIN_FALSE';\n\n//ASsessments Redudcers\nexport const ADD_ASSESSMENT_ACTIVITY = 'ADD_ASSESSMENT_ACTIVITY';\nexport const ADD_ASSESSMENT_ACTIVITY_FALSE = 'ADD_ASSESSMENT_ACTIVITY_FALSE';\nexport const UPDATE_ASSESSMENT_ACTIVITY = 'UPDATE_ASSESSMENT_ACTIVITY';\nexport const UPDATE_ASSESSMENT_ACTIVITY_FALSE = 'UPDATE_ASSESSMENT_ACTIVITY_FALSE';\nexport const SET_ASSESSMENT_APPROVED = 'SET_ASSESSMENT_APPROVED';\nexport const SET_ASSESSMENT_APPROVED_FALSE = 'SET_ASSESSMENT_APPROVED_FALSE';\nexport const SET_ASSESSMENT_DECLINED = 'SET_ASSESSMENT_DECLINED';\nexport const SET_ASSESSMENT_DECLINED_FALSE = 'SET_ASSESSMENT_DECLINED_FALSE';\nexport const SET_ASSESSMENT_PENDING = 'SET_ASSESSMENT_PENDING';\nexport const SET_ASSESSMENT_PENDING_FALSE = 'SET_ASSESSMENT_PENDING_FALSE';\nexport const GET_ASSESSMENT_ACTIVITIES = 'GET_ASSESSMENT_ACTIVITIES';\nexport const ASSESSMENT_LOADING = 'ASSESSMENT_LOADING';\n\n// Registered Students\nexport const SET_STUDENT_REGISTERED_ORG = 'SET_STUDENT_REGISTERED_ORG';\nexport const SET_STUDENT_REGISTERED_ORG_FALSE = 'SET_STUDENT_REGISTERED_ORG_FALSE';\nexport const SET_STUDENT_FULL_REQ = 'SET_STUDENT_FULL_REQ';\n\nexport const SET_STUDENT_REGISTERED_HEAD = 'SET_STUDENT_REGISTERED_HEAD';\nexport const SET_STUDENT_REGISTERED_HEAD_FALSE = 'SET_STUDENT_REGISTERED_HEAD_FALSE';\nexport const SET_STUDENT_INACTIVE_HEAD = 'SET_STUDENT_INACTIVE_HEAD';\nexport const SET_STUDENT_INACTIVE_HEAD_FALSE = 'SET_STUDENT_INACTIVE_HEAD_FALSE';\n\n//send report\nexport const SEND_REPORT = 'SEND_REPORT';\nexport const SEND_REPORT_FALSE = 'SEND_REPORT_FALSE';\nexport const GET_REPORTS = 'GET_REPORTS';\nexport const ARCHIVED_LOADING = 'ARCHIVED_LOADING';\n\n//File Sharing\nexport const SHARE_FILES = 'SHARE_FILES';\nexport const SHARE_FILES_FALSE = 'SHARE_FILES_FALSE';\nexport const DELETE_SHARE_FILES = 'DELETE_SHARE_FILES';\nexport const DELETE_SHARE_FILES_FALSE = 'DELETE_SHARE_FILES_FALSE';\nexport const GET_SHARED_FILES_STUDENTS = 'GET_SHARED_FILES_STUDENTS';\nexport const GET_SHARED_FILES_ORG = 'GET_SHARED_FILES_ORG';\nexport const GET_SHARED = 'GET_SHARED';\nexport const SHARED_FILES_LOADING = 'SHARED_FILES_LOADING';\nexport const SHARED_FILES_LOADING_STUDENT = 'SHARED_FILES_LOADING_STUDENT';\nexport const SHARED_FILES_LOADING_ORG = 'SHARED_FILES_LOADING_ORG';\n","import {\n    SET_CURRENT_USER,\n    USER_LOADING,\n} from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\n//InitialState\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\n\n//Reducers\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        //Authentication Reducer\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        default:\n            return state;\n\n    }\n}","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {\n    ADD_LOST_REPORT,\n    GET_LOST_REPORTS,\n    REPORT_LOADING,\n    SET_REPORT_TO_FOUND ,\n    SET_REPORT_TO_CLAIMED,\n    GET_FOUND_REPORTS,\n    ADD_FOUND_REPORT,\n    DELETE_FOUND_REPORT \n} from '../actions/types';\n\n// Initial State \nconst initialState = {\n    lost: false,\n    found: false,\n    reports: [],\n    loading: false\n}\n\nexport default function (state = initialState, action){\n    switch(action.type){\n        // Reducer for adding a lost item report \n        case ADD_LOST_REPORT:\n            return {\n                ...state,\n                lost: true,\n                reports: [action.payload, ...state.reports]\n            };\n        // Reducers for making the data set to found or claimed\n        case SET_REPORT_TO_FOUND:\n            return{\n                ...state,\n                reports: state.reports.map((report,i) => i === 1 ? \n                    {\n                        ...report, \n                    status: action.payload,\n                      } \n                    : report)\n            };\n        case SET_REPORT_TO_CLAIMED:\n            return{\n                ...state,\n                reports: state.reports.map((report,i) => i === 1 ? \n                    {\n                        ...report, \n                        status: action.payload,\n                    } \n                    : report)\n            };\n        // Reducer for getting all the data reports \n        case GET_LOST_REPORTS:\n            return {\n                ...state,\n                reports: action.payload,\n                loading: false,\n            };\n\n        //Case Statements for Found Reports\n        case GET_FOUND_REPORTS:\n            return {\n                ...state,\n                reports: action.payload,\n                loading: false,\n            };\n        case ADD_FOUND_REPORT: \n            return  {\n                ...state,\n                found: true,\n                reports: [action.payload, ...state.reports]\n            };\n        case DELETE_FOUND_REPORT:\n            return {\n                ...state,\n                reports: state.reports\n                            .filter(item => item.id !== action.payload)\n            }\n        case REPORT_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default: \n            return state;\n    }\n}","import {\n\tGET_ORGDESC,\n\tADD_ORGDESC,\n\tUPDATE_ORGDESC,\n\tDELETE_ORGDESC,\n\tRECORD_LOADING,\n} from '../actions/types';\n\n\nconst initialState = { \n\tadded: false,\n\tupdated: false,\n\tdeleted: false,\n\trecords:[],\n\tloading: false\n};\n\nexport default function (state = initialState, action){\n\tswitch(action.type){\n\t\tcase GET_ORGDESC:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecords: action.payload,\n\t\t\t\tloading:false\n\t\t\t};\n\t\tcase ADD_ORGDESC:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tadded: true,\n\t\t\t\trecords: [action.payload, ...state.records]\n\t\t\t};\n\t\tcase UPDATE_ORGDESC:\n\t\t\treturn { \n\t\t\t\t...state,\n\t\t\t\tupdated:true,\n\t\t\t\trecords: state.records.map((record, i) => i === 1 ?\n\t\t\t\t{\n\n\t\t\t\t\trecord: action.payload,\n\n\t\t\t\t}\n\t\t\t\t: record\n\t\t\t\t\t)\n\t\t\t\t\n\t\t\t};\n\t\tcase DELETE_ORGDESC:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecords: state.reports\n\t\t\t\t\t\t\t.filter(record => record.id !== action.payload)\t\n\t\t\t}\n\t\tcase RECORD_LOADING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t};\n\t\tdefault: \n\t\t\treturn state;\n\t};\n};","import {\n\tGET_ORG_ACCNTS,\n\tREGISTER_ORG_ACCNT,\n\t// REGISTER_ACCNT,\n\tACCNTS_LOADING\n} from '../actions/types';\n\nconst initialState = {\n\tregistered: false,\n\taccounts: [],\n\tloading: false\n};\n\nexport default function(state = initialState, action){\n\tswitch(action.type) {\t\n\t\t// Reducer for getting all the accounts registered\n\t\tcase GET_ORG_ACCNTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\taccounts: action.payload,\n\t\t\t\tloading: false\n\t\t\t};\n\t\t//Reducer for Adding an account to a database\n\t\t//This for the whole process of registering an account\n\t\tcase REGISTER_ORG_ACCNT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tregistered: true,\n\t\t\t\taccounts: [action.payload, ...state.accounts],\n\t\t\t};\n\t\tcase ACCNTS_LOADING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t};\n\t\t\tdefault: \n\t\t\t\treturn state;\n\t}\n};","import {\n\tGET_ID_REPLACEMENTS,\n\tADD_ID_REPLACEMENT,\n\t// ID_FETCHED_BY_ID,\n\tUPDATE_ID_REPLACEMENT,\n\tID_REPLACEMENT_LOADING\n} from '../actions/types';\n\nconst initialState = {\n\tadded: false,\n\treplaced: false,\n\trecords: [],\n\tloading: false\n};\n\n\nexport default function (state = initialState, action){\n\tswitch(action.type){\n\t\tcase GET_ID_REPLACEMENTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecords: action.payload,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase ADD_ID_REPLACEMENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tadded: true,\n\t\t\t\trecords: [action.payload, ...state.records]\n\t\t\t};\n\t\t// Fetched the state by its \n\t\t// This will be a snippet for Redux search by id s\n\t\t// case ID_FETCHED_BY_ID:\n\t\t// \t\treturn {\n\t\t// \t\t\t...state,\n\t\t// \t\t\trecords: action.payload\n\t\t// \t\t};\n\n\t\tcase UPDATE_ID_REPLACEMENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\treplaced: true,\n\t\t\t\trecords: state.records.map((record, i) => i === 1 ? \n\t\t\t\t{\n\t\t\t\t\trecord: action.payload\n\t\t\t\t}\n\t\t\t\t\t: record\n\t\t\t\t\t)\t\n\t\t\t};\n\t\tcase ID_REPLACEMENT_LOADING: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\n\t};\n}","import {\n\t// Org Part \n\tGET_ORG_FEEDS,\n\tGET_REQUEST_ACTIVITIES,\n\tSUBMIT_REQUEST_ACTIVITIES,\n\n\t// SOA HEAD PARt\n\tCOUNT_REQUEST_ACTIVITIES_NOTIF,\n\tGET_REQUEST_ACTIVITIES_HEAD,\n\tUPDATE_COUNT_NOTIF,\n\tSET_APPROVED_REQUEST_ACTIVITIES_HEAD,\n\tSET_DECLINED_REQUEST_ACTIVITIES_HEAD,\n\t// SOA ADMIN PART \n\tSET_APPROVED_REQUEST_ACTIVITIES_ADMIN,\n\tSET_DECLINED_REQUEST_ACTIVITIES_ADMIN,\n\n\tREQUEST_ACTIVITIES_LOADING\n} from '../actions/types';\n\nconst initialState = {\n\t//Org Part\n\tsubmitted: false,\n\trecords: [],\n\tfeeds:[],\n\n\t// SOA Head Part \n\trequest: [],\n\tapprovedByHead: false,\n\tdeclinedByHead: false,\n\tcountNotif: 0,\n\n\tapprovedByAdmin: false,\n\tdeclinedByAdmin: false,\n\n\tloading: false,\n};\n\nexport default function(state = initialState, action){\n\tswitch(action.type){\n\t\t// Org Part \n\n\t\t//Reducer for getting the feeds in the database\n\t\tcase GET_ORG_FEEDS: \n\t\treturn\t{\n\t\t\t...state,\n\t\t\tfeeds: action.payload,\n\t\t\tloading: false\n\t\t};\n\t\t//Reducer for getting the submitted records in the database\n\t\tcase GET_REQUEST_ACTIVITIES: \n\t\t\treturn {\n\t\t\t...state,\n\t\t\trecords: action.payload,\n\t\t\tloading: false,\n\t\t};\n\t\t//Reducer for submitting a request activity in the system\n\t\tcase SUBMIT_REQUEST_ACTIVITIES: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsubmitted: true,\n\t\t\t\trecords: [action.payload, ...state.records]\n\t\t\t};\n\n\t\t// SOA Head PArt \n\t\tcase COUNT_REQUEST_ACTIVITIES_NOTIF: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t// Set the countNotif State with the response of count object in the action \n\t\t\t\tcountNotif: action.payload\n\t\t\t};\n\t\tcase GET_REQUEST_ACTIVITIES_HEAD:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trequest: action.payload,\n\t\t\t\tloading: false\n\t\t\t};\n\t\tcase UPDATE_COUNT_NOTIF:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcountNotif: action.payload\n\t\t\t};\n\t\tcase SET_APPROVED_REQUEST_ACTIVITIES_HEAD:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tapprovedByHead: true\n\t\t\t};\n\t\tcase SET_DECLINED_REQUEST_ACTIVITIES_HEAD:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdeclinedByHead: true\n\t\t\t};\n\n\t\tcase SET_APPROVED_REQUEST_ACTIVITIES_ADMIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tapprovedByAdmin: true\n\t\t\t};\n\n\t\tcase SET_DECLINED_REQUEST_ACTIVITIES_ADMIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdeclinedByAdmin: true\n\t\t\t}\n\n\t\tcase REQUEST_ACTIVITIES_LOADING: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\t\n\t}\n};","import {\n\tADD_ANNOUNCEMENT_ADMIN,\n\tADD_ANNOUNCEMENT_ADMIN_FALSE,\n\n\tUPDATE_ANNOUNCEMENT_ADMIN,\n\tUPDATE_ANNOUNCEMENT_ADMIN_FALSE,\n\n\tDELETE_ANNOUNCEMENT_ADMIN,\n\tDELETE_ANNOUNCEMENT_ADMIN_FALSE,\n\n\tADD_ANNOUNCEMENT_HEAD,\n\tADD_ANNOUNCEMENT_HEAD_FALSE,\n\n\tUPDATE_ANNOUNCEMENT_HEAD,\n\tUPDATE_ANNOUNCEMENT_HEAD_FALSE,\n\n\n} from '../actions/types';\n\nconst initialState = {\n\tadded: false,\n\tupdated: false,\n\tdeleted: false,\n};\n\nexport default function(state = initialState, action) {\n\tswitch(action.type) {\n\t\tcase ADD_ANNOUNCEMENT_ADMIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tadded:true\n\t\t\t};\n\t\tcase ADD_ANNOUNCEMENT_ADMIN_FALSE: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tadded: false,\n\t\t\t};\n\n\t\tcase UPDATE_ANNOUNCEMENT_ADMIN: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdated: true\n\t\t\t};\n\t\tcase UPDATE_ANNOUNCEMENT_ADMIN_FALSE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdated: false\n\t\t\t};\n\n\t\tcase DELETE_ANNOUNCEMENT_ADMIN: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdeleted: true\n\t\t\t};\n\t\tcase DELETE_ANNOUNCEMENT_ADMIN_FALSE: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdeleted: false\n\t\t\t}\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\t\n};\n\t","import {\n\tADD_ASSESSMENT_ACTIVITY,\n\tADD_ASSESSMENT_ACTIVITY_FALSE,\n\n\tUPDATE_ASSESSMENT_ACTIVITY,\n\tUPDATE_ASSESSMENT_ACTIVITY_FALSE,\n\n\tSET_ASSESSMENT_APPROVED,\n\tSET_ASSESSMENT_APPROVED_FALSE,\n\n\tSET_ASSESSMENT_DECLINED,\n\tSET_ASSESSMENT_DECLINED_FALSE,\n\n\tSET_ASSESSMENT_PENDING,\n\tSET_ASSESSMENT_PENDING_FALSE,\n\n} from '../actions/types';\n\nconst initialState = {\n\tadded: false,\n\tupdated: false,\n\n\tapproved: false,\n\tdeclined: false,\n\n\tpendingAgain: false,\n\n\trecords : [],\n\tloading: false\n};\n\nexport default function (state = initialState, action) {\n\tswitch(action.type){\n\t\tcase ADD_ASSESSMENT_ACTIVITY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tadded: true,\n\t\t\t}\n\t\tcase ADD_ASSESSMENT_ACTIVITY_FALSE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tadded: false\n\t\t\t}\n\t\t//Update=ign State\n\t\tcase UPDATE_ASSESSMENT_ACTIVITY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdated: true\n\t\t\t};\n\t\tcase UPDATE_ASSESSMENT_ACTIVITY_FALSE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tupdated: false\n\t\t\t}\n\n\t\tcase SET_ASSESSMENT_APPROVED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tapproved: true\n\t\t\t}\n\t\tcase SET_ASSESSMENT_APPROVED_FALSE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tapproved: false\n\t\t\t}\n\t\tcase SET_ASSESSMENT_DECLINED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdeclined: true\n\t\t\t}\n\t\tcase SET_ASSESSMENT_DECLINED_FALSE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdeclined: false\n\t\t\t}\n\n\t\tcase SET_ASSESSMENT_PENDING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpendingAgain:  true\n\t\t\t}\n\t\tcase SET_ASSESSMENT_PENDING_FALSE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpendingAgain:false\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","import {\nSET_STUDENT_REGISTERED_ORG,\nSET_STUDENT_REGISTERED_ORG_FALSE, \n\nSET_STUDENT_FULL_REQ,\n\nSET_STUDENT_REGISTERED_HEAD,\nSET_STUDENT_REGISTERED_HEAD_FALSE,\nSET_STUDENT_INACTIVE_HEAD,\nSET_STUDENT_INACTIVE_HEAD_FALSE\n} from '../actions/types';\n\nconst initialState = { \n\tregistered: false,\n\tfullReq: false,\n\n\tregistererdInHead: false,\n\tinactive: false\n};\n\nexport default function (state = initialState, action) {\n\t\tswitch(action.type){\n\t\t\tcase SET_STUDENT_REGISTERED_ORG:\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tregistered: true\n\t\t\t\t};\n\t\t\tcase SET_STUDENT_REGISTERED_ORG_FALSE:\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tregistered: false\n\t\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\treturn state;\n\t\t}\n\t}\n","import {\n\tSEND_REPORT,\n\tSEND_REPORT_FALSE,\n\tGET_REPORTS,\n\tARCHIVED_LOADING\n} from '../actions/types';\n\nconst initialState = {\n\tsubmitted: false,\n\trecords: [],\n\tloading: false\n};\n\nexport default function (state = initialState, action) {\n\t\tswitch(action.type){\n\t\t\tcase GET_REPORTS:\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\trecords: action.payload,\n\t\t\t\t\tloading: false\n\t\t\t\t}\n\t\t\tcase SEND_REPORT:\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tsubmitted: true,\n\t\t\t\t\trecords: [action.payload, ...state.records]\n\t\t\t\t}\n\t\t\tcase SEND_REPORT_FALSE: \n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tsubmitted: false,\n\t\t\t\t}\n\t\t\tcase ARCHIVED_LOADING:\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tloading: true\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn  state\n\t\t}\n}","import {\n\tSHARE_FILES,\n\tSHARE_FILES_FALSE,\n\n\tDELETE_SHARE_FILES,\n\tDELETE_SHARE_FILES_FALSE,\n\n\tGET_SHARED,\n\tGET_SHARED_FILES_STUDENTS,\n\tGET_SHARED_FILES_ORG,\n\n\tSHARED_FILES_LOADING,\n\tSHARED_FILES_LOADING_STUDENT,\n\tSHARED_FILES_LOADING_ORG\n\n} from '../actions/types';\n\nconst initialState = {\n\tshared: false,\n\tdeleted: false,\n\torgs: [],\n\tstudents: [],\n\trecords: [],\n\tloading: false,\n\tloadingStudent: false,\n\tloadingOrg: false\n};\n\nexport default function(state = initialState, action) {\n\tswitch(action.type) {\n\t\tcase SHARE_FILES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tshared: true,\n\t\t\t\trecords: [action.payload, ...state.records]\n\t\t\t}\n\t\tcase SHARE_FILES_FALSE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tshared: false\n\t\t\t}\n\n\t\tcase DELETE_SHARE_FILES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdeleted: true,\n\t\t\t\trecords: state.records\n\t\t\t\t\t\t\t\t\t.filter(record => record.id !== action.payload)\n\t\t\t};\n\t\tcase DELETE_SHARE_FILES_FALSE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdeleted: false\n\t\t\t};\n\n\t\tcase GET_SHARED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecords: action.payload,\n\t\t\t\tloading: false\n\t\t\t}\n\t\tcase GET_SHARED_FILES_STUDENTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstudents: action.payload,\n\t\t\t\tloadingStudent: false\n\t\t\t}\n\t\tcase GET_SHARED_FILES_ORG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\torgs: action.payload,\n\t\t\t\tloadingOrg: false\n\t\t\t}\n\n\t\tcase SHARED_FILES_LOADING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t}\n\t\tcase SHARED_FILES_LOADING_STUDENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloadingStudent: true\n\t\t\t}\n\t\tcase SHARED_FILES_LOADING_ORG:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloadingOrg: true\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import { combineReducers } from \"redux\";\n\n//Reducers\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nimport lafReducer from './lafReducer';\nimport orgDescReducer from './orgDescReducer';\nimport orgReducer from './orgReducer';\nimport idreplacementReducer from './idreplacementReducer';\nimport requestActivitiesReducer from './requestActivitiesReducer';\nimport announcementReducer from './announcementReducer';\nimport assessmentsReducer from './assessmentsReducer';\nimport registeredStudentsReducer from './registeredStudentsReducer';\nimport reportsReducer from './reportsReducer';\nimport fileSharingReducer from './fileSharingReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer,\n    laf: lafReducer,\n    orgDesc: orgDescReducer,\n    org: orgReducer,\n    idreplacement: idreplacementReducer,\n    requestActivities: requestActivitiesReducer,\n    announcement: announcementReducer,\n    assessment: assessmentsReducer,\n    registeredStudents: registeredStudentsReducer,\n    reports: reportsReducer,\n    fileSharing: fileSharingReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\n\nconst initialState = {};\nconst middleware = [thunk];\n\n// the redux middleware\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        // Commented so the web can be access in mobile \n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\nexport default store;","import axios from \"axios\";\n\n//Auth token function\nconst setAuthToken = token => {\n    if (token) {\n        // Apply authorization token to every request if logged in\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        // Delete auth header\n        delete axios.defaults.headers.common[\"Authorization\"]\n    }\n};\n\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\n//ACTION TYPES FOR REDUCER\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"./types\";\n\n//Login user\nexport const loginUser = userData => dispatch => {\n    axios.post(\"/api/users/login\", userData)\n        .then(res => {\n            //Saving the token in localstorage\n            //For user authentication of token\n            const { token } = res.data;\n            localStorage.setItem(\"jwtToken\", token);\n\n            setAuthToken(token);\n            // Decoding of token \n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err => dispatch({\n\n            //  Error \n            type: GET_ERRORS,\n            payload: err.response.data\n        }))\n}\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n    return { type: SET_CURRENT_USER, payload: decoded };\n};\n\n// User Loading action \nexport const setUserLoading = _ => {\n    return { type: USER_LOADING };\n};\n\n// Logout User Action \nexport const logoutUser = _ => dispatch => {\n    //Removing token auth\n    localStorage.removeItem(\"jwtToken\");\n    // Remove auth header for future requests\n    setAuthToken(false);\n    // Set current user to empty object {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n}\n","import React, { useEffect, useState, Fragment } from 'react';\nimport axios from 'axios';\n\nimport indexhead from './img/indexhead.jpg';\nimport indexnewpic from './img/indexnewpic.png';\n\n//PropTypes and actions\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../actions/authActions\";\n\n//MaterialUI Dependencies\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography';\n\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport Link from '@material-ui/core/Link';\n\n//Footer\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"#\">\n                SOA Web Portal by Gabriel V. Agoncillo\n        </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        marginTop: 80,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n        marginTop: 10,\n    },\n     table: {\n        minWidth: 700,\n      },\n    wrapper: {\n    margin: theme.spacing.unit,\n    position: 'relative',\n  },\n\n   buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '70%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}))\n\nfunction Index (props) {\n\n\n    const [login, setLogin] = useState({\n        username: '',\n        password: ''\n    });\n\n    const [errors, getErrors] = useState('');\n\n    const [showPassword, setShowPassword] = useState(false);\n    const [setPic, setPicBool] = useState(true);\n\n    const [users, getUsers] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [loadingAuth, setLoadingAuth] = useState(false)\n\n    const setPicNew = _ => {\n        setPicBool(!setPic)\n    };\n\n    const handleClickShowPassword = _ => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = e => {\n        e.preventDefault();\n    }\n\n    const handleChange = prop => e => {\n        setLogin({...login, [prop]: e.target.value});\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n        setLoadingAuth(!loadingAuth);\n\n        const loginData = {\n            username: login.username,\n            password: login.password\n        };\n\n        props.loginUser(loginData);\n    }\n\n    useEffect(_ => {\n        axios.get('/api/users/')\n        .then(res => {\n            getUsers(res.data);\n            setLoading(false);\n        })\n        .catch(err => {\n             if(err.response){\n              setError(true)\n            }  \n        })\n    },[]);\n\n    useEffect(_ => {\n        if(props.auth.isAuthenticated){\n             if (props.auth.user.type === \"admin\") {\n                props.history.push(\"/ad\");\n            }\n            if (props.auth.user.type === \"head\") {\n                props.history.push(\"/h\");\n            }\n            if (props.auth.user.type === \"org\") {\n                props.history.push(\"/org\");\n            }\n            if (props.auth.user.type === \"student\") {\n                props.history.push(\"/st\");\n            }\n        }\n    },[props.auth.isAuthenticated]);\n\n    useEffect(_ => {\n        if(props.errors){\n            getErrors(props.errors);\n            setLoadingAuth(false);\n        }\n    },[props.errors])\n\n        const classes = useStyles();\n   \n\n        const rows = users;\n\n        // console.log(loadingAuth);\n\n        return (\n            <div className={classes.root}>\n                <Container component=\"main\" maxWidth=\"sm\">\n                    <CssBaseline /> {/* krung krung sa css baseline hahaha*/}\n                    <div className={classes.paper}>\n\n                        <a href=\"#\" onClick={setPicNew}>\n                            {\n                                setPic \n                                ?  <img src={indexnewpic} alt=\"SOA Web Portal\" />\n                                :  <img src={indexhead} alt=\"SOA Web Portal\" />                                \n                            }\n                        </a>\n\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign In\n                    </Typography>\n\n                        <form className={classes.form} noValidate onSubmit={onSubmit}>\n                            {/* Username handling */}\n                            {   errors.username || errors.usernotfound\n                                ?\n                                <TextField\n                                margin=\"normal\"\n                                error\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                name=\"username\"\n                                autoFocus\n                                onChange={handleChange(\"username\")}\n                                helperText={errors.username || errors.usernotfound}\n                            />\n                                :\n                                <TextField\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                name=\"username\"\n                                autoFocus\n                                onChange={handleChange(\"username\")}\n                               \n                            />\n                            }\n                                {/* Password handling */}\n                            {   errors.password || errors.passwordincorrect\n                                ? \n                                <TextField\n                                error\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    id=\"password\"\n                                    type={showPassword ? 'text' : 'password'}\n                                    value={login.password}\n                                    onChange={handleChange('password')}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    edge=\"end\"\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={handleClickShowPassword}\n                                                    onMouseDown={handleMouseDownPassword}\n                                                >\n                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    helperText={errors.password || errors.passwordincorrect}\n                                />\n                                :\n                                <TextField\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    id=\"password\"\n                                    type={showPassword ? 'text' : 'password'}\n                                    value={login.password}\n                                    onChange={handleChange('password')}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    edge=\"end\"\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={handleClickShowPassword}\n                                                    onMouseDown={handleMouseDownPassword}\n                                                >\n                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            }\n                            <br></br>\n\n                            {/*\n                            <FormControlLabel\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                                label=\"Remember me\"\n                            />\n                            */\n                            }\n                           \n                            <div className={classes.wrapper}>\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                disable={loadingAuth}\n                            >\n                                {loadingAuth ? \n                                    <Fragment>\n                                    <CircularProgress size={24} className={classes.buttonProgress} /> \n                                    Loading... \n                                    </Fragment>\n                                    : \"Login\"}\n                            </Button>\n                            </div>\n                        </form>\n                        <br></br>\n\n                    <Box mt={8} mb={8}>\n                        <Copyright />\n                    </Box>\n\n                      <Typography component=\"h1\" variant=\"h5\">\n                            User accounts and roles\n                    </Typography>\n\n                    <Table className={classes.table}>\n                            <TableHead>\n                              <TableRow>\n                                <TableCell>Username</TableCell>\n                                <TableCell align=\"right\">Password</TableCell>\n                                <TableCell align=\"right\">Role/Access</TableCell>\n                                <TableCell align=\"right\">Campus</TableCell>\n\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {rows.map(row => (\n                                <TableRow key={row.id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.username}\n                                  </TableCell>\n                                  <TableCell align=\"right\">{row.passwordTxt}</TableCell>\n                                  <TableCell align=\"right\">\n                                  {\n                                    row.type === 'student'\n                                    ?\n                                    \"Student\"\n                                    :\n                                    <Fragment>\n                                    {\n                                        row.type === 'org'\n                                        ?\n                                        \"Student Orgnanization\"\n                                        :\n                                        <Fragment>\n                                            {\n                                                row.type === 'head'\n                                                ?\n                                                \"SOA Head\"\n                                                :\n                                                \"SOA Admin\"\n                                            }\n                                        </Fragment>\n                                    }\n                                    </Fragment>\n                                  }\n                                  </TableCell>\n                                  <TableCell align=\"right\">{row.campus}</TableCell>\n\n                                </TableRow>\n                              ))}\n                            </TableBody>\n                          </Table>\n\n                    </div>\n                </Container>\n            </div>\n        )\n\n}\n\n\nIndex.propTypes = {\n    //Style propTypes\n    classes: PropTypes.object.isRequired,\n    //Function propTypes\n    loginUser: PropTypes.func.isRequired,\n    //Reducer propTypes\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { loginUser }\n)(Index);","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LocalActivityIcon from '@material-ui/icons/LocalActivity';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport Collapse from '@material-ui/core/Collapse';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport EventIcon from '@material-ui/icons/Event';\n\nconst styles = theme => ({\n    nested: {\n        paddingLeft: theme.spacing(4),\n      },\n})\n\nclass SideListNavbar extends Component {\n    constructor(props){\n        super(props)\n        this.handleClick = this.handleClick.bind(this);\n\n        this.state = {\n            open: false\n        }\n    }\n\n    handleClick(){\n        this.setState({\n            open: !this.state.open\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { open } = this.state;\n        const handleClick = this.handleClick\n        return (\n            <div className={this.props.class}>\n                 <List>\n                    {/* Inclide a component of a for anchor tag */}\n                    {/* Home Link  */}\n                <ListItem button component=\"a\" href=\"/st\">\n                    <ListItemIcon>\n                        <HomeIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Home\" />\n                </ListItem>\n\n                {/* Lost and Found component  */}\n                <ListItem button component=\"a\" href=\"/st/lostandfoundpage\">\n                    <ListItemIcon>\n                        <FindInPageIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Lost & Found\" />\n                </ListItem>\n\n                {/* Org Reports components  */}\n                <ListItem button component=\"a\" href=\"#\">\n                    <ListItemIcon>\n                        <AssessmentIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"BatStateU Org Reports\" />\n                </ListItem>\n\n                {/* Calendar of Events components  */}\n                <ListItem button component=\"a\" href=\"/st/lostandfoundpage/events\">\n                    <ListItemIcon>\n                        <EventIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Events\" />\n                </ListItem> \n\n              </List>\n\n              <Divider />\n         \n              <List>\n              {/*<ListItem button onClick={handleClick}>*/}\n              <ListItem button component=\"a\" href=\"/st/activities\">\n\n                        <ListItemIcon>\n                            <InboxIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Activities\" />\n                        </ListItem>\n\n                        {/* Static List for the Activities Will be update to dynamic list \n                            Removing this feature\n                          */}\n                        \n                        {/*<Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItem button className={classes.nested}>\n                            <ListItemIcon>\n                                <LocalActivityIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Sample\" />\n                            </ListItem>\n                        </List>\n                        </Collapse>*/}\n\n              </List>\n              \n              <Divider />\n\n              <List>\n                    {/* Downloadable Files Page  */}\n                    <ListItem button onClick={this.props.onClickDownloads}>\n                        <ListItemIcon>\n                            <GetAppIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Downloadable Files\" />\n                    </ListItem>\n\n                    <ListItem style={{ color: \"red\" }} button onClick={this.props.onClick}>\n                        <ListItemIcon>\n                            <PowerSettingsNewIcon color=\"error\"/>\n                        </ListItemIcon>\n                        <ListItemText \n                        primary=\"Logout\" />\n                    </ListItem>\n                </List>\n              \n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(SideListNavbar);\n","import axios from 'axios';\n\nimport {\n\tSHARE_FILES,\n\tSHARE_FILES_FALSE,\n\n\tDELETE_SHARE_FILES,\n\tDELETE_SHARE_FILES_FALSE,\n\n\tGET_SHARED,\n\tGET_SHARED_FILES_STUDENTS,\n\tGET_SHARED_FILES_ORG,\n\n\tSHARED_FILES_LOADING,\n\tSHARED_FILES_LOADING_STUDENT,\n\tSHARED_FILES_LOADING_ORG,\n\n\tGET_ERRORS\n} from './types';\n\nexport const loadingFiles = _ => {\n\treturn { type: SHARED_FILES_LOADING}\n}\n\nexport const loadingFilesStudents = _ => {\n\treturn { type: SHARED_FILES_LOADING_STUDENT }\n}\n\nexport const loadingFilesOrg = _ => {\n\treturn { type: SHARED_FILES_LOADING_ORG }\n}\n\nexport const getRecords = _ => dispatch => {\n\tdispatch(loadingFiles)\n\taxios.get('/api/fileSharings/')\n\t.then(res => dispatch({\n\t\ttype: GET_SHARED,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => err)\n}\n\n//post shared files\nexport const shareFiles = data => dispatch => {\n\taxios.post('/api/fileSharings/shareFiles', data)\n\t.then(res => dispatch({\n\t\ttype: SHARE_FILES,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}))\n}\n\nexport const shareFilesFalse = _ => {\n\treturn { type: SHARE_FILES_FALSE }\n};\n\n//Delete Share Files\nexport const deleteFiles = id => dispatch => {\n\taxios.delete(`/api/fileSharings/deleteSharedFiles/${id}`)\n\t.then(res => dispatch({\n\t\ttype: DELETE_SHARE_FILES,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => console.log(err))\n}\n\nexport const deleteFilesFalse = _ => {\n\treturn {  type: DELETE_SHARE_FILES_FALSE }\n}\n\n//get sharedFiles records in students\nexport const getRecordsInStudents = _ => dispatch => {\n\tdispatch(loadingFilesStudents);\n\taxios.get('/api/fileSharings/student')\n\t.then(res => dispatch({\n\t\ttype: GET_SHARED_FILES_STUDENTS,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => err)\n}\n\n//Get sharedFiles records in org\nexport const getRecordsInOrg = _ => dispatch => {\n\tdispatch(loadingFilesOrg);\n\taxios.get('/api/fileSharings/org')\n\t.then(res => dispatch({\n\t\ttype: GET_SHARED_FILES_ORG,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => err)\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getRecordsInStudents } from '../../actions/fileSharingActions'\n\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nfunction StudentFileDownload(props) {\n\n\tuseEffect(_ => {\n\t\tprops.getRecordsInStudents();\n\t},[]);\n\n\tconst rows = props.fileSharing.students.sort((a,b) => (a.created_at > b.created_at ? -1 : 1));\n\n\treturn (\n\t\t<Dialog onClose={props.handleClose} \n\t\taria-labelledby=\"simple-dialog-title\"\n\t\topen={props.open}\n\t\t>\n\t\t <DialogTitle id=\"simple-dialog-title\">Files that can be downloaded</DialogTitle>\n\t\t<List>\n\t\t\t{\n\t\t\t\tprops.fileSharing.loadingStudent \n\t\t\t\t?\n\t\t\t\t<ListItem>\n\t\t            <ListItemText primary=\"Loading..,\" />\n\t\t          </ListItem>\n\t\t         :\n\t\t         rows.map(row => (\n\t\t\t         <ListItem key={row.id}>\n\t\t\t            <ListItemAvatar>\n\t\t\t             \t<a href={row.file} target=\"_blank\">\n                                 <GetAppIcon />\n                             </a>\n\t\t\t            </ListItemAvatar>\n\t\t\t            <ListItemText primary={row.fileName} />\n\t\t\t          </ListItem>\n\t\t         \t))\n\t\t\t}\n\t\t</List>\n\t\t\t\n\t\t</Dialog>\n\t\t);\n}\n\nconst mapStateToProps = state => ({\n\tfileSharing: state.fileSharing\n});\n\nconst mapDispatchToProps = { getRecordsInStudents };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentFileDownload);","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport SideListNavbar from './SideListNavbar';\nimport StudentFileDownload from '../st/StudentFileDownload';\n//Materialize Components\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst styles = theme => ({\n    root: {\n        width: \"100%\",\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\"\n        },\n        flexGrow: 1\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n\n    //Drawer style components\n    list:{\n        width: 250,\n    }\n});\n\nconst Transition = props => {\n    return <Slide direction=\"up\" {...props} />\n}\n\n//Navbar For Students\nclass Navbar extends Component {\n    constructor(props) {\n        super(props)\n\n        this.handleMenuClose = this.handleMenuClose.bind(this);\n        this.handleActivityOpen = this.handleActivityOpen.bind(this);\n\n        this.handleSettingsClose = this.handleSettingsClose.bind(this);\n        this.handleSettingsOpen = this.handleSettingsOpen.bind(this);\n\n        this.onLogoutClick = this.onLogoutClick.bind(this);\n        this.onModalLogoutClick = this.onModalLogoutClick.bind(this);\n        this.onHandleLogoutClickClose = this.onHandleLogoutClickClose.bind(this);\n        this.handleModalFiles = this.handleModalFiles.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.onClickDownloads = this.onClickDownloads.bind(this);\n\n\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n\n        this.state = {\n            // L&F Dropdown \n            anchorEl: null,\n            //Settings dropdown\n            anchorDropDownEl: null,\n            //logout modal\n            modalLogout: false,\n            downloadFiles: false,\n\n            // State for toggling the drawer\n            right: false\n        }\n    }\n\n    //Drawer Toggle\n    toggleDrawer = (side, open) => () =>{\n        this.setState({\n            [side]: open \n        });\n    }\n\n    handleActivityOpen(e) {\n        this.setState({ anchorEl: e.currentTarget });\n    }\n\n    handleMenuClose() {\n        this.setState({ anchorEl: null });\n    }\n\n    handleSettingsOpen(e) {\n        this.setState({ anchorDropDownEl: e.currentTarget });\n    }\n\n    handleSettingsClose() {\n        this.setState({ anchorDropDownEl: null });\n    }\n\n    // Modal Logout Function \n    onModalLogoutClick() {\n        this.setState({ modalLogout: true })\n        this.setState({ anchorDropDownEl: null });\n    }\n\n    onHandleLogoutClickClose() {\n        this.setState({ modalLogout: false })\n    }\n\n    // Logout Function\n    onLogoutClick() {\n        this.props.logoutUser();\n    }\n\n    handleModalFiles() {\n        this.setState({ anchorDropDownEl: null});\n        this.setState({ downloadFiles: true});\n    }\n\n    handleClose() {\n        this.setState({ downloadFiles: false});\n    }\n\n    onClickDownloads() {\n        this.setState({ downloadFiles: true })\n        this.setState({ anchorDropDownEl: null });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, anchorDropDownEl, modalLogout, downloadFiles } = this.state;\n        const isMenuOpen = Boolean(anchorEl);\n        const isSettingsOpen = Boolean(anchorDropDownEl);\n\n        // Activities Mobile Components\n        const renderMenu = (\n            <Menu\n                anchorEl={anchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMenuOpen}\n                onClose={this.handleMenuClose}\n            >\n                <MenuItem onClick={this.handleMenuClose}>Menu Item 1 </MenuItem>\n                <MenuItem onClick={this.handleMenuClose}>Menu Item 2 </MenuItem>\n            </Menu>\n        );\n            // Setings Monile component\n        const renderSettings = (\n            <Menu\n                anchorEl={anchorDropDownEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isSettingsOpen}\n                onClose={this.handleSettingsClose}\n            >\n                <MenuItem onClick={this.handleModalFiles}>Downloadable Files </MenuItem>\n                <MenuItem onClick={this.onModalLogoutClick} style={{ color: \"red\" }}>Logout </MenuItem>\n            </Menu>\n        )\n\n        return (\n            <div className={classes.root}>\n\n                <StudentFileDownload handleClose={this.handleClose} open={downloadFiles}/>\n\n                {/* Modal */}\n                <Dialog\n                    open={modalLogout}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={this.onHandleLogoutClickClose}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\">\n                        {\"Logging Out\"}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                            Are you you want to Logout?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onHandleLogoutClickClose} variant=\"outlined\" color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.onLogoutClick} variant=\"outlined\" color=\"secondary\">\n                            Logout\n                               </Button>\n                    </DialogActions>\n                </Dialog>\n\n\n                {/* Navbar  */}\n                <AppBar position=\"static\">\n                    <Toolbar style={{ background: \"#8a1c1c\" }}>\n                        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n                            SOA Web Portal\n                        </Typography>\n\n                        <div className={classes.sectionDesktop}>\n                            <Button color=\"inherit\" href=\"/st\">Home</Button>\n                            <Button color=\"inherit\" href=\"/st/lostandfoundpage\">\n                                Lost&Found\n                            </Button>\n                          {/*  <Button color=\"inherit\">BatStateU Org Reports</Button> */}\n                            <Button color=\"inherit\" href=\"/st/events\">Events</Button>\n                            <Button\n                                aria-owns={isMenuOpen ? 'material-appbar' : undefined}\n                                aria-haspopup=\"true\"\n                                // onClick={this.handleActivityOpen}\n                                color=\"inherit\"\n                                href=\"/st/activities\"\n                            >Activities\n                            {/*<ArrowDropDownIcon />*/}\n                            </Button>\n                            <Button\n                                color=\"inherit\"\n                                aria-owns={isSettingsOpen ? 'material-appbar' : undefined}\n                                aria-haspopup=\"true\"\n                                onClick={this.handleSettingsOpen}\n                            >\n                                <SettingsIcon />\n                            </Button>\n                        </div>\n\n                        {/* Drawer Mobile components  */}\n                        <div className={classes.sectionMobile}>\n                            <Button\n                                onClick={this.toggleDrawer('right',true)} color=\"inherit\">\n                                <MenuIcon />\n                            </Button>\n                        </div>\n                        {/* Drawer Toggler  */}\n                        <Drawer anchor=\"right\" open={this.state.right} \n                        onClose={this.toggleDrawer('right',false)}\n                        >\n                        <div\n                            tabIndex={0}\n                            role=\"button\"\n\n                            // Muted feature because of onClick behavior, always closign every click  in the drawer \n                            // onClick={this.toggleDrawer('right', false)}\n\n                            onKeyDown={this.toggleDrawer('right', false)}\n                        >\n                            <SideListNavbar class={classes.list} onClick={this.onModalLogoutClick} onClickDownloads={this.onClickDownloads} />\n                        </div>\n\n                        </Drawer>\n                        \n\n                    </Toolbar>\n                </AppBar>\n                {renderMenu}\n                {renderSettings}\n            </div>\n        )\n    }\n}\n\nNavbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n    //Logout Func from the authActions\n    logoutUser: PropTypes.func.isRequired,\n    //object prop from the authReducer\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(withStyles(styles)(Navbar));","import React, { Component } from 'react';\nimport Navbar from \"../layouts/Navbar\";\n\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport Button from '@material-ui/core/Button';\n\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline';\nimport EventIcon from '@material-ui/icons/Event';\nimport LocalActivityIcon from '@material-ui/icons/LocalActivity';\nimport AssignmentReturnedIcon from '@material-ui/icons/AssignmentReturned';\n\n// Material UI styles \nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    \n});\n\nfunction ListItemLink(props) {\n    return <ListItem button component=\"a\" {...props} />;\n  }\n\nclass StudentIndex extends Component {\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Navbar />\n                <Container style={{paddingTop: 20}}>\n                <Paper className={classes.root} elevation={10}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    WELCOME TO STUDENT DASHBOARD\n                    </Typography>\n                    <br/>\n                    <Typography component=\"p\">\n                    In this Student Web Portal, You can :\n                    </Typography>\n\n                <div className={classes.root}>\n                    <List component=\"nav\">\n                        {/* List 1  */}\n                        <ListItemLink href='/st/lostandfoundpage'>\n                            <ListItemIcon>\n                                <InboxIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"File Reports for Lost and Found Items\" />\n                            </ListItemLink>\n\n                            {/* L ist 2  \n                        <ListItem button>\n                            <ListItemIcon>\n                                <ViewHeadlineIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"View BatStateU Organizational Reports\" />\n                            </ListItem>\n                    */}\n\n                        <ListItemLink href=\"/st/events\">\n                        <ListItemIcon>\n                                <EventIcon />\n                            </ListItemIcon>\n                        <ListItemText primary=\"View Calendar of Events\" />\n                        </ListItemLink>\n\n                        <ListItemLink href=\"#simple-list\">\n                        <ListItemIcon>\n                                <LocalActivityIcon />\n                            </ListItemIcon>\n                        <ListItemText primary=\"Join to activities led by Student Organizations\" />\n                        </ListItemLink>\n\n                        <ListItemLink href=\"#simple-list\">\n                        <ListItemIcon>\n                                <AssignmentReturnedIcon />\n                            </ListItemIcon>\n                        <ListItemText primary=\"Download Files you need for getting the service of the university\" />\n                        </ListItemLink>\n                    </List>\n                </div>\n                <center>\n                {/* <Button variant=\"outlined\" color=\"secondary\" className={classes.button}>\n                    Learn More...\n                </Button> */}\n                </center>\n\n                </Paper>\n                </Container>\n            </div>\n        )\n    }\n}\n\nStudentIndex.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(StudentIndex);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass SuccessMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant=\"success\"\n            message=\"Lost Item Reported!\"\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default SuccessMsg;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport SuccessMsg from './SuccessMsg';\nimport Navbar from \"../layouts/Navbar\";\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nimport lostandfound from '../img/640x640_12988565.png';\nimport lost from '../img/download.png';\nimport found from '../img/images.png';\n\n// Material UI styles \nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    paper: {\n        textAlign: 'center',\n        height: 400,\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(5),\n        paddingBottom: theme.spacing(5),\n      },\n      card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      cardMedia: {\n        paddingTop: '56.25%', // 16:9\n      },\n      cardContent: {\n        flexGrow: 1,\n      },\n    \n});\n\n\nclass LostAndFoundContent extends Component {\n    constructor(props){\n        super(props)\n\n        this.handleClose = this.handleClose.bind(this);\n\n        this.state = {  open: false }\n    }\n\n    componentDidMount(){\n        if(this.props.laf.lost){\n            this.setState({\n                open: true\n            })\n        }\n    }\n\n    handleClose(event, reason){\n        if(reason === 'clickaway'){\n            return;\n        }\n\n        this.setState({\n            open: false\n        })\n    }\n\n    render(){\n        const { classes } = this.props;\n        const { open } = this.state;\n        const handleClose = this.handleClose;\n\n        return(\n            <div>\n                {/* //Success Confirmation message  */}\n                <SuccessMsg open={open} onClose={handleClose}/>\n\n                {/* Main Content */}\n            <Navbar />\n                {/* Main paper  */}\n                <Container style={{paddingTop: 20}}>\n                    <Paper className={classes.root} elevation={10}>\n                        \n                    {/* Optional Paper  */}\n                        <Container className={classes.cardGrid} maxWidth=\"md\">\n                            <Grid container spacing={4} justify=\"center\">\n                                {/* Paper 1 */}\n                                    <Grid item xs={12} sm={6} md={4}>\n                                         <Card className={classes.card}>\n                                            <CardMedia\n                                                className={classes.cardMedia}\n                                                image={lostandfound}\n                                                title=\"Image title\"\n                                            />\n                                            {/* This Content will be for the lost and found form content  */}\n                                            <CardContent className={classes.cardContent}>\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                File Lost Items\n                                                </Typography>\n                                                <Typography>\n                                                File your personal belongings that you lost within school campus here. So we can have a chance to recover your lost item and give it back to you.\n                                                </Typography>\n                                            </CardContent>\n                                            <CardActions>\n                                                <Button href=\"/st/lostandfoundpage/reportlostitem\" size=\"small\" variant=\"outlined\" color=\"secondary\">\n                                                File a Report\n                                                </Button>\n                                            </CardActions>\n                                        </Card>\n                                    </Grid>\n\n                                {/* Paper 2: Content for viewing the reported Items in the university */}\n                                <Grid item xs={12} sm={6} md={4}>\n                                         <Card className={classes.card}>\n                                            <CardMedia\n                                                className={classes.cardMedia}\n                                                image={lost}\n                                                title=\"Image title\"\n                                            />\n                                            <CardContent className={classes.cardContent}>\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                View Lost Item Reports \n                                                </Typography>\n                                                <Typography>\n                                                A page for all the lost items being reported. You can track your filed item reports here or you can helped others in returning back their personal belongings here.\n                                                </Typography>\n                                            </CardContent>\n                                            <CardActions>\n                                               <Button href=\"/st/lostandfoundpage/reportslist\" size=\"small\" variant=\"outlined\" color=\"secondary\">\n                                                View Lost Item Reports\n                                                </Button>\n                                            </CardActions>\n                                        </Card>\n                                        \n                                </Grid>\n\n                                {/* Paper 3: This if for the components of found items in the university led by the admin*/}\n                                <Grid item xs={12} sm={6} md={4}>\n                                        <Card className={classes.card}>\n                                            <CardMedia\n                                                className={classes.cardMedia}\n                                                image={found}\n                                                title=\"Image title\"\n                                            />\n                                            <CardContent className={classes.cardContent}>\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                View Found Item Reports\n                                                </Typography>\n                                                <Typography>\n                                                A page were all the reported found items inside a university campus being returned to the lost and found management. Check it here to see if one of your reported lost item is here.\n                                                </Typography>\n                                            </CardContent>\n                                            <CardActions>\n                                            <Button href=\"/st/lostandfoundpage/foundreportslist\" size=\"small\" variant=\"outlined\" color=\"secondary\">\n                                                View Found Item Reports\n                                                </Button>\n                                            </CardActions>\n                                        </Card>\n                                </Grid>\n\n                            </Grid>\n                        </Container>\n\n                    </Paper>\n                </Container>\n\n            </div>\n        );\n    }\n}\n\nLostAndFoundContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    laf: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    laf:state.laf,\n});\n\nexport default connect(\n    mapStateToProps\n)(withStyles(styles)(LostAndFoundContent));\n","import axios from 'axios';\n\nimport { \n    ADD_LOST_REPORT,\n    GET_LOST_REPORTS,\n    REPORT_LOADING,\n    GET_ERRORS,\n    SET_REPORT_TO_FOUND,\n    SET_REPORT_TO_CLAIMED,\n    ADD_FOUND_REPORT,\n    GET_FOUND_REPORTS,\n    DELETE_FOUND_REPORT \n} from './types';\n\n// Function for getting all the data in lost item report \nexport const getLostReport = _ => dispatch => {\n    dispatch(setReportLoading);\n    axios.get('/api/lost/getreportlostitem')\n    .then(res => dispatch({\n        type: GET_LOST_REPORTS,\n        payload: res.data\n    }))\n    .catch(err => console.log(err))\n};\n\n//Adding Data report to the reducer\nexport const addLostReport = lostReports => dispatch => {\n    axios.post('/api/lost/reportlostitem', lostReports)\n    .then(res =>\n        dispatch({\n            type: ADD_LOST_REPORT,\n            payload: res.data\n        }))\n    .catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n    }));   \n};\n\n// Set the id of the data to found status \nexport const setReportToFound = (id, data) => dispatch => {\n    axios.post(`/api/lost/setasfounditem/${id}`, data)\n    .then(res => dispatch({\n        type: SET_REPORT_TO_FOUND,\n        payload:res.data\n    }))\n    .catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n    }));\n};\n\n\n// Set the id of the data to claimed status \nexport const setReportToClaimed = (id, data) => dispatch =>  {\n    axios.post(`/api/lost/setasclaimeditem/${id}`, data)\n    .then(res =>  dispatch({\n         type: SET_REPORT_TO_CLAIMED,\n         payload: res.data\n    }))\n    .catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n    }));\n};\n\n//Getting the reports for found item process\nexport const getFoundReports = _ => dispatch => {\n    dispatch(setReportLoading);\n    axios.get('/api/found/getreportfounditem')\n    .then(res => dispatch({\n        type: GET_FOUND_REPORTS,\n        payload: res.data\n    }))\n    .catch(err => console.log(err))\n};\n\n//Function for adding found item records with reducer\nexport const addFoundReports = foundReports => dispatch => {\n axios.post('/api/found/addfoundreport', foundReports)\n    .then(res =>\n        dispatch({\n            type: ADD_FOUND_REPORT,\n            payload: res.data\n        }))\n    .catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n    }));  \n};\n\n//Deleting a specific found report by its id\nexport const deleteFoundReport = id => dispatch => {\n    axios.delete(`/api/found/deletefoundreport/${id}`)\n    .then(res => dispatch({\n        type: DELETE_FOUND_REPORT,\n        payload: res.data\n    }))\n    .catch(err => console.log(err));\n};\n\nexport const setReportLoading = _ => {\n    return { type: REPORT_LOADING }\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { addLostReport } from \"../../actions/lafActions\";\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nimport axios from 'axios';\n\n// Object Styles for the components \nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n          width: 600,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        },\n      },\n      paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n      closeIcon: {\n          float: 'right',\n          color: 'red'\n      },\n      formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n      submit:{\n        marginTop: theme.spacing(3),\n      },\n      close: {\n          padding: theme.spacing() / 2,\n      }\n});\n\nclass LostItemForm extends Component {\n    constructor(props){\n        super(props);\n        this.previousPage = this.previousPage.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.chooseContactOption = this.chooseContactOption.bind(this)\n        this.getCampuses = this.getCampuses.bind(this);\n\n        this.state = {\n            // Data values \n            name: '',\n            src: '',\n            yr: '',\n            campus: '',\n            department: '',\n            course:'',\n            details:'',\n            contact:'',\n            // Data For fetching the campuses\n            campuses:[],\n            departments: [],\n            loadingCampuses: true,\n            loadingDepartments: true,\n            // Contact Radio States \n            contactValue: '',\n            // Error handling \n            errors: {}\n        }\n\n    }\n\n    getCampuses(){\n        axios.get('/api/campuses')\n        .then(res => {\n            this.setState({\n                // Passing the data from the databse of campuses in the state\n                campuses: res.data,\n                // Tip: always include loading state so the component wont have error in rendering components\n                loadingCampuses: false\n            });\n        })\n        .catch(err => console.log(err));\n    }\n\n    getDepartments(){\n        axios.get('/api/departments')\n        .then(res => {\n            this.setState({\n                // Same as rendering of data to the states \n                departments: res.data,\n                loadingDepartments: false,\n            })\n        })\n        .catch(err => console.log(err));\n    }\n    \n    componentDidMount(){\n       this.getCampuses();\n       this.getDepartments();\n\n       if(this.props.laf.lost){\n        this.props.history.push('/st/lostandfoundpage/reportslist');\n       }\n    }\n\n    chooseContactOption(e){\n        this.setState({\n            contactValue: e.target.value\n        });\n    }\n\n    handleChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    previousPage(e){\n        e.preventDefault();\n        window.location.href = '/st/lostandfoundpage';\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n\n        // Object of getting the values of state for form submittion\n        const { name, src, yr, campus, department, course, details, contact } = this.state;\n        // Putting it all in a variable\n        const newLostReport = {\n            name, src, yr, campus, department, course, details, contact\n        };\n        // Action for form submittionimport Select from '@material-ui/core/Select';\n        this.props.addLostReport(newLostReport);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        // For passing value of props, like the above componentDidMount\n        if(props.laf.lost){\n            props.history.push('/st/lostandfoundpage/reportslist');\n           }\n        // Passing the error props\n        if (props.errors) {\n            return { errors: props.errors }\n        } \n    }\n\n    render(){\n        let contactTextField;\n        if(this.state.contactValue === 'phone'){\n            contactTextField  = \n            <TextField\n            required\n            id='contact'\n            label=\"Contact Number\"\n            name='contact'\n            value={this.state.contact}\n            onChange={this.handleChange}\n            type=\"number\"\n            className={this.props.formControl}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"normal\"\n          /> \n        }\n\n        if(this.state.contactValue === 'email'){\n            contactTextField = \n            <TextField\n                required\n                id=\"contact\"\n                name=\"contact\"\n                label=\"E-Mail\"\n                fullWidth\n                className={this.props.formControl}\n                value={this.state.contact}\n                autoComplete=\"contact\"\n                type=\"email\"\n                onChange={this.handleChange}\n            />\n        }\n        \n        const { classes } = this.props;\n        const { name, src, yr, campus, department, course, details, loadingCampuses, loadingDepartments, errors } = this.state;\n        const previousPage = this.previousPage;\n        const handleChange = this.handleChange;\n        const handleSubmit = this.handleSubmit;\n\n        return(\n            <div className={classes.root}>    \n            \n                <main className={classes.layout}>\n                    <Paper className={classes.paper}>\n                        \n                        <CloseIcon onClick={previousPage} className={classes.closeIcon}/>\n\n                        <Typography variant=\"h4\" align=\"center\">\n                            Lost Item Report Form\n                        </Typography>\n                        <br></br>\n                        <Typography variant=\"h6\">\n                            Input the details needed.\n                        </Typography>\n\n                        <form noValidate onSubmit={handleSubmit}>\n\n                        <Grid container spacing={3}>\n\n                            {/* Ful Name Text Fiel  */}\n                        <Grid item xs={12} md={12}>\n                                <TextField\n                                    id=\"name\"\n                                    name=\"name\"\n                                    value={name}\n                                    label=\"Full Name\"\n                                    fullWidth\n                                    autoComplete=\"name\"\n                                    onChange={handleChange}\n                                />\n                             <span style={{ color: \"red\" }}>\n                                {errors.name}\n                            </span>\n                                </Grid>\n\n                                {/* SR-Code TextField  */}\n                                <Grid item xs={12} sm={6}>\n                                <TextField\n                                    id=\"src\"\n                                    name=\"src\"\n                                    value={src}\n                                    label=\"SR-Code\"\n                                    fullWidth\n                                    autoComplete=\"src\"\n                                    onChange={handleChange}\n                                />\n                            <span style={{ color: \"red\" }}>\n                                {errors.src}\n                            </span>\n                                </Grid>\n\n                                <Grid item xs={12} sm={6}>\n                                    {/* College Year TextField */}\n                                <FormControl className={classes.formControl}>\n                                        <InputLabel htmlFor=\"yr-simple\">College Year</InputLabel>\n                                        <Select\n                                            value={yr}\n                                            onChange={handleChange}\n                                            inputProps={{\n                                            name: 'yr',\n                                            id: 'yr-simple',\n                                            }}\n                                        >\n                                            <MenuItem value={'1st'}>1st</MenuItem>\n                                            <MenuItem value={'2nd'}>2nd</MenuItem>\n                                            <MenuItem value={'3rd'}>3rd</MenuItem>\n                                            <MenuItem value={'4th'}>4th</MenuItem>\n                                            <MenuItem value={'5th'}>5th</MenuItem>\n                                            <MenuItem value={'Longer than 5th'}>Longer than 5th</MenuItem>\n                                        </Select>\n                                        </FormControl>\n                            <span style={{ color: \"red\" }}>\n                                {errors.yr}\n                            </span>\n\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    {/* Campuses TextField */}\n                                    <FormControl className={classes.formControl}>\n\n                                    <InputLabel htmlFor=\"campus-simple\">Campus</InputLabel>\n                                   \n                                        <Select\n                                            value={campus}\n                                            onChange={handleChange}\n                                            inputProps={{\n                                            name: 'campus',\n                                            id: 'campus-simple',\n                                            }}\n                                        >\n\n                                            {loadingCampuses ?\n\n                                            <MenuItem></MenuItem> :\n\n                                            this.state.campuses.map((campus,id) => {\n                                                return ( <MenuItem key={id} value={campus.campusname}>{campus.campusname}</MenuItem>)\n                                            })   \n                                        }\n                                    \n\n                                        </Select>\n                                            \n                                    </FormControl>\n                                    <span style={{ color: \"red\" }}>\n                                {errors.campus}\n                            </span>\n\n                                </Grid>\n\n                                {/* Department TextField */}\n                                <Grid item xs={12} sm={6}>\n                                    <FormControl className={classes.formControl}>\n\n                                        <InputLabel htmlFor=\"department-simple\">Department</InputLabel>\n\n                                        <Select\n                                        value={department}\n                                        onChange={handleChange}\n                                        inputProps={{\n                                        name: 'department',\n                                        id: 'department-simple',\n                                        }}\n                                        >\n\n                                        {loadingDepartments ?\n\n                                        <MenuItem></MenuItem> :\n\n                                        this.state.departments.map((department,id) => {\n                                        return ( <MenuItem key={id} value={department.department}>{department.department}</MenuItem>)\n                                        })   \n                                        }\n\n\n                                        </Select>\n                                                \n                                </FormControl>\n                                <span style={{ color: \"red\" }}>\n                                {errors.department}\n                            </span>\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={6}>\n                                <TextField\n                                    id=\"course\"\n                                    name=\"course\"\n                                    value={course}\n                                    label=\"Course\"\n                                    fullWidth\n                                    autoComplete=\"Course\"\n                                    onChange={handleChange}\n                                />  \n                                <span style={{ color: \"red\" }}>\n                                {errors.course}\n                            </span>\n                                </Grid>\n\n                                {/* Details Text Field  */}\n                                <Grid item xs={12}>\n                                <TextField\n                                    id=\"details\"\n                                    name=\"details\"\n                                    label=\"Details of Lost item\"\n                                    multiline\n                                    rowsMax=\"4\"\n                                    value={details}\n                                    onChange={handleChange}\n                                    className={classes.formControl}\n                                    margin=\"normal\"\n                            />\n                            <span style={{ color: \"red\" }}>\n                                {errors.details}\n                            </span>\n                                </Grid>\n                                \n                                {/* Contact Text Field  */}\n                                <Grid item sx={12}>\n                                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                                        <FormLabel component=\"legend\">Contact</FormLabel> \n\n                                        <RadioGroup \n                                        aria-label=\"Contact\"\n                                        name=\"contact\"\n                                        className={classes.group}\n                                        value={this.state.contactValue}\n                                        onChange={this.chooseContactOption}\n                                        >\n                                            <FormControlLabel value='phone' control={<Radio />} label=\"Phone\" />\n\n                                            <FormControlLabel value=\"email\" control={<Radio />} label=\"Email\" />\n\n                                        </RadioGroup>\n\n                                    </FormControl> \n\n                                </Grid>\n\n                                <Grid>\n                                   { contactTextField }\n                            <span style={{ color: \"red\" }}>\n                                {errors.contact}\n                            </span>\n                                </Grid>\n\n\n\n                                <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                submit\n                            </Button>\n                                \n                        </Grid>\n\n                        </form>\n                    </Paper>\n                </main>\n\n            </div>\n        );\n    };\n\n};\n\nLostItemForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n    //Lost and Found action\n    addLostReport: PropTypes.func.isRequired,\n    //Reducers\n    laf: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    laf:state.laf,\n    errors: state.errors\n});\n\n\nexport default connect(\n    mapStateToProps,\n    { addLostReport }\n)(withStyles(styles)(LostItemForm));","import React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { getLostReport } from '../../actions/lafActions';\n\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport Button from '@material-ui/core/Button';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FindReplaceIcon from '@material-ui/icons/FindReplace';\n\n//Components\nimport Navbar from '../layouts/Navbar';\nimport SuccessMsg from './SuccessMsg';\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n// Style for the LostItemReports Component \nconst useStyles2 = makeStyles( theme => ({\n  root: {\n    width: '100%',\n  },\n  root2: {\n    width: '100%',\n    paddingBottom: '2 0px',\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  spinner: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n    marginTop: '50px',\n    height: '50px'\n  },\n  reportButton: {\n    marginTop:15,\n  },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\n// Main Component   console.log(props.laf.reports);\nfunction LostItemReports(props) {\n  const classes = useStyles2();\n  // Pagination Controls \n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  // Selection and Search state \n  const [search, setSearch] = useState('');\n  const [campuses, getCampuses] = useState([]);\n\n  // Success message handling state \n  const [open, setOpen] = useState(false);\n\n  // Loading for fetching datas \n  const [loading, setLoading] = useState(true);\n  const [loadingCampuses, setLoadingCampuses] = useState(true);\n  \n  //Success handlin message \n  const handleClose = (event, reason) => {\n    if(reason === 'clickaway'){\n        return\n    }\n    setOpen(false);\n  }\n\n    // Gets an effect in the component if the lost state in the laf prop is true \n    useEffect(() => {\n      if(props.laf.lost){\n        setOpen(true)\n    }\n    }, [props.laf.lost]);\n\n  useEffect(() => {\n  // / Action for fetching the datas in lafActions\n  const id = setInterval( _ =>{\n      props.getLostReport();\n      setLoading(false);  \n\n   //  Change the way of how to execute the function immidiately \n  (async _ => {\n  const res = await axios.get('/api/campuses');\n    getCampuses(res.data);\n    setLoadingCampuses(false);\n  })();\n\n  }, 2000);\n\n    // Cleansing, unmounting win the component already mounts\n    return () => {\n      clearInterval(id);\n    }\n  },[])\n\n  //Getting the pages, Material UI Funcs\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Search Filtering function that filters the table\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n  //Array of the reports in the lost item reports \n  //Amd filters it by chosen campus\n  const rows = props.laf.reports.sort((a, b) => (a.created_at > b.created_at ? -1 : 1))\n    .filter(row => row.campus === search)\n\n  //Empty row that says the rows for pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n\n  return (\n    <div>\n      {/* Message confirmation */}\n      <SuccessMsg open={open} onClose={handleClose}/>\n\n    {/* Main Component  */}\n    <Navbar />\n\n\n\n    <Container style={{paddingTop: 20}}>\n\n     <Breadcrumbs aria-label=\"breadcrumb\">\n        <Link color=\"inherit\" href=\"/st/lostandfoundpage\" className={classes.link}>\n          <HomeIcon className={classes.icon} />\n          Menu\n        </Link>\n\n        <Link\n          color=\"textPrimary\"\n          href=\"/st/lostandfoundpage/reportslist\"\n          aria-current=\"page\"\n        >\n        <FindReplaceIcon className={classes.icon}/>\n          Lost Reports\n        </Link>\n    </Breadcrumbs>\n\n\n      {/* Search bar  */}\n      <Paper className={classes.root2}>\n\n        <FormControl fullWidth>\n          <TextField\n              id=\"standard-select-currency-native\"\n              select\n              label=\"Search by campus\"\n              value={search}\n              onChange={handleChange}\n              SelectProps={{\n                native: true,\n              }}\n            >\n              {   loadingCampuses \n              ?\n                  <option></option> \n                  :\n\n                  <Fragment>\n                      <option></option>\n                      {campuses.map((campus,id) => {\n                        return(\n                        <option key={id} value={campus.campusname}>{campus.campusname}</option>\n                        )\n                      })}\n                  </Fragment>\n              }\n            </TextField>\n          </FormControl>\n\n      </Paper>\n\n            <br/>\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-label=\"custom pagination table\">\n        {/* Table Head of the datas  */}\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Student name</StyledTableCell>\n            <StyledTableCell align=\"left\">SR-Code</StyledTableCell>\n            <StyledTableCell align=\"left\">College Year</StyledTableCell>\n            <StyledTableCell align=\"left\">Campus</StyledTableCell>\n            <StyledTableCell align=\"left\">Department</StyledTableCell>\n            <StyledTableCell align=\"left\">Student course</StyledTableCell>\n            <StyledTableCell align=\"left\">Lost Item Details</StyledTableCell>\n            <StyledTableCell align=\"left\">Contact Details</StyledTableCell>\n            <StyledTableCell align=\"left\">Report Status</StyledTableCell>\n          </TableRow>\n        </TableHead>\n\n      {/* Body for displaying the reports */}\n            <TableBody>\n              { loading \n                ? \n                  //When the data is still loading\n                  <TableRow>\n                  <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                    <CircularProgress color=\"secondary\" /><br/>\n                    <span>Loading ...</span>\n                  </TableCell>\n                </TableRow>\n                :   \n                //Data to be displayed when the data is fetched\n                <Fragment>\n                {\n                   search === '' || rows.length === 0 ?\n                   <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                   <ArrowUpwardIcon /><br></br>\n                   Pls search at the top to filter by campus...\n                 </TableCell>\n                  :\n                  (rowsPerPage > 0\n                    ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    : rows\n                  ).map(row => (\n                    <TableRow>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.src}</TableCell>\n                      <TableCell align=\"left\">{row.yr}</TableCell>\n                      <TableCell align=\"left\">{row.campus}</TableCell>\n                      <TableCell align=\"left\">{row.department}</TableCell>\n                      <TableCell align=\"left\">{row.course}</TableCell>\n                      <TableCell align=\"left\">{row.details}</TableCell>\n                      <TableCell align=\"left\">{row.contact}</TableCell>\n                      {\n                        // In this component, if the status is Unfound/Uclaimed \n                        // The color text of the status will be red\n                        row.status === 'Unfound/Unclaimed'\n                        ? <TableCell align=\"left\" style={{ color: 'red' }}>{row.status}</TableCell>\n                        : \n                        <Fragment>\n                        {\n                          // Elss if the status is Found, Not Claimed \n                          // The color text of the status will be bluse\n                          row.status === 'Found, Not Claimed'\n                          ? <TableCell align=\"left\" style={{ color: 'blue' }}>{row.status}</TableCell>\n                          //Else it will be green \n                          : <TableCell align=\"left\" style={{ color: 'green' }}>{row.status}</TableCell>\n                        }\n                        </Fragment>\n                      }\n                    </TableRow>\n                  ))\n                }\n                </Fragment>\n              }\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n\n                {/* Table Pagination controls  */}\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n\n\n      <Button className={classes.reportButton} variant=\"contained\" color=\"primary\" href=\"/st/lostandfoundpage/reportlostitem\">\n        Report Again\n      </Button>\n\n\n    </Container>\n\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  laf:state.laf,\n});\n\n//Dipatch proptypes(React Hooks) \nconst mapDispatchToProps = { getLostReport };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LostItemReports)","import React, {Fragment, useEffect, useState }from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ListIcon from '@material-ui/icons/List';\nimport HomeIcon from '@material-ui/icons/List';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\n//Components\nimport Navbar from '../layouts/Navbar';\n\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\n// Style for the LostItemReports Component \nconst useStyles2 = makeStyles( theme => ({\n  root: {\n    width: '100%',\n  },\n  root2: {\n    width: '100%',\n    paddingBottom: '2 0px',\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  spinner: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n    marginTop: '50px',\n    height: '50px'\n  },\n  reportButton: {\n    marginTop:15,\n  },\n   link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\n\n function FoundTable(props){\n \tconst classes = useStyles2();\n \t  // Pagination State\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  \tconst [search, setSearch] = useState('');\n\n \t// State for the campuses \n \tconst [campuses, getCampuses] = useState([]);\n  \tconst [loadingCampuses, setLoadingCampuses] = useState(true);\n\n  \t// State for gettin the found reports \n  \tconst [reports, getReports] = useState([]);\n  \tconst [loading, setLoading] = useState(true);\n\n \t// Search Filtering function that filters the table\n\t  const handleChange = e => {\n\t    setSearch(e.target.value);\n\t  };\n\n\t//Getting the pages, Material UI Funcs\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n \tuseEffect( _ => {\n\n \tconst id = setInterval( _ => {\n\n\t//  Change the way of how to execute the function immidiately \n\t  (async _ => {\n\t  const res = await axios.get('/api/campuses');\n\t    getCampuses(res.data);\n\t    setLoadingCampuses(false);\n\n\t   const res2 = await axios.get('/api/found/getreportfounditem');\n\t   \tgetReports(res2.data);\n\t   \tsetLoading(false);\n\t  })();\n\n \t}, 2000);\n\n \treturn _ => {\n \t\tclearInterval(id);\n \t}\n\n\n \t},[]);\n\n \tconst rows = reports.sort((a,b) =>(a.created_at > b.created_at ? -1 : 1))\n \t\t.filter(row => row.campus === search);\n\n  //Empty row that says the rows for pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n \t\n  return (\n    <div>\n    \t\t\n    \t<Navbar />\n\n    \t\t <Container style={{paddingTop: 20}}>\n\n\t    \t\t<Breadcrumbs aria-label=\"breadcrumb\">\n\t\t\t        <Link color=\"inherit\" href=\"/st/lostandfoundpage\" className={classes.link}>\n\t\t\t          <HomeIcon className={classes.icon} />\n\t\t\t          Menu\n\t\t\t        </Link>\n\n\t\t\t        <Link\n\t\t\t          color=\"textPrimary\"\n\t\t\t          href=\"/st/lostandfoundpage/foundreportslist\"\n\t\t\t          aria-current=\"page\"\n\t\t\t        >\n\t\t\t        <ListIcon className={classes.icon}/>\n\t\t\t          Lost Reports\n\t\t\t        </Link>\n\t\t\t    </Breadcrumbs>\n\n\n\t\t\t    \t{/* Search bar  */}\n      <Paper className={classes.root2}>\n\n        <FormControl fullWidth>\n          <TextField\n              id=\"standard-select-currency-native\"\n              select\n              label=\"Search by campus\"\n              value={search}\n              onChange={handleChange}\n              SelectProps={{\n                native: true,\n              }}\n            >\n              {   loadingCampuses \n              ?\n                  <option></option> \n                  :\n\n                  <Fragment>\n                      <option></option>\n                      {campuses.map((campus,id) => {\n                        return(\n                        <option key={id} value={campus.campusname}>{campus.campusname}</option>\n                        )\n                      })}\n                  </Fragment>\n              }\n            </TextField>\n          </FormControl>\n\n      </Paper>\n\n    \t\t<br />\n\n    \t \t{/* Table Records for found */}\n    \t \t <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-label=\"custom pagination table\">\n        {/* Table Head of the datas  */}\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Found Item Detail</StyledTableCell>\n            <StyledTableCell align=\"left\">Date when the item is found</StyledTableCell>\n            <StyledTableCell align=\"left\">At what campus</StyledTableCell>\n          </TableRow>\n        </TableHead>\n\n      {/* Body for displaying the reports */}\n            <TableBody>\n              { loading \n                ? \n                  //When the data is still loading\n                  <TableRow>\n                  <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                    <CircularProgress color=\"secondary\" /><br/>\n                    <span>Loading ...</span>\n                  </TableCell>\n                </TableRow>\n                :   \n                //Data to be displayed when the data is fetched\n                <Fragment>\n                {\n                   search === '' || rows.length === 0 ?\n                   <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                   <ArrowUpwardIcon /><br></br>\n                   Pls search at the top to filter by campus...\n                 </TableCell>\n                  :\n                  (rowsPerPage > 0\n                    ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    : rows\n                  ).map(row => (\n                    <TableRow>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.founditem}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.date}</TableCell>\n                      <TableCell align=\"left\">{row.campus}</TableCell>\n                    </TableRow>\n                  ))\n                }\n                </Fragment>\n              }\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n\n                {/* Table Pagination controls  */}\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n\n </Container>\n    </div>\n  );\n};\n\nexport default FoundTable;","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\n\nimport Navbar from \"../layouts/Navbar\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClic\n\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    \n}));\n\nfunction StudentCalendar(props) {\n\tconst classes = useStyles();\n\n    const [events, setEvents] = useState([]);\n\n    useEffect(_ => {\n        axios.get('/api/announcements/')\n        .then(res => setEvents(res.data))\n        .catch(err => console.log(err));\n    },[]);\n\n    const dateClick = arg => {\n        // console.log(arg);\n        props.history.push(`/st/listOfEvents/${arg.dateStr}`)\n    }\n\n    // console.log(events);\n\n    const renderEventContent = eventInfo => (\n            <Fragment>     \n        {/* console.log(eventInfo)*/}\n\n            <a href={`/st/events/${eventInfo.event._def.publicId}`}>\n              <span style={{color: 'white', backgroundColor:`${eventInfo.backgroundColor}`}}>\n               \n               <b>{eventInfo.timeText}</b> &nbsp;\n                <span>{eventInfo.event.title}</span>\n\n               </span>\n            </a>\n\n            </Fragment>\n        );\n\n\treturn (\n\t\t<div>\n                <Navbar />\n\n                <Container style={{paddingTop: 20}}>\n\n                \t<Paper className={classes.root} elevation={10}>\n\n                \t\t<FullCalendar\n\t\t\t\t\t        plugins={[ dayGridPlugin , interactionPlugin ]}\n\t\t\t\t\t        initialView=\"dayGridMonth\"\n\t\t\t\t\t        weekends={true}\n                            events={events}\n                            eventContent={renderEventContent}\n                            dateClick={dateClick}\n\t\t\t\t\t      />\n\n                \t</Paper>\n\n                </Container>\n\t\t</div>\n\n\t\t)\n}\n\nexport default StudentCalendar;","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport clsx from 'clsx';\n\nimport Navbar from \"../layouts/Navbar\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport { red } from '@material-ui/core/colors';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Grid from '@material-ui/core/Grid';\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n   card: {\n   float: 'center',\n    maxWidth: 500,\n  },\n  media: {\n    textAlign: \"center\"\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n    \n}));\n\nfunction StudentEventSingle(props) {\n\tconst classes = useStyles();\n\n\tconst [event, setEvent] = useState({});\n\n\tuseEffect(_ => {\n\t\taxios.get(`/api/announcements/${props.match.params.id}`)\n\t\t.then(res => setEvent(res.data))\n\t\t.catch(err => console.log(err));\n\t},[]);\n\n\t// console.log(event);\n\n\treturn (\n\t\t\t<div>\n\n\t\t\t\t <Navbar />\n\n\t\t\t\t  \t<Container style={{paddingTop: 20}}>\n\n\t\t\t\t\t<Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n\t\t\t\t        <Link color=\"inherit\" href=\"/st/events\" className={classes.link}>\n\t\t\t\t          <DateRangeIcon className={classes.icon} />\n\t\t\t\t          Calendar\n\t\t\t\t        </Link>\n\n\t\t\t\t        <Link\n\t\t\t\t          color=\"textPrimary\"\n\t\t\t\t          href={`/st/lostandfoundpage/events/${props.match.params.id}`}\n\t\t\t\t          aria-current=\"page\"\n\t\t\t\t          className={classes.link}\n\t\t\t\t        >\n\t\t\t\t        <EventNoteIcon className={classes.icon} />\n\t\t\t\t          Event\n\t\t\t\t        </Link>\n\t\t\t\t    </Breadcrumbs>\n\n\n\n                \t<Grid container spacing={3}>\n\t\t\t\t\t        <Grid item xs>\n\t\t\t\t\t        </Grid>\n\n\t\t\t\t\t        <Grid item xs={6}>\n\t\t\t\t\t\t\t     \n\t\t\t\t\t\t\t        <Card className={classes.card}>\n\t\t\t\t\t\t\t\t      <CardHeader\n\t\t\t\t\t\t\t\t        avatar={\n\t\t\t\t\t\t\t\t          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n\t\t\t\t\t\t\t\t            SOA\n\t\t\t\t\t\t\t\t          </Avatar>\n\t\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\t\t        // action={\n\t\t\t\t\t\t\t\t        //   <IconButton aria-label=\"settings\">\n\t\t\t\t\t\t\t\t        //     <MoreVertIcon />\n\t\t\t\t\t\t\t\t        //   </IconButton>\n\t\t\t\t\t\t\t\t        // }\n\t\t\t\t\t\t\t\t        title={event.title}\n\t\t\t\t\t\t\t\t        subheader={`${moment(event.dateDate).format('MMMM D YYYY')} by: ${event.setBy}`}\n\t\t\t\t\t\t\t\t      />\n\n\t\t\t\t\t\t\t\t  <CardMedia className={classes.media}>\n\t\t\t\t\t\t\t\t  \t\t<img style={{height: \"340px\", width: \"450px\"}} src={`${event.poster}`}/>\n\t\t\t\t\t\t\t\t  </CardMedia>\n\n\t\t\t\t\t\t\t\t      <CardContent>\n\t\t\t\t\t\t\t\t         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t\t\t\t          Venue: {event.venue}\n\t\t\t\t\t\t\t\t        </Typography>\n\n\t\t\t\t\t\t\t\t        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n\t\t\t\t\t\t\t\t          {event.description}\n\t\t\t\t\t\t\t\t        </Typography>\n\t\t\t\t\t\t\t\t      </CardContent>\n\t\t\t\t\t\t\t\t      <CardActions disableSpacing>\n\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t      </CardActions>\n\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t    </Card>\n\t\t\t\t\t\t\t\t    \n\t\t\t\t\t        </Grid>\n\n\t\t\t\t\t        <Grid item xs>\n\t\t\t\t\t        </Grid>\n\n\n\t\t\t\t\t      </Grid>\n\n                \t\t\t\n\n\n\n\t\t\t\t  \t</Container>\n\n\t\t\t</div>\n\t\t)\t\n}\n\nexport default StudentEventSingle;","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport clsx from 'clsx';\n\nimport Navbar from \"../layouts/Navbar\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport { red } from '@material-ui/core/colors';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Grid from '@material-ui/core/Grid';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n     card: {\n   float: 'center',\n    maxWidth: 500,\n  },\n  media: {\n    textAlign: \"center\"\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n    \n}));\n\nfunction StudentEventSingle(props) {\n\tconst classes = useStyles();\n\n    //State for the events\n    const [events, setEvents] = useState([]);\n    const [ifError, setIfError] = useState(false);\n\n    //Component Effect\n    useEffect(_ => {\n        axios.get(`/api/announcements/getByDate/${props.match.params.dateDate}`)\n        .then(res => setEvents(res.data))\n        .catch(err => {\n            if(err)\n                setIfError(true)\n        });\n    },[]);\n    // console.log(events);\n\treturn (\n\t\t\t<div>\n\n\t\t\t\t <Navbar />\n\n\t\t\t\t  <Container style={{paddingTop: 20}}>\n\n\t\t\t\t\t<Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n\t\t\t\t        <Link color=\"inherit\" href=\"/st/events\" className={classes.link}>\n\t\t\t\t          <DateRangeIcon className={classes.icon} />\n\t\t\t\t          Calendar\n\t\t\t\t        </Link>\n\n\t\t\t\t        <Link\n\t\t\t\t          color=\"textPrimary\"\n\t\t\t\t          href={``}\n\t\t\t\t          aria-current=\"page\"\n\t\t\t\t          className={classes.link}\n\t\t\t\t        >\n\t\t\t\t        <EventNoteIcon className={classes.icon} />\n\t\t\t\t          Events\n\t\t\t\t        </Link>\n\t\t\t\t    </Breadcrumbs>\n\n                        <Fragment>\n                     {/*check if Theres an error\n\n                             <Typography variant=\"h1\" component=\"h2\" color=\"textSecondary\">\n                                            There's an error. Please refresh the page...\n                                        </Typography>\n                     */}\n                            {\n                                ifError\n                                ?\n                                <Grid container spacing={3}>\n                                     <Grid item xs>\n                                     </Grid>\n\n                                     <Grid item xs={6}>\n                                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"center\">\n                                            <WarningIcon style={{color: 'red'}} /> <br />\n                                            There's an error. Please refresh the page...\n                                        </Typography>\n                                     </Grid>\n\n                                    <Grid item xs>\n                                    </Grid>\n                                </Grid>\n                                :\n                                <Fragment>\n                                    {\n                                        events.length === 0 \n                                        ?\n                                          <Grid container spacing={3}>\n                                             <Grid item xs>\n                                             </Grid>\n\n                                             <Grid item xs={6}>\n                                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"center\">\n                                                    <SentimentVerySatisfiedIcon style={{color: 'green'}} /> <br />\n                                                    There are no events for this date. Please other dates for events.\n                                                </Typography>\n                                             </Grid>\n\n                                            <Grid item xs>\n                                            </Grid>\n                                        </Grid>\n\n                                        :\n\n                                    <Fragment>\n                                        {\n\n                                        events.map(event => (\n\n                            <Grid container spacing={3}>\n                                        <Grid item xs>\n                                        </Grid>\n\n                                        <Grid item xs={6}>\n                                             \n                                                <Card className={classes.card}>\n                                                  <CardHeader\n                                                    avatar={\n                                                      <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                                        SOA\n                                                      </Avatar>\n                                                    }\n                                                    // action={\n                                                    //   <IconButton aria-label=\"settings\">\n                                                    //     <MoreVertIcon />\n                                                    //   </IconButton>\n                                                    // }\n                                                    title={event.title}\n                                                    subheader={`${moment(event.dateDate).format('MMMM D YYYY')} by: ${event.setBy}`}\n                                                  />\n\n                                              <CardMedia className={classes.media}>\n                                                    <img style={{height: \"340px\", width: \"450px\"}} src={`${event.poster}`}/>\n                                              </CardMedia>\n\n                                                  <CardContent>\n                                                     <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                      Venue: {event.venue}\n                                                    </Typography>\n\n                                                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                                      {event.description}\n                                                    </Typography>\n                                                  </CardContent>\n                                                  <CardActions disableSpacing>\n                                                  \n                                                  </CardActions>\n                                               \n                                                </Card>\n                                                \n                                        </Grid>\n\n                                        <Grid item xs>\n                                        </Grid>\n\n\n                                 </Grid>\n\n                                            ))\n\n                                    }\n                                    </Fragment>\n\n\n                                    }\n                                </Fragment>\n                            }\n\n                        </Fragment>\n                        \n\n\t\t\t\t  \t</Container>\n\n\t\t\t</div>\n\t\t)\t\n}\n\nexport default StudentEventSingle;","import React, { Fragment, useEffect, useState} from 'react';\nimport { connect } from \"react-redux\";\nimport { registerStudentFalse } from '../../actions/registeredStudentsActions';\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\n\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LocalActivityIcon from '@material-ui/icons/LocalActivity';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Navbar from \"../layouts/Navbar\";\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n  root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    timeFeed: {\n      float: 'right',\n      fontSize: 13\n    },\n      nested: {\n        paddingLeft: theme.spacing(4),\n      },\n}));\n\nfunction Activities(props) {\n\n\tconst classes = useStyles();\n\n\t//State\n\tconst [records, getRecords] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\n\tconst [open,] = useState(true);\n\n\t//If theres a error state\n\tconst [ifError, setIfError] = useState(false);\n\n\t //Campus Fetching State\n     const [campuses, getCampuses] = useState([]);\n     const [loadingCampuses, setLoadingCampuses] = useState(true);\n\n      //Search State\n      const [searchCampus, setSearchCampus] = useState('');\n      const [searchAct, setSearchAct] = useState('');\n\n    //Confirmation state\n    const [openConfirmation, setOpenConfirmation] = useState(false);\n\n\t//Event Handlers\n  const handleClose = _ => {\n    props.registerStudentFalse();\n    setOpenConfirmation(false);\n  }\n\n\t//Component Effect\n\tuseEffect(_ => {\n\t\taxios.get('/api/assessments/')\n\t\t.then(res => {\n\t\t\tgetRecords(res.data);\n\t\t\tsetLoading(false);\n\t\t})\n\t\t.catch(err => {\n\t\t\tif(err)\n\t\t\t\tsetIfError(true)\n\t\t})\n\t},[props.registeredStudents.registered]);\n\n\t useEffect( _ => {\n\n            // const id = setInterval( _ => {\n                (async _ => {\n                    const res = await axios.get('/api/campuses');\n                    getCampuses(res.data);\n                    setLoadingCampuses(false)\n                })();\n            // }, 2000)\n\n            // return _ => {\n                // clearInterval(id);\n            // }\n\n        },[]);\n\n   useEffect(_ => {\n      if(props.registeredStudents.registered)\n          setOpenConfirmation(true)\n\n   },[props.registeredStudents.registered])\n\n\tconst rows =  records.filter(row => row.status === 'approved')\n\t// console.log(rows);\n\n  return (\n    <div>\n    \t<Navbar />\n\n    \t\t<Container style={{paddingTop: 20}}>\n\n        <Dialog\n        open={openConfirmation}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Activity joined successfully\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n           Activity joined successfully, We will notify you on your mobile number for any update. Please be always aware.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n\n    \t\t \t<Paper className={classes.root} elevation={10} >\n    \t\t \t<Typography variant=\"h5\" component=\"h3\">\n                    Check Activities to partipate with:\n                  </Typography>\n                    \n                    <br/>\n\n           \t\n           \t <div  style={{paddingBottom: 10}}>\n                 <Grid container spacing={3}>\n\n           \t \t <Grid item xs={12} sm={6}>\n                         <FormControl fullWidth>\n                                  <TextField\n                                      id=\"standard-select-currency-native\"\n                                      select\n                                      label=\"Search by campus\"\n                                      value={searchCampus}\n                                      onChange={e => setSearchCampus(e.target.value)}\n                                      SelectProps={{\n                                        native: true,\n                                      }}\n                                    >\n                                      {   loadingCampuses \n                                      ?\n                                          <option></option> \n                                          :\n\n                                          <Fragment>\n                                              <option></option>\n                                              {campuses.map((campus,id) => {\n                                                return(\n                                                <option key={id} value={campus.campusname}>{campus.campusname}</option>\n                                                )\n                                              })}\n                                          </Fragment>\n                                      }\n                                    </TextField>\n                            </FormControl>\n                      </Grid>\n\n                       <Grid item xs={12} sm={6}>\n  \t\t\t\t\t\t\t <TextField\n                                id=\"searchAct\"\n                                name=\"searchAct\"\n                                label=\"Search by Activity\"\n                                fullWidth\n                                className=\"classes.formControl\"\n                                value={searchAct}\n                                autoComplete=\"searchDept\"\n                                onChange={e => setSearchAct(e.target.value)}\n                             />\n                       </Grid>\n                </Grid>\n\n                </div>\n                \t\t{\n                \t\t\tloading\n                \t\t\t?\n                \t\t\t<center>\n                \t\t\t <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                \t\t\t</center>\n                \t\t\t:\n                \t\t\t<Fragment>\t\n                \t\t\t\t {\n                \t\t\t\t \tifError\n                \t\t\t\t \t?\n                \t\t\t\t \t<span>\n                \t\t\t\t \tThere's a error, Please reload the page again...\n                \t\t\t\t \t</span>\n                \t\t\t\t \t: \n                \t\t\t\t \t<Fragment>\n                \t\t\t\t \t\t{\n                \t\t\t\t \t\t\tsearchCampus === '' && searchAct === ''\n                \t\t\t\t \t\t\t?\n\n                \t\t\t\trows.map(row => (\n\t\t                    \t\t\t<Fragment>\n\t\t                    \t\t\t  <ListItem button>\n\t\t\t\t\t                       \t <ListItemText primary={row.activity} />\n\t\t                       \t\t\t </ListItem>\n\t\t                       \t\t\t <Collapse in={open} timeout=\"auto\" unmountOnExit>\n\t\t                       \t\t\t <div className={classes.nested}>\n\t\t                       \t\t\t \t\t<p>\n\t\t\t\t\t\t\t\t                   \t<Typography component=\"span\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t                   \t\tAbout the activity:\n\t\t\t\t\t\t\t\t                   \t</Typography> &nbsp;\n\t\t\t\t\t\t\t\t                   \t{row.description}\n\t\t\t\t\t\t\t\t                   \t</p>\n\t\t\t\t\t\t\t                   \t<p>\n\t\t\t\t\t\t\t\t                   \t<Typography component=\"span\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t                   \t\tCampus:\n\t\t\t\t\t\t\t\t                   \t</Typography> &nbsp;\n\t\t\t\t\t\t\t\t                   \t{row.campus}\n\t\t\t\t\t\t\t\t                   \t</p>\n\t\t\t\t\t\t\t                   \t<p>\n\n\t\t\t\t\t\t\t                   \t<Typography component=\"span\" color=\"textSecondary\">\n\t\t\t\t\t\t\t                   \tRequirements to join:\n\t\t\t\t\t\t\t                   \t</Typography> &nbsp;\n\t\t\t\t\t\t\t                   \t{row.activityRequirements}\n\t\t\t\t\t\t\t                   \t</p>\n\t\t\t\t\t\t\t                   \t<p>\n\t\t\t\t\t\t\t                   \t \t<Typography component=\"span\" color=\"textSecondary\">\n\t\t\t\t\t\t\t                   \t\t\tDate: \n\t\t    \t\t\t\t\t\t\t\t\t\t</Typography>&nbsp;\n\t\t\t\t\t\t\t                   \t\t{row.date}\n\t\t\t\t\t\t\t                   \t</p>\n\n\t\t\t\t\t\t\t                   \t       <Button \n\t\t\t\t\t\t\t\t                        href={`/st/activities/${row.id}/${row.activity}`}\n\t\t\t\t\t\t\t\t                        className={classes.button}\n\t\t\t\t\t\t\t\t                        variant=\"outlined\" \n\t\t\t\t\t\t\t\t                        color=\"primary\"\n\t\t\t\t\t\t\t\t                        >\n\t\t\t\t\t\t\t\t                        Join Activity\n\t\t\t\t\t\t\t\t                    </Button>\n\n\t\t\t\t\t                   \t</div>\n\t\t                        \t\t</Collapse>\n\t\t                    \t\t</Fragment>\n                    \t\t))\n                \t\t\t\t \t\t\t:\n\t\t\t                \t\t\trows.filter(row => row.activity.toLowerCase().search(searchAct.toLowerCase()) !== -1 && row.campus === searchCampus)\n\t\t\t                \t\t\t.map(row => (\n\t\t\t                    \t\t<Fragment>\n\t\t\t                    \t\t\t  <ListItem button>\n\t\t\t\t\t\t                       \t <ListItemText primary={row.activity} />\n\t\t\t                       \t\t\t </ListItem>\n\t\t\t                       \t\t\t <Collapse in={open} timeout=\"auto\" unmountOnExit>\n\t\t\t                       \t\t\t <div className={classes.nested}>\n\t\t\t                       \t\t\t \t\t<p>\n\t\t\t\t\t\t\t\t\t                   \t<Typography component=\"span\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t                   \t\tAbout the activity:\n\t\t\t\t\t\t\t\t\t                   \t</Typography> &nbsp;\n\t\t\t\t\t\t\t\t\t                   \t{row.description}\n\t\t\t\t\t\t\t\t\t                   \t</p>\n\t\t\t\t\t\t\t\t                   \t<p>\n\t\t\t\t\t\t\t\t\t                   \t<Typography component=\"span\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\t                   \t\tCampus:\n\t\t\t\t\t\t\t\t\t                   \t</Typography> &nbsp;\n\t\t\t\t\t\t\t\t\t                   \t{row.campus}\n\t\t\t\t\t\t\t\t\t                   \t</p>\n\t\t\t\t\t\t\t\t                   \t<p>\n\n\t\t\t\t\t\t\t\t                   \t<Typography component=\"span\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t                   \tRequirements to join:\n\t\t\t\t\t\t\t\t                   \t</Typography> &nbsp;\n\t\t\t\t\t\t\t\t                   \t{row.activityRequirements}\n\t\t\t\t\t\t\t\t                   \t</p>\n\t\t\t\t\t\t\t\t                   \t<p>\n\t\t\t\t\t\t\t\t                   \t \t<Typography component=\"span\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t                   \t\t\tDate: \n\t\t\t    \t\t\t\t\t\t\t\t\t\t</Typography>&nbsp;\n\t\t\t\t\t\t\t\t                   \t\t{row.date}\n\t\t\t\t\t\t\t\t                   \t</p>\n\n\t\t\t\t\t\t\t\t                   \t       <Button \n\t\t\t\t\t\t\t\t\t                         href={`/st/activities/${row.id}/${row.activity}`}\n\t\t\t\t\t\t\t\t\t                        className={classes.button}\n\t\t\t\t\t\t\t\t\t                        variant=\"outlined\" \n\t\t\t\t\t\t\t\t\t                        color=\"primary\"\n\t\t\t\t\t\t\t\t\t                        >\n\t\t\t\t\t\t\t\t\t                        Join Activity\n\t\t\t\t\t\t\t\t\t                    </Button>\n\n\t\t\t\t\t\t                   \t</div>\n\t\t\t                        \t\t</Collapse>\n\t\t\t                    \t\t</Fragment>\n\t\t\t                    \t\t))\n\n                \t\t\t\t \t\t}\n                \t\t\t\t \t</Fragment>\n                \t\t\t\t }\n                \t\t\t</Fragment>\n                \t\t}\n\n\n              \n    \t\t \t</Paper>\n\n    \t\t </Container>\n\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  registeredStudents: state.registeredStudents,\n});\n\nconst mapDispatchToProps = { registerStudentFalse };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Activities);","import axios from 'axios';\n\nimport {\n\tSET_STUDENT_REGISTERED_ORG,\n\tSET_STUDENT_REGISTERED_ORG_FALSE, \n\n\tSET_STUDENT_FULL_REQ,\n\n\tSET_STUDENT_REGISTERED_HEAD,\n\tSET_STUDENT_REGISTERED_HEAD_FALSE,\n\tSET_STUDENT_INACTIVE_HEAD,\n\tSET_STUDENT_INACTIVE_HEAD_FALSE,\n\n\tGET_ERRORS\n} from './types';\n\nexport const registerStudent = (data, notif) => dispatch => {\n\n\taxios.post('/api/registeredStudents/registerStudent', data)\n\t.then(res => dispatch({\n\t\ttype: SET_STUDENT_REGISTERED_ORG\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n        payload: err.response.data,\n\t}));\n\n\taxios.post('/api/registeredStudents/sendNotifToOrg', notif)\n\t.then(res => res)\n\t.catch(err => console.log(err));\n\n}\n\nexport const registerStudentFalse = _ => {\n\treturn { type: SET_STUDENT_REGISTERED_ORG_FALSE }\n}","import React, { Fragment, useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { registerStudent } from '../../actions/registeredStudentsActions';\nimport { connect } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nimport Navbar from \"../layouts/Navbar\";\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n  root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    timeFeed: {\n      float: 'right',\n      fontSize: 13\n    },\n      nested: {\n        paddingLeft: theme.spacing(4),\n      },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n    formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n    },\n   submit:{\n        marginTop: theme.spacing(3),\n      },\n}));\n\nfunction JoinActivity(props) {\n\t\n\tconst classes = useStyles();\n\n\t//States\n\tconst [activity, getActivity] = useState({});\n\n\tconst [departments, getDepartments] = useState([]);\n\tconst [loadingDepartments, setLoadingDepartments] = useState(true);\n\n\t//Body State\n\tconst [values, setValues] = useState({\n\t\tactivityId: null,\n\t\tactivityTitle: '',\n\t\tcampus: '',\n\t\tstudentName: '',\n\t\tsrCode: '',\n\t\tdepartment: '',\n\t\tyr: '',\n\t\tsection: '',\n\t\tcontactNumber: ''\n\t})\n\n\t//Erros State\n\tconst [errors, getErrors] = useState({})\n\n\t//Event Handlers\n\tconst fetchAssessments = _ => {\n\t\taxios.get(`/api/assessments/getAssessments/${props.match.params.id}/${props.match.params.activity}`)\n\t\t.then(res => {\n\t\t\tgetActivity(res.data);\n\t\t\tsetValues({...values, activityTitle: res.data.activity, \n\t\t\t\tcampus: res.data.campus, activityId: res.data.id})\n\t\t})\n\t\t.catch(err => console.log(err));\n\t}\n\n\tconst fetchDepartments = _ => {\n\t\taxios.get('/api/departments')\n\t\t.then(res =>{\n\t\t\tgetDepartments(res.data);\n\t\t\tsetLoadingDepartments(false);\n\t\t})\n\t\t.catch(err => console.log(err));\n\t}\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tconst notif = {\n\t\t\tusername: activity.username,\n\t\t\torgname: activity.createdBy,\n\t\t\tnotification : `A student named ${values.studentName} has joined the activity named ${values.activityTitle}. Please check if his/her requirements is complete.`\n\t\t}\n\n\t\t// console.log(values);\n\t\t// console.log(notif);\n\t\tprops.registerStudent(values, notif);\n\t}\n\n\t//Component Effect\n\tuseEffect(_ => {\n\t\tfetchAssessments();\n\t\tfetchDepartments();\n\t},[]);\n\n\tuseEffect(_ => {\n\t\tif(props.registeredStudents.registered)\n\t\t\tprops.history.push('/st/activities')\n\t},[props.registeredStudents.registered])\n\n\t// Component Effect in errors\n\tuseEffect(_ => {\n\t\tif(props.errors)\n\t\t\tgetErrors(props.errors)\n\t},[props.errors])\n\n\t// console.log(activity);\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar />\n\t\t\t\t<Container style={{paddingTop: 20}}>\n\n\t\t\t\t\t\t<Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n\t\t\t\t        <Link color=\"inherit\" href=\"/st/activities\" className={classes.link}>\n\t\t\t\t          <AssessmentIcon className={classes.icon} />\n\t\t\t\t          Assessment Activities\n\t\t\t\t        </Link>\n\n\t\t\t\t        <Link\n\t\t\t\t          color=\"textPrimary\"\n\t\t\t\t          href={``}\n\t\t\t\t          aria-current=\"page\"\n\t\t\t\t          className={classes.link}\n\t\t\t\t        >\n\t\t\t\t        <EventNoteIcon className={classes.icon} />\n\t\t\t\t          Join \n\t\t\t\t        </Link>\n\t\t\t\t    </Breadcrumbs>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Grid container spacing={3}>\n\n\t\t\t\t\t\t\t<Grid item md>\n\t\t             \t\t</Grid>\n\n\t\t             \t\t\t<Grid item md={8} xs={12}>\n\t\t\t\t\t\t\t\t\t<Paper className={classes.root} elevation={10} >\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\" align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t        Join Activity\n\t\t\t\t\t\t\t\t\t\t\t  </Typography>\n\t\t\t\t\t\t\t\t\t\t\t   <br></br>\n\n\t\t\t\t\t\t\t\t\t\t\t   <form noValidate onSubmit={handleSubmit}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={3}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField \n   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.activityTitle}\n\t\t\t\t\t\t                                        id=\"activityTitle\"\n\t\t\t\t\t\t                                        name=\"activityTitle\"\n\t\t\t\t\t\t                                        label=\"Activity Name\"\n\t\t\t\t\t\t                                        fullWidth\n\t\t\t\t\t\t                                        InputProps={{\n\t\t\t\t\t\t\t                                       \t readOnly: true,\n\t\t\t\t\t\t\t                                      \t}}\n\t\t\t\t\t\t                                            />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.campus}\n\t\t\t\t\t\t                                        id=\"campus\"\n\t\t\t\t\t\t                                        name=\"campus\"\n\t\t\t\t\t\t                                        label=\"What Campus\"\n\t\t\t\t\t\t                                        fullWidth\n\t\t\t\t\t\t                                        InputProps={{\n\t\t\t\t\t\t\t                                       \t readOnly: true,\n\t\t\t\t\t\t\t                                      \t}}\n\t\t\t\t\t\t                                            />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t   \t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t   \t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t   \t\t\t<br />\n\n\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.studentName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setValues({...values, studentName: e.target.value})}\n\t\t\t\t\t\t                                        id=\"studentName\"\n\t\t\t\t\t\t                                        name=\"studentName\"\n\t\t\t\t\t\t                                        label=\"Enter your full name\"\n\t\t\t\t\t\t                                        fullWidth\n\t\t\t\t\t\t                                      \tautoComplete\n\t\t\t\t\t\t                                            />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t    <span style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\t\t                                {errors.studentName}\n\t\t\t\t\t\t\t\t\t                            </span>\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.srCode}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setValues({...values, srCode: e.target.value})}\n\t\t\t\t\t\t                                        id=\"srCode\"\n\t\t\t\t\t\t                                        name=\"srCode\"\n\t\t\t\t\t\t                                        label=\"SR-Code\"\n\t\t\t\t\t\t                                        fullWidth\n\t\t\t\t\t\t                                      \tautoComplete\n\t\t\t\t\t\t                                            />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\t\t                                {errors.srCode}\n\t\t\t\t\t\t\t\t\t                            </span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t                                    {/* College Year TextField */}\n\t\t\t\t\t\t\t                                <FormControl className={classes.formControl}>\n\t\t\t\t\t\t\t                                        <InputLabel htmlFor=\"yr-simple\">College Year</InputLabel>\n\t\t\t\t\t\t\t                                        <Select\n\t\t\t\t\t\t\t                                            value={values.yr}\n\t\t\t\t\t\t\t                                            onChange={e => setValues({...values, yr: e.target.value})}\n\t\t\t\t\t\t\t                                            inputProps={{\n\t\t\t\t\t\t\t                                            name: 'yr',\n\t\t\t\t\t\t\t                                            id: 'yr-simple',\n\t\t\t\t\t\t\t                                            }}\n\t\t\t\t\t\t\t                                        >\n\t\t\t\t\t\t\t                                            <MenuItem value={'1st'}>1st</MenuItem>\n\t\t\t\t\t\t\t                                            <MenuItem value={'2nd'}>2nd</MenuItem>\n\t\t\t\t\t\t\t                                            <MenuItem value={'3rd'}>3rd</MenuItem>\n\t\t\t\t\t\t\t                                            <MenuItem value={'4th'}>4th</MenuItem>\n\t\t\t\t\t\t\t                                            <MenuItem value={'5th'}>5th</MenuItem>\n\t\t\t\t\t\t\t                                            <MenuItem value={'Longer than 5th'}>Longer than 5th</MenuItem>\n\t\t\t\t\t\t\t                                        </Select>\n\t\t\t\t\t\t\t                                    </FormControl>\n\t\t\t\t\t\t\t                             </Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\t\t                                {errors.yr}\n\t\t\t\t\t\t\t\t\t                            </span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={3}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl className={classes.formControl}>\n\n\t\t\t\t\t\t\t                                        <InputLabel htmlFor=\"department-simple\">Department</InputLabel>\n\n\t\t\t\t\t\t\t                                        <Select\n\t\t\t\t\t\t\t                                        value={values.department}\n\t\t\t\t\t\t\t                                        onChange={e => setValues({...values, department: e.target.value})}\n\t\t\t\t\t\t\t                                        inputProps={{\n\t\t\t\t\t\t\t                                        name: 'department',\n\t\t\t\t\t\t\t                                        id: 'department-simple',\n\t\t\t\t\t\t\t                                        }}\n\t\t\t\t\t\t\t                                        >\n\n\t\t\t\t\t\t\t                                        {loadingDepartments ?\n\n\t\t\t\t\t\t\t                                        <MenuItem></MenuItem> :\n\n\t\t\t\t\t\t\t                                        departments.map((department,id) => {\n\t\t\t\t\t\t\t                                        return ( <MenuItem key={id} value={department.department}>{department.department}</MenuItem>)\n\t\t\t\t\t\t\t                                        })   \n\t\t\t\t\t\t\t                                        }\n\n\n\t\t\t\t\t\t\t                                        </Select>\n\t\t\t\t\t\t\t                                                \n\t\t\t\t\t\t\t                                </FormControl>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.section}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setValues({...values, section: e.target.value})}\n\t\t\t\t\t\t                                        id=\"section\"\n\t\t\t\t\t\t                                        name=\"section\"\n\t\t\t\t\t\t                                        label=\"Section\"\n\t\t\t\t\t\t                                        fullWidth\n\t\t\t\t\t\t                                      \tautoComplete\n\t\t\t\t\t\t                                            />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: \"red\", paddingRight: 60 }}>\n\t\t\t\t\t\t\t\t\t                                {errors.department}\n\t\t\t\t\t\t\t\t\t                      </span>\n\n\t\t\t\t\t\t\t\t\t                      <span style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\t\t                                {errors.section}\n\t\t\t\t\t\t\t\t\t                        </span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.contactNumber}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setValues({...values, contactNumber: e.target.value})}\n\t\t\t\t\t\t                                id=\"contactNumber\"\n\t\t\t\t\t\t                                name=\"contactNumber\"\n\t\t\t\t\t\t                                label=\"Contact Number\"\n\t\t\t\t\t\t                                type=\"number\"\n\t\t\t\t\t\t                                fullWidth\n\t\t\t\t\t\t                                autoComplete\n\t\t\t\t\t\t                                            />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\t\t                {errors.contactNumber}\n\t\t\t\t\t\t\t\t\t            </span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t <Button\n\t\t\t\t\t                                type=\"submit\"\n\t\t\t\t\t                                fullWidth\n\t\t\t\t\t                                variant=\"contained\"\n\t\t\t\t\t                                color=\"primary\"\n\t\t\t\t\t                                className={classes.submit}\n\t\t\t\t\t                            >\n\t\t\t\t\t                                submit\n\t\t\t\t\t                            </Button>\n\n\n\t\t\t\t\t\t\t\t\t\t\t   </form>\n\t\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item md>\n\t\t             \t\t</Grid>\n\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t)\n}\n\nconst mapStateToProps = state => ({\n\tregisteredStudents: state.registeredStudents,\n\terrors: state.errors\n});\n\nconst mapDispatchToProps = { registerStudent };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinActivity);","import axios from 'axios';\n\nimport {\n\t//Organization SIde\n\tGET_ORG_FEEDS,\n\tGET_REQUEST_ACTIVITIES,\n\tSUBMIT_REQUEST_ACTIVITIES,\n\tREQUEST_ACTIVITIES_LOADING,\n\n\t// SOA Head SIde \n\tCOUNT_REQUEST_ACTIVITIES_NOTIF,\n\tGET_REQUEST_ACTIVITIES_HEAD,\n\tUPDATE_COUNT_NOTIF,\n\tSET_APPROVED_REQUEST_ACTIVITIES_HEAD,\n\tSET_DECLINED_REQUEST_ACTIVITIES_HEAD,\n\t// SOA Admin Side \n\tSET_APPROVED_REQUEST_ACTIVITIES_ADMIN,\n\tSET_DECLINED_REQUEST_ACTIVITIES_ADMIN,\n\n\tGET_ERRORS,\n} from './types';\n\n/* Organization Side */\n\n// Getting the data in the org_feeds table \nexport const getOrgFeeds = _ => dispatch => {\n\tdispatch(setRecordLoading);\n\taxios.get('/api/requestactivities/getorgfeeds')\n\t.then(res => dispatch({\n\t\ttype: GET_ORG_FEEDS,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => err);\n};\n//Getting the activities data in the database\nexport const getActivities = _ => dispatch => {\n\tdispatch(setRecordLoading);\n\taxios.get('/api/requestactivities/getrequestactivities')\n\t.then(res => dispatch({\n\t\ttype: GET_REQUEST_ACTIVITIES,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => err);\n};\n\n\n//Action for request sumittions\nexport const submitRequest = data => dispatch => {\n\taxios.post('/api/requestactivities/submitrequest', data)\n\t.then(res => dispatch({\n\t\ttype: SUBMIT_REQUEST_ACTIVITIES,\n\t\tpayload: res.data,\n\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\n};\n\n\n/* SOA Head Side */\nexport const countNotifHead = request => dispatch => {\n\taxios.get(`/api/requestactivities/countheadrequest/${request}`)\n\t.then(res => dispatch({\n\t\ttype: COUNT_REQUEST_ACTIVITIES_NOTIF,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\n}\n\nexport const getActivitiesHead = _ => dispatch => {\n\tdispatch(setRecordLoading);\n\taxios.get('/api/requestactivities/getrequestactivities')\n\t.then(res => dispatch({\n\t\ttype: GET_REQUEST_ACTIVITIES_HEAD,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => err);\n}\n\nexport const updateCountNotif = (notif, campus) => dispatch => {\n\taxios.post(`/api/requestactivities/updatecountheadrequest/${campus}`, notif)\n\t.then(res => dispatch({\n\t\ttype: UPDATE_COUNT_NOTIF,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\n}\n\nexport const setApprovedHead = (id, data, data2) => dispatch => {\n\taxios.post(`/api/requestactivities/approverequestactivityhead/${id}`, data)\n\t.then(res => dispatch({\n\t\ttype: SET_APPROVED_REQUEST_ACTIVITIES_HEAD,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\n\n\taxios.post('/api/requestactivities/requestactivityapproved/notif', data2)\n\t.then(res => res)\n\t.catch(err => err);\n}\n\nexport const setDeclinedHead = (id, data, data2) => dispatch => {\n\taxios.post(`/api/requestactivities/declinedrequestactivityhead/${id}`, data)\n\t.then(res => dispatch({\n\t\ttype: SET_DECLINED_REQUEST_ACTIVITIES_HEAD,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\n\n\taxios.post('/api/requestactivities/requestactivitydeclined/notif', data2)\n\t.then(res => res)\n\t.catch(err => err)\n}\n\n/* SOA Admin Side */\n\nexport const setApprovedAdmin = (id, data, data2) => dispatch => {\n\taxios.post(`/api/requestactivities/approverequestactivityadmin/${id}`, data)\n\t.then(res => dispatch({\n\t\ttype: SET_APPROVED_REQUEST_ACTIVITIES_ADMIN,\n\t\tpayload: res.data\n\t}))\t\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\n\t}));\t\n\n\taxios.post('/api/requestactivities/requestactivityapprovedadmin/notif', data2)\n\t.then(res => res)\n\t.catch(err => err)\n};\n\nexport const setDeclinedAdmin = (id, data, data2) => dispatch => {\n\taxios.post(`/api/requestactivities/declinerequestactivityadmin/${id}`, data)\n\t.then(res => dispatch({\n\t\ttype: SET_DECLINED_REQUEST_ACTIVITIES_ADMIN,\n\t\tpayload: res.data\n\t}))\t\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\t\n\n\taxios.post('/api/requestactivities/requestactivitydeclinedadmin/notif', data2)\n\t.then(res => res)\n\t.catch(err => err)\n};\n\nexport const setRecordLoading = _ => {\n\treturn { type: REQUEST_ACTIVITIES_LOADING }\n};","import React, { useState, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport HomeIcon from '@material-ui/icons/Home';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport EventIcon from '@material-ui/icons/Event';\n\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\n\nconst useStyles = makeStyles(theme => ({\n    nested: {\n        paddingLeft: theme.spacing(2),\n      },\n}))\n\nfunction SideListNavbar2 (props) {\n\n    const classes = useStyles();\n\n    //state\n    const [count, setCount] = useState(0);\n    const [notifUpdated, setNotifUpdated] = useState(false);\n\n    //Event handlers/\n         const handleUpdateNotif = status => {\n                const { auth } = props;\n                const read = { status };\n\n                axios.post(` /api/requestactivities/updatenotifcountorg/${auth.user.username}`, read)\n                .then(res => {\n                    setNotifUpdated(true);\n                    props.history.push('/org/notifications');\n                })\n                .catch(err => console.log(err));\n            }\n\n    //component effect\n\n     useEffect(_ => {\n        const { auth } = props;\n\n        axios.get(`/api/requestactivities/countorgnotif/${auth.user.username}`)\n        .then(res => setCount(res.data))\n        .catch(err => err);\n\n    },[notifUpdated]);\n\n        return (\n            <div className={classes.nested}>\n                 <List>\n                    {/* Inclide a component of a for anchor tag */}\n                    {/* Home Link  */}\n                <ListItem button component=\"a\" href=\"/org\">\n                    <ListItemIcon>\n                        <HomeIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Home\" />\n                </ListItem>\n\n                {/* Calendar of Events components  */}\n                <ListItem button component=\"a\" href=\"/org/calendar\">\n                    <ListItemIcon>\n                        <EventIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Calendar\" />\n                </ListItem>\n\n                {/* Org Reports components  */}\n                <ListItem button component=\"a\" href=\"/org/activitysections\">\n                    <ListItemIcon>\n                         <InboxIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Activities (Request, Reports)\" />\n                </ListItem>\n\n              <ListItem button component=\"a\" href=\"/org/assessment\">\n                        <ListItemIcon>\n                                <AssessmentIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Activity Assessment\" />\n                        </ListItem>\n\n\n                <ListItem button component=\"a\" href=\"#\" onClick={_ => handleUpdateNotif('read')}>\n                \t\t <ListItemIcon>\n                            <Badge badgeContent={count} color=\"secondary\">\n\t\t\t\t\t\t        <NotificationsIcon />\n\t\t\t\t\t\t      </Badge>\n                        </ListItemIcon>\n\n                        <ListItemText primary=\"Notifications\" />\n\n                </ListItem>\n\n              </List>\n              \n              <Divider />\n\n              <List>\n                    {/* Downloadable Files Page  */}\n                    <ListItem button onClick={props.onClickDownload}>\n                        <ListItemIcon>\n                            <GetAppIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Downloadable Files\" />\n                    </ListItem>\n\n                    <ListItem style={{ color: \"red\" }} button onClick={props.onClick}>\n                        <ListItemIcon>\n                            <PowerSettingsNewIcon color=\"error\"/>\n                        </ListItemIcon>\n                        <ListItemText \n                        primary=\"Logout\" />\n                    </ListItem>\n                </List>\n              \n            </div>\n        )\n    }\n\nSideListNavbar2.propTypes = {\n    auth: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default withRouter(connect(mapStateToProps)(SideListNavbar2)) ;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getRecordsInOrg } from '../../actions/fileSharingActions'\n\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nfunction OrgFileDownload(props) {\n\n\tuseEffect(_ => {\n\t\tprops.getRecordsInOrg();\n\t},[])\n\n\t\tconst rows = props.fileSharing.orgs.sort((a,b) => (a.created_at > b.created_at ? -1 : 1));\n\n\treturn (\n\n\t\t<Dialog onClose={props.handleClose} \n\t\taria-labelledby=\"simple-dialog-title\"\n\t\topen={props.open}\n\t\t>\n\t\t <DialogTitle id=\"simple-dialog-title\">Files that can be downloaded</DialogTitle>\n\t\t<List>\n\t\t\t{\n\t\t\t\tprops.fileSharing.loadingOrg \n\t\t\t\t?\n\t\t\t\t<ListItem>\n\t\t            <ListItemText primary=\"Loading..,\" />\n\t\t          </ListItem>\n\t\t         :\n\t\t         rows.map(row => (\n\t\t\t         <ListItem key={row.id}>\n\t\t\t            <ListItemAvatar>\n\t\t\t             \t<a href={row.file} target=\"_blank\">\n                                 <GetAppIcon />\n                             </a>\n\t\t\t            </ListItemAvatar>\n\t\t\t            <ListItemText primary={row.fileName} />\n\t\t\t          </ListItem>\n\t\t         \t))\n\t\t\t}\n\t\t</List>\n\t\t\t\n\t\t</Dialog>\n\n\t\t);\n}\n\nconst mapStateToProps = state => ({\n\tfileSharing: state.fileSharing\n});\n\nconst mapDispatchToProps = { getRecordsInOrg };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrgFileDownload);","import React, { useState, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport axios from 'axios';\nimport { withRouter } from \"react-router\";\nimport SideListNavbar2 from './SideListNavbar2';\n\n//Materialize Components\nimport { withStyles , makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\n\nimport OrgFileDownload from '../org/OrgFileDownload';\n\nconst useStyles = makeStyles(theme => ({\n     root: {\n        width: \"100%\",\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\"\n        },\n        flexGrow: 1\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n\n    //Drawer style components\n    list:{\n        width: 250,\n    }\n}));\n\nconst styles = theme => ({\n    root: {\n        width: \"100%\",\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\"\n        },\n        flexGrow: 1\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n\n    //Drawer style components\n    list:{\n        width: 250,\n    }\n});\n\nconst Transition = props => {\n    return <Slide direction=\"up\" {...props} />\n}\n\n\n//Navbar For Students\nfunction Navbar2 (props) {\n\n    // State ++++++++++++++\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [anchorDropDownEl, setAnchorDropDownEl] = useState(null);\n    const [modalLogout, setModalLogout] = useState(null);\n    const [open, setOpen] = useState(false); \n    const [side, setSide] = useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    // Notification count\n    const [count, setCount] = useState(0);\n\n    const [notifUpdated, setNotifUpdated] = useState(false);\n\n    // Event Handlers +++++++++++++\n\n    //Drawer Toggle\n   const toggleDrawer = (side, open) => event => {\n\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setSide({ ...side, [side]: open });\n    }\n\n    const handleActivityOpen = e => {\n        // this.setState({ anchorEl: e.currentTarget });\n        setAnchorEl(e.currentTarget);\n    }\n\n   const handleMenuClose = _ => {\n        // this.setState({ anchorEl: null });\n        setAnchorEl(null);\n    }\n\n   const handleSettingsOpen = e =>  {\n        // this.setState({ anchorDropDownEl: e.currentTarget });\n        setAnchorDropDownEl(e.currentTarget);\n    }\n\n    const handleSettingsClose = _ => {\n        // this.setState({ anchorDropDownEl: null });\n        setAnchorDropDownEl(null);\n    }\n\n    // Modal Logout Function \n    const onModalLogoutClick = _ => {\n        // this.setState({ modalLogout: true })\n        // this.setState({ anchorDropDownEl: null });\n            setModalLogout(true);\n            setAnchorDropDownEl(null)\n    }\n\n    const onHandleLogoutClickClose = _ => {\n        // this.setState({ modalLogout: false })\n        setModalLogout(false);\n    }\n\n    // Logout Function\n    const onLogoutClick = _ => {\n        props.logoutUser();\n    }\n\n    const handleUpdateNotif = status => {\n        const { auth } = props;\n        const read = { status };\n\n        axios.post(` /api/requestactivities/updatenotifcountorg/${auth.user.username}`, read)\n        .then(res => {\n            setNotifUpdated(true);\n            props.history.push('/org/notifications');\n        })\n        .catch(err => console.log(err));\n    }\n\n    const handleClose = _ => {\n        setOpen(false)\n    }\n\n    const openModalDownloads = _ => {\n        setOpen(true);\n        setAnchorDropDownEl(null)\n    }\n\n    const onClickDownload = _ => {\n         setOpen(true);\n    }   \n\n    // Component Effects ++++++++++++++\n\n    // Getting the notification count \n    useEffect(_ => {\n        const { auth } = props;\n\n        axios.get(`/api/requestactivities/countorgnotif/${auth.user.username}`)\n        .then(res => setCount(res.data))\n        .catch(err => err);\n\n    },[notifUpdated]);\n\n\n        const classes  = useStyles();\n        const isMenuOpen = Boolean(anchorEl);\n        const isSettingsOpen = Boolean(anchorDropDownEl);\n\n        // Activities Mobile Components\n        const renderMenu = (\n            <Menu\n                anchorEl={anchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMenuOpen}\n                onClose={handleMenuClose}\n            >\n                <MenuItem onClick={handleMenuClose}>Menu Item 1 </MenuItem>\n                <MenuItem onClick={handleMenuClose}>Menu Item 2 </MenuItem>\n            </Menu>\n        );\n            // Setings Monile component\n        const renderSettings = (\n            <Menu\n                anchorEl={anchorDropDownEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isSettingsOpen}\n                onClose={handleSettingsClose}\n            >\n                <MenuItem onClick={openModalDownloads}>Downloadable Files </MenuItem>\n                <MenuItem onClick={onModalLogoutClick} style={{ color: \"red\" }}>Logout </MenuItem>\n            </Menu>\n        );\n\n        return (\n            <div className={classes.root}>\n\n                <OrgFileDownload handleClose={handleClose} open={open} />\n\n                {/* Modal */}\n                <Dialog\n                    open={modalLogout}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={onHandleLogoutClickClose}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\">\n                        {\"Logging Out\"}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                            Are you you want to Logout?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={onHandleLogoutClickClose} variant=\"outlined\" color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={onLogoutClick} variant=\"outlined\" color=\"secondary\">\n                            Logout\n                               </Button>\n                    </DialogActions>\n                </Dialog>\n\n\n                {/* Navbar  */}\n                <AppBar position=\"static\">\n                    <Toolbar style={{ background: \"#8a1c1c\" }}>\n                        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n                                SOA Web Portal\n                        </Typography>\n\n                        <div className={classes.sectionDesktop}>\n                            <Button color=\"inherit\" href=\"/org\">Home</Button>\n                            <Button color=\"inherit\" href=\"/org/calendar\">\n                                Calendar\n                            </Button>\n                            <Button color=\"inherit\" href=\"/org/activitysections\">Activities (Request, Reports)</Button>\n                            <Button color=\"inherit\" href=\"/org/assessment\">Activity Assessment</Button>\n\n                        {/* This will be the link for measuring the notifications for the request activities*/}\n                            <Button color=\"inherit\" onClick={_ => handleUpdateNotif('read')}>\n                                <Badge badgeContent={count} color=\"secondary\">\n                                    <NotificationsIcon />\n                                  </Badge>\n                            </Button>\n\n                            <Button\n                                color=\"inherit\"\n                                aria-owns={isSettingsOpen ? 'material-appbar' : undefined}\n                                aria-haspopup=\"true\"\n                                onClick={handleSettingsOpen}\n                            >\n                                <SettingsIcon />\n                            </Button>\n                        </div>\n\n                        {/* Drawer Mobile components  */}\n                        <div className={classes.sectionMobile}>\n                            <Button\n                                onClick={toggleDrawer('right',true)} color=\"inherit\">\n                                <MenuIcon />\n                            </Button>\n                        </div>\n                        {/* Drawer Toggler  */}\n                        <Drawer anchor=\"right\" open={side.right} \n                        onClose={toggleDrawer('right',false)}\n                        >\n                        <div\n                            tabIndex={0}\n                            role=\"button\"\n\n                            // Muted feature because of onClick behavior, always closign every click  in the drawer \n                            onClick={toggleDrawer('right', false)}\n\n                            onKeyDown={toggleDrawer('right', false)}\n                        >\n                            <SideListNavbar2 class={classes.list} onClick={onModalLogoutClick} onClickDownload={onClickDownload} />\n                        </div>\n\n                        </Drawer>\n                        \n\n                    </Toolbar>\n                </AppBar>\n                {renderMenu}\n                {renderSettings}\n            </div>\n        )\n    \n}\n\nNavbar2.propTypes = {\n    classes: PropTypes.object.isRequired,\n    //Logout Func from the authActions\n    logoutUser: PropTypes.func.isRequired,\n    //object prop from the authReducer\n    auth: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nconst mapDispatchToProps = { logoutUser };\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Navbar2)));","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { getOrgFeeds } from '../../actions/requestActivitiesActions';\nimport axios from 'axios';\nimport moment from 'moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport EventIcon from '@material-ui/icons/Event';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport Button from '@material-ui/core/Button';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Navbar2 from \"../layouts/Navbar2\";\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n  root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    timeFeed: {\n      float: 'right',\n      fontSize: 13\n    }\n}));\n\nfunction ListItemLink(props) {\n    return <ListItem button component=\"a\" {...props} />;\n  }\n\nfunction OrgIndex(props) {\n\tconst classes = useStyles();\n\n  // States\n\tconst [orgOnline, setOrgOnline] = useState('');\n  //Loading state for the \n  const [loadingOrgFeeds, setOrgFeeds] = useState(true);\n\n  // Event Handlers\n\n  // Component Effects \n\tuseEffect(_ => {\n\t\tconst { auth } = props;\n\n    // const id = setInterval(_ => {\n          axios.get('/api/org/getorgaccnts')\n        .then(res => {\n          res.data.filter(org => auth.user.username === org.username)\n          .map(org => setOrgOnline(org.orgname))\n        })\n        .catch(err => err)\n\n    // },2000)\n\n    // return _ => {\n    //   clearInterval(id)\n    // }\n\t\t\n\t},[]);\n\n  // Effect for rendering the org feeds\n  useEffect(_ => {\n\n    const id = setInterval(_ => {\n        props.getOrgFeeds();\n        setOrgFeeds(false);\n    }, 2000)\n\n    return _ => {\n      clearInterval(id)\n    }\n\n  },[])\n\n  const { auth, requestActivities } = props;\n\n  const rows = requestActivities.feeds.sort((a, b) => a.created_at > b.created_at ? -1 : 1)\n    .filter(row => row.username === auth.user.username);\n\n        return (\n            <div>\n                <Navbar2 />\n\n    \t\t <Container style={{paddingTop: 20}}>\n\n    \t\t \t<Paper className={classes.root} elevation={10} >\n\n    \t\t \t<Container style={{paddingTop: 20}}>\n\n    \t\t \t\t<Typography variant=\"h5\" component=\"h3\">\n    \t\t \t\t\tWELCOME <span style={{color: 'red'}}> {orgOnline} </span> TO SOA STUDENT ORGANIZATION DASHBOARD\n    \t\t \t\t</Typography>\n    \t\t \t\t<br/>\n\n    \t\t \t\t<Typography component=\"p\">\n                    In this Student Web Portal, You can :\n                    </Typography>\n\n                    <div className={classes.root}>\n\n                    \t<List component=\"nav\">\n\n                       \t {/* Link 1  */}\n                       \t <ListItemLink href=\"/org/calendar\">\n                       \t \t <ListItemIcon>\n                                <EventIcon />\n                            </ListItemIcon>\n                        \t<ListItemText primary=\"View Calendar of Events\" />\n                       \t </ListItemLink>\n\n\t\t\t\t\t\t\t {/* Link 2  */}\n                       \t <ListItemLink href=\"/org/activitysections\">\n                       \t \t <ListItemIcon>\n                       \t \t \t<AssignmentIcon />\n                            </ListItemIcon>\n                        \t<ListItemText primary=\"Send Activity Request and Reports to your SOA Head and the SOA Director\" />\n                       \t </ListItemLink>   \n\n                       \t \t {/* Link 3  */}\n                       \t <ListItemLink href=\"/org/assessment\">\n                       \t \t <ListItemIcon>\n                                <AssessmentIcon />\n                            </ListItemIcon>\n                        \t<ListItemText primary=\"Create Activities for the students to register in the portal\" />\n                       \t </ListItemLink>         \t \n\n                    \t</List>\n                    \t\n                    </div>\n\n                     <center style={{paddingBottom: 20}}>\n\t\t                <Button variant=\"outlined\" color=\"secondary\" className={classes.button}>\n\t\t                    Learn More...\n\t\t                </Button>\n               \t\t </center>\n\n    \t\t \t</Container>\n\n    \t\t \t</Paper>\n\n    \t\t \t<br/>\n\n    \t\t \t<Paper className={classes.root} elevation={5} style={{paddingTop: 20}}>\n\n    \t\t \t<Container style={{paddingTop: 20}}>\n\n    \t\t \t\t<Typography component=\"p\">\n                    \tYour Actitvites:\n                    </Typography>\n\n\n                    <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                   \t  \n                       {\n                        loadingOrgFeeds \n                        ? \n                          <Fragment>\n                             <ListItem>\n                              <CircularProgress color=\"secondary\" />\n                             <ListItemText primary={\"Your Feeds is loading.\"} />\n                             </ListItem>\n                          </Fragment>\n                        :\n                        <Fragment>\n                             { \n\n                              rows.length === 0\n                              ?\n                            <ListItem>\n\n                               <ListItemText primary={\"The organization dont have feed yet.\"} />\n                            </ListItem>\n\n                              :\n                              rows.map(row => (\n                              <Fragment>  \n                                  <ListItem>\n                                       <ListItemText>\n                                       {row.message}\n                                       <span className={classes.timeFeed}>\n                                       {moment(row.created_at).fromNow()}\n                                       </span>\n                                       </ListItemText>\n                                   </ListItem>\n                               </Fragment>\n                                ))\n                            }\n                        </Fragment>\n\n                       }\n                     </List>\n\n                </Container>    \n\n    \t\t \t</Paper>\n\n    \t\t </Container>\n\n\n\n\n            </div>\n        )\n}\n\nconst mapStateToProps = state => ({\n\tauth:state.auth,\n  requestActivities: state.requestActivities\n});\n\nconst mapDispatchToProps = { getOrgFeeds };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrgIndex);\n","import React, { useState } from 'react';\nimport {\n  Link,\n} from \"react-router-dom\";\n\n// Material-ui components \nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Navbar2 from \"../layouts/Navbar2\";\n\n//Picture importing\nimport request from '../img/request.png';\nimport reports from '../img/reports.png'\n\nconst useStyles = makeStyles(theme => ({\n  root:{\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n  },\n  root2: {\n   padding: theme.spacing(2),\n  },\n  card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      cardMedia: {\n        paddingTop: '56.25%', // 16:9\n      },\n      cardContent: {\n        flexGrow: 1,\n      },\n      link: {\n        textDecoration: 'none'\n      }\n}));\n\nfunction ActivityRequestReports(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const preventDefault = (event) => event.preventDefault();\n\n  return (\n\n    <div>\n\n    <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Send an organizational report\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Your about to send a organization report to the admin. As default,\n            your report submitted will archived. Proceed?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n           <Typography>\n               <Link to=\"/org/sendArchive\" className={classes.link}>\n                  <Button color=\"primary\" autoFocus>\n                    Agree\n                  </Button>\n\n                </Link>\n        </Typography>\n\n        </DialogActions>\n      </Dialog>\n\n    <Navbar2 />\n\n      <Container className={classes.root}>\n\n        <Grid container spacing={3}>\n\n            <Grid item xs={12} sm={6}>\n\n              <Card className={classes.card}>\n\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={request}\n                  title=\"Request Activities\"\n                />\n\n                <CardContent className={classes.cardContent}>\n\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          Campus/Department Activity REQUEST\n                    </Typography>\n\n                    <Typography component=\"p\">\n                      Upload the documents of your request activities that to be\n                      checked by your SOA Head of your campus and the SOA Director.\n\n                      Submit it through here.\n                  </Typography>\n\n                </CardContent>\n\n                <CardActions>\n                    <Button href=\"/org/activitysections/requestactivities\" size=\"small\" variant=\"outlined\" color=\"secondary\">\n                        File Request Activity\n                    </Button>\n                </CardActions>\n\n              </Card>\n\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              \n              <Card className={classes.card}>\n\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={reports}\n                  title=\"Report Activities\"\n                />\n\n                <CardContent className={classes.cardContent}>\n\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          Campus/Department Activity REPORTS\n                    </Typography>\n\n                  <Typography component=\"p\">\n                    Upload the Reports of the activities that \n                    already implemented on/off the campuse through here.    \n\n                    The SOA Head of your campus will check. Once the reports is okay, \n                    Your reports will be featured in the students BatStateU for collective \n                    information.\n                  </Typography>\n\n                </CardContent>\n\n                <CardActions>\n                     <Button onClick={_ => setOpen(true)} size=\"small\" variant=\"outlined\" color=\"secondary\">\n                        Submit an Activity Report\n                    </Button>\n                </CardActions>\n\n              </Card>\n\n            </Grid>\n\n        </Grid>\n\n      </Container>\n\n    </div>\n\n  );\n}\n\n\nexport default ActivityRequestReports;","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { getActivities } from '../../actions/requestActivitiesActions';\n\n// Material-ui components \nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GetAppIcon from '@material-ui/icons/GetApp';\n//Header of the Table\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: 'rgb(138, 28, 28)',\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n // Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\n// Table Functions for table pagination \n// Table one \nfunction TablePaginationActions(props) {\n    const classes = useStyles1();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n  \n    const handleFirstPageButtonClick = event => {\n      onChangePage(event, 0);\n    };\n  \n    const handleBackButtonClick = event => {\n      onChangePage(event, page - 1);\n    };\n  \n    const handleNextButtonClick = event => {\n      onChangePage(event, page + 1);\n    };\n  \n    const handleLastPageButtonClick = event => {\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n    // Table Pagination Component \n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"first page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"next page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"last page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n\n // Main Component Style \n const useStyles = makeStyles(theme => ({\n \troot: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 500,\n    },\n    tableWrapper: {\n      overflowX: 'auto',\n    },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n }))\n\nfunction RequestActivitiesHistory(props) {\n\tconst classes= useStyles();\n\n// States \n\n\t// Table pagination Actions states\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  //Loading State\n  const [loading, setLoading] = useState(true);\n\n  // Event Handlers \n\n   const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Component Effect\n\n  // Effect for getting the submitted request Reports \n\n  useEffect(_ => {\n\n    const id = setInterval(_ => {\n      props.getActivities();\n      setLoading(false);\n    }, 2000);\n\n    return _ => {\n      clearInterval(id)\n    };\n\n  },[])\n\n  const { auth, requestActivities } = props;\n\n   //Array of the reports in the lost item reports \n  //The array is now sorted that it only accepts data that is reported today and if the the campus of the user is equal to the campus or the report.\n  const rows = requestActivities.records.sort((a, b) => (a.created_at > b.created_at ? -1 : 1))\n               .filter(row => row.username === auth.user.username);\n\n  //Empty row that says the rows for pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <Fragment>\n    \t\t\n    \t\t{/* Table for the today reports will be here */}\n           <div className={classes.tableWrapper}>\n              <Table className={classes.table} aria-label=\"custom pagination table\">\n\n                <TableHead>\n                  <TableRow>\n                    <StyledTableCell>Req_Act Title</StyledTableCell>\n                    <StyledTableCell align=\"left\">Submitted File</StyledTableCell>\n                  </TableRow>\n                </TableHead>\n\n               {/* Body for displaying the reports */}\n            <TableBody>\n              { loading \n                ? \n                //  If the loading state is still true, this preloader will be displayed\n                  <TableRow>\n                  <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                    <CircularProgress color=\"secondary\" /><br/>\n                    <span>Loading ...</span>\n                  </TableCell>\n                </TableRow>\n                :    \n                // Else if the rows variable with the array of reports have the no data\n                // This component will be displayed\n                <Fragment>\n                  {\n                  rows.length === 0\n                    ?\n                    <TableRow>\n                    <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                        <span>The request you made is still empty. Try inputting the details in the form to submit.</span>\n                    </TableCell>\n                  </TableRow>\n                    :\n                //Then if the rows variable has a data, the date will be presented in the table\n                <Fragment>\n                {\n                  (rowsPerPage > 0\n                    ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    : rows\n                  )\n                  .map((row, id) => (\n                    // The row where all the datas will be displayed \n                  <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.activity_title}\n                  </TableCell>\n                  <TableCell align=\"left\">\n                  <a href={row.file} target=\"_blank\">\n                     <GetAppIcon />\n                  </a>\n                  {row.fileName}\n                  </TableCell>  \n                  </TableRow>\n                  ))\n                 }\n                </Fragment>\n                }\n                </Fragment>\n  \n              }\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n\n                {/* Pagination Actions  */}\n                <TableFooter>\n                  <TableRow>\n                    <TablePagination\n                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                      colSpan={3}\n                      count={rows.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      SelectProps={{\n                        inputProps: { 'aria-label': 'rows per page' },\n                        native: true,\n                      }}\n                      onChangePage={handleChangePage}\n                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                      ActionsComponent={TablePaginationActions}\n                    />\n                  </TableRow>\n                </TableFooter>\n              </Table>\n\n             </div>\n\n    </Fragment>\n  )\n};\n\nRequestActivitiesHistory.propType = {\n  history: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth:state.auth,\n  requestActivities: state.requestActivities\n});\n\nconst mapDispatchToProps = { getActivities }\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RequestActivitiesHistory));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass FormConfirmationMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant={this.props.variant}\n            message={this.props.message}\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default FormConfirmationMsg;","import React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\t\nimport { submitRequest } from '../../actions/requestActivitiesActions';\nimport { createFormData } from \"./formData\";\nimport axios from 'axios';\n\n// Material-ui components \nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nimport Navbar2 from \"../layouts/Navbar2\";\nimport RequestActivitiesHistory from './RequestActivitiesHistory';\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\n//Style component\nconst useStyles = makeStyles(theme => ({\n\t link: {\n    display: 'flex',\n\t  },\n\t  icon: {\n\t    marginRight: theme.spacing(0.5),\n\t    width: 20,\n\t    height: 20,\n\t  },\n\t     paper: {\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(0),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(2),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n     input: {\n    display: 'none',\n  },\n   margin: {\n    margin: theme.spacing(1),\n  },\n  submit:{\n        marginTop: theme.spacing(3),\n      },\n}));\n\nfunction RequestActivityComponent(props) {\n\n\t const classes = useStyles();\n\n\t // States \n\t \t // Getting the org state\n\t const [orgname, setOrgName] = useState('');\n\n\t //Errors state\n\t const [errors, getErrors] = useState({});\n\n\t //Open confirmation message state\n\t const [open, setOpen] = useState(false)\n\n\t const [obj, setObj] = useState({\n\t  \tfile: '',\n\t  \tfileName:''\n\t });\n\n\t //Event Handlers\n\n\t // const handleChange = prop => e => {\n\t // \tsetValues({...values, [prop]: e.target.value });\n\t // };\n\n\t // const handleChangeFile = files => {\n\t // \t// setFile(files[0]);\n\t // \tsetObj({...obj, file: files[0]});\n\t // \tsetFileName(files[0].name);\n\t // \t// console.log(e.target.files[0]);\n\t // };\n\n\t // Gettin all the values to send in a http request \n\t const handleSubmit = e => {\n\t \te.preventDefault();\n\n\t\tconst { auth } = props;\t \t\n\n\t\tconst newRequestActivity = {\n\t\t\t...obj,\n\t\t\torgname,\n\t\t\tusername: auth.user.username,\n\t  \t\tcampus: auth.user.campus\n\t\t}\n\n\t\tconst _formData = createFormData(newRequestActivity);\n\n\t\t// console.log(newRequestActivity);\n\t \tprops.submitRequest(_formData);\n\t };\n\n\t const handleClose = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setOpen(false);\n          };\n\n\t //Component Effect\n\t // Effect to know what org is online\n\t useEffect(_ => {\n\t\tconst { auth } = props;\n\n\t\tconst id = setInterval(_ => {\n\n\t\taxios.get('/api/org/getorgaccnts')\n\t\t.then(res => {\n\t\t\tres.data.filter(org => auth.user.username === org.username)\n\t\t\t.map(org => setOrgName(org.orgname))\n\t\t})\n\t\t.catch(err => err)\n\n\t\t}, 2000)\n\n\t\treturn _ => {\n\t\t\tclearInterval(id)\n\t\t}\n\t\t\n\t},[]);\n\n\t // Error Effects \n\t useEffect(_ => {\n\t \tif(props.errors)\n\t \t\tgetErrors(props.errors)\n\t },[props.errors]);\n\n\t // useEffect for successful form submition\n\t useEffect(_ => {\n\t \tif(props.requestActivities.submitted)\n\t \t\tsetOpen(true);\n\t },[props.requestActivities.submitted]);\n\n\n  return (\n    <div>\n\n   \t<Navbar2 />\n\n   \t<FormConfirmationMsg open={open} onClose={handleClose} variant=\"success\" message=\"Activity Request Submitted\" />\n\n      <Container maxWidth=\"xl\" style={{paddingTop: 20}}>\n\n      \t<Breadcrumbs aria-label=\"breadcrumb\">\n      \t\t<Link color=\"inherit\" href=\"/org/activitysections\" className={classes.link}>\n      \t\t\t<HomeIcon className={classes.icon}/>\n      \t\t\tMenu\n      \t\t</Link>\n\n\t\t        <Link\n\t\t          color=\"textPrimary\"\n\t\t          href=\"/org/activitysections/requestactivities\"\n\t\t          aria-current=\"page\"\n\t\t          className={classes.link}\n\t\t        >\n\t\t        <InboxIcon className={classes.icon}/>\n\t\t        Activity Request\n\t\t        </Link>\n\n      \t</Breadcrumbs>\n\n      \t<Grid container spacing={2}> \n\n           {/* Grid for the main  */}\n\t      \t<Grid item xs={12} sm={7}>\n\n\t\t\t   \t<Paper className={classes.paper}>\n\t\t\t   \t\n\t\t\t   \t\t <Typography variant=\"h5\" align=\"center\">\n\t\t                 Activity Request Form\n\t\t             </Typography>\n\t\t              <br></br>\n\n\t\t\t     \t\t <Container maxWidth=\"md\">\n\n\t\t\t     \t\t \t\t <Typography variant=\"h6\">\n                          \t\t  Input the details needed.\n                        \t\t</Typography>\n\n                        \t\t<form noValidate onSubmit={handleSubmit} encType=\"multipart/form-data\">\n\n                        \t{/* Activity Title TextField */}\n                        \t\t <TextField\n                        \t\t \tvalue={obj.activity_title}\n                        \t\t \tonChange={e => setObj({...obj, activity_title: e.target.value})}\n                                    id=\"activity_title\"\n                                    name=\"activity_title\"\n                                    label=\"Request Activity Title\"\n                                    fullWidth\n                                    autoComplete=\"activity_title\"\n                                />\n                                <br />\n                                <span style={{ color: \"red\" }}>\n\t\t\t\t                        {errors.activity_title}\n\t\t\t\t                 </span>\n                                <br />\n\n                        \t{/* File Upload TextField */}\n                                <div className={classes.margin}>\n\t\t\t\t\t\t\t        <Grid container spacing={1} alignItems=\"flex-end\">\n\n\t\t\t\t\t\t\t          <Grid item xs={1}>\n\n\t\t\t\t\t\t\t          {/* \n\t\t\t\t\t\t\t          */}\n\t\t\t\t\t\t\t\t\t\t<input onChange={e => setObj({...obj, file: e.target.files[0], fileName: e.target.files[0].name})} \n\t\t\t\t\t\t\t\t\t\tclassName={classes.input} id=\"file\" name=\"file\" type=\"file\" />\n\t\t\t\t\t\t\t\t\t      <label htmlFor=\"file\">\n\t\t\t\t\t\t\t\t\t        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n\t\t\t\t\t\t\t\t\t          <CloudUploadIcon />\n\t\t\t\t\t\t\t\t\t        </IconButton>\n\t\t\t\t\t\t\t\t\t     </label>\n\n\t\t\t\t\t\t\t          </Grid>\n\n\t\t\t\t\t\t\t          <Grid item xs={11}>\n\t\t\t\t\t\t\t            <TextField \n\t\t\t\t\t\t\t            value={obj.fileName}\n\t\t\t\t\t\t\t            id=\"input-with-icon-grid\"\n\t\t\t\t\t\t\t            label=\"File Upload Here\"\n\t\t\t\t\t\t\t            helperText=\"Note: .docx and .pdf file types only\"\n\t\t\t\t\t\t\t            fullWidth\n\t\t\t\t\t\t\t              InputProps={{\n                                               readOnly: true,\n                                              }}\n                                           InputLabelProps={{\n                                           \t\tshrink: true,\n                                           }}\n\t\t\t\t\t\t\t            />\n\n\t\t\t\t\t\t\t          \n\n\t\t\t\t\t\t\t\t  \t\n\t\t\t\t\t\t\t            {/*\n\t\t\t\t\t\t\t        Native Input file for\n\n\t\t\t\t\t\t\t        <input type=\"file\" name=\"file\" value={fileName} onChange={handleChangeFile}/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t               \t*/ }\n\t\t\t\t\t\t\t        \n\n\t\t\t\t\t\t\t        </Grid>\n\t\t\t\t\t\t\t        </Grid>\n\n\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t    <span style={{ color: \"red\" }}>\n\t\t\t\t                        {errors.file}\n\t\t\t\t                 </span>\n\n\t\t\t\t\t\t\t    <br />\n\n                        \t{/* Activity Title TextField */}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tvalue={obj.description}\n\t\t\t\t\t\t\t\t\tonChange={e => setObj({...obj, description: e.target.value})}\n                                    id=\"description\"\n                                    name=\"description\"\n                                    label=\"Request Activity Description\"\n                                    fullWidth\n                                    multiline\n                                />\t\t\n                                <span style={{ color: \"red\" }}>\n\t\t\t\t                        {errors.description}\n\t\t\t\t                 </span>\t\t\t    \n\n                                  <Button\n\t                                type=\"submit\"\n\t                                fullWidth\n\t                                variant=\"contained\"\n\t                                color=\"primary\"\n\t                                className={classes.submit}\n\t\t                            >\n\t\t                                submit\n\t\t                            </Button>\n\n                        \t\t</form>\n\n\t\t\t     \t\t </Container>\n\n\t\t\t    </Paper>\n\n\t\t\t </Grid>\n\n           {/* Grid for the history the org uploads a file for approval */}\n\n\t\t\t <Grid item xs={12} sm={5}>\n\n\t\t\t   \t<Paper className={classes.paper}>\n\t\t\t   \t\n\t\t\t   \t\t <Typography variant=\"h5\" align=\"center\">\n\t\t                 Your History\n\t\t             </Typography>\n\t\t              <br></br>\n\n\t\t             <RequestActivitiesHistory />\n\n\t\t\t    </Paper>\n\n\t\t\t </Grid>\n\n\t    </Grid>\n\n\t  </Container>\n\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  auth:state.auth,\n  requestActivities: state.requestActivities,\n  errors: state.errors\n});\n\nconst mapDispatchToProps = { submitRequest };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestActivityComponent);","/*\nThis function lets the object as a new FormData the files \n\nExplanation by the Pro-programmer who give me this code snippet\n\nAccording to him, it gets all the object states and convert it a single json. with the help of a condition where if the object has a instance of a File\nit will create a new FormData with its property as a file\n\nCredit to: Anthony Pillos\n*/\n\n// Function help by a pro\nexport function createFormData(object, form, namespace) {\n  var formData = form || new FormData();\n  for (var property in object) {\n    if (!object.hasOwnProperty(property) || !object[property]) {\n      continue;\n    }\n    var formKey = namespace ? namespace + \"[\" + property + \"]\" : property;\n    if (object[property] instanceof Date) {\n\n      formData.append(formKey, object[property].toISOString());\n\n    } else if ( typeof object[property] === \"object\" && !(object[property] instanceof File) ) {\n\n      createFormData(object[property], formData, formKey);\n\n    } else {\n      formData.append(formKey, object[property]);\n    }\n  }\n  return formData;\n};","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\nimport moment from 'moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Navbar2 from \"../layouts/Navbar2\";\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n  root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n   root2:{\n   \t width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n},\n inline: {\n    display: 'inline',\n  },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    timeFeed: {\n      float: 'right',\n      fontSize: 13\n    },\n    preloader: {\n    \ttextAlign: 'center',\n    \tmarginTop: 40,\n    }\n}));\n\nfunction OrgNotifications(props) {\n\n\tconst classes = useStyles();\n\n\t//States ++++++++++++\n\tconst [notifs, getNotifs] = useState([]);\n\n\tconst [notifLoading, setNotifLoading] = useState(true);\n\n\t//Event Handlers +++++++++\n\n\t//Component Effect +++++++++++\n\n\tuseEffect(_ => {\n\t\taxios.get('/api/requestactivities/getorgnotifications')\n\t\t.then(res => {\n\t\t\tgetNotifs(res.data);\n\t\t\tsetNotifLoading(false);\n\t\t})\n\t\t.catch(err => console.log(err));\n\n\t},[]);\n\n\tconst { auth } = props;\n\n\tconst rows = notifs.sort((a,b) => (a.created_at > b.created_at ? -1 : 1))\n\t\t.filter(row => row.username === auth.user.username);\n\n\n  return (\n    <Fragment>\n    \t\t\n    \t<Navbar2 />\n\n    \t<Container style={{paddingTop: 20}}>\n\n    \t\t<Paper className={classes.root} elevation={10}>\n    \t\t\t\n    \t\t\t<Typography variant=\"h5\" component=\"h3\">\n    \t\t \t\tOrganizations Notifications\n    \t\t \t</Typography>\n\t\t\t\t\n\t\t\t\t<List className={classes.root}>\n\n\n    \t\t \t{\n    \t\t \t\tnotifLoading \n    \t\t \t\t?\n    \t\t \t\t<Fragment>\n    \t\t \t\t<div className={classes.preloader}>\n    \t\t \t\t <CircularProgress color=\"secondary\" size={60}/>\n                    \t<br/>\n                    <span>Loading ...</span>\n    \t\t \t\t</div>\n    \t\t \t\t</Fragment>\n    \t\t \t\t:\n    \t\t \t\t<Fragment>\n    \t\t \t\t{\n    \t\t \t\t\trows.length === 0\n    \t\t \t\t\t?\n    \t\t \t\t\t<Fragment>\n\t\t\t\t\t          <ListItem alignItems=\"flex-start\">\n\t\t\t\t\t          \t\t\n\t\t\t\t\t          \t<span style={{textAlign: 'center'}}>\n\t\t\t\t\t          \t\tNo notifications available...\n\t\t\t\t\t          \t</span>\n\t\t\t\t\t         \t\n\t\t\t\t\t          </ListItem>\n\t\t\t\t\t      \n\t\t\t\t\t          <Divider variant=\"inset\" component=\"li\" />\n    \t\t \t\t\t</Fragment>\n\n    \t\t \t\t\t:\n    \t\t \t\t\t<Fragment>\n    \t\t \t\t\t{\n    \t\t \t\t\t\trows.map(row => (\n    \t\t \t\t\t\t\t<Fragment>\n\t\t\t\t\t          <ListItem alignItems=\"flex-start\">\n\t\t\t\t\t          \n\t\t\t\t\t            <ListItemText\n\t\t\t\t\t              primary={row.notification}\n\t\t\t\t\t              secondary={\n\t\t\t\t\t                <Fragment>\n\t\t\t\t\t                {\n\t\t\t\t\t                \trow.reason \n\t\t\t\t\t                \t?\n\t\t\t\t\t                \t<Fragment>\n\t\t\t\t\t                \t<Typography\n\t\t\t\t\t\t                component=\"span\"\n\t\t\t\t\t\t                variant=\"body2\"\n\t\t\t\t\t\t                className={classes.inline}\n\t\t\t\t\t\t                color=\"textPrimary\"\n\t\t\t\t\t\t              >\n\t\t\t\t\t\t                <span style={{color: 'red'}}>\n\t\t\t\t\t\t                Reason\n\t\t\t\t\t\t                </span>: {row.reason}\n\t\t\t\t\t\t              </Typography>\n\t\t\t\t\t                  {` - ${moment(row.created_at).fromNow()}`}\n\n\t\t\t\t\t\t              </Fragment>\n\t\t\t\t\t\t              :\n\t\t\t\t\t\t              <Fragment>\n\t\t\t\t\t                  {moment(row.created_at).fromNow()}\n\t\t\t\t\t\t              </Fragment>\n\t\t\t\t\t                }\n\t\t\t\t\t                \n\t\t\t\t\t                </Fragment>\n\t\t\t\t\t              }\n\t\t\t\t\t            />\n\t\t\t\t\t          </ListItem>\n\t\t\t\t\t      \n\t\t\t\t\t          <Divider variant=\"inset\" component=\"li\" />\n\n\t\t\t\t\t          </Fragment>\n    \t\t \t\t\t))\n    \t\t \t\t\t}\n    \t\t \t\t\t\n    \t\t \t\t</Fragment>\n    \t\t \t\t}\n    \t\t \t\t</Fragment>\n    \t\t \t}\n\t\t\t</List>\n    \t\t \t\n\n\n    \t\t</Paper>\n\n    \t</Container>\n\n    </Fragment>\n  )\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth\n});\n\n\n\nexport default connect(mapStateToProps)(OrgNotifications);\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\n\nimport Navbar2 from \"../layouts/Navbar2\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClic\n\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    \n}));\n\nfunction CalendarOrg(props) {\n\tconst classes = useStyles();\n\n    const [events, setEvents] = useState([]);\n\n    useEffect(_ => {\n        axios.get('/api/announcements/')\n        .then(res => setEvents(res.data))\n        .catch(err => console.log(err));\n    },[]);\n\n    const dateClick = arg => {\n        // console.log(arg);\n        props.history.push(`/org/calendar/listOfEvents/${arg.dateStr}`)\n    }\n\n    const renderEventContent = eventInfo => (\n            <Fragment>     \n        {/*console.log(eventInfo) */}\n\n            <a href={`/org/calendar/${eventInfo.event._def.publicId}`}>\n\n              <span style={{color: 'white', backgroundColor:`${eventInfo.backgroundColor}`}}>\n               \n               <b>{eventInfo.timeText}</b> &nbsp;\n                <span>{eventInfo.event.title}</span>\n\n               </span>\n               \n            </a>\n            </Fragment>\n        )\n\n\treturn (\n\t\t<div>\n                <Navbar2 />\n\n                <Container style={{paddingTop: 20}}>\n\n                \t<Paper className={classes.root} elevation={10}>\n\n                \t\t<FullCalendar\n\t\t\t\t\t        plugins={[ dayGridPlugin , interactionPlugin ]}\n\t\t\t\t\t        initialView=\"dayGridMonth\"\n\t\t\t\t\t        weekends={true}\n                            events={events}\n                            eventContent={renderEventContent}\n                            dateClick={dateClick}\n\t\t\t\t\t      />\n\n                \t</Paper>\n\n                </Container>\n\t\t</div>\n\n\t\t)\n}\n\nexport default CalendarOrg;","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport clsx from 'clsx';\n\nimport Navbar2 from \"../layouts/Navbar2\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport { red } from '@material-ui/core/colors';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Grid from '@material-ui/core/Grid';\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n   card: {\n   float: 'center',\n    maxWidth: 500,\n  },\n  media: {\n    textAlign: \"center\"\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n    \n}));\n\nfunction OrgEventSingle(props) {\n\tconst classes = useStyles();\n\n\tconst [event, setEvent] = useState({});\n\n\tuseEffect(_ => {\n\t\taxios.get(`/api/announcements/${props.match.params.id}`)\n\t\t.then(res => setEvent(res.data))\n\t\t.catch(err => console.log(err));\n\t},[]);\n\n\t// console.log(event);\n\n\treturn (\n\t\t\t<div>\n\n\t\t\t\t <Navbar2 />\n\n\t\t\t\t  \t<Container style={{paddingTop: 20}}>\n\n\t\t\t\t\t<Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n\t\t\t\t        <Link color=\"inherit\" href=\"/org/calendar\" className={classes.link}>\n\t\t\t\t          <DateRangeIcon className={classes.icon} />\n\t\t\t\t          Calendar\n\t\t\t\t        </Link>\n\n\t\t\t\t        <Link\n\t\t\t\t          color=\"textPrimary\"\n\t\t\t\t          href={`/org/calendar/${props.match.params.id}`}\n\t\t\t\t          aria-current=\"page\"\n\t\t\t\t          className={classes.link}\n\t\t\t\t        >\n\t\t\t\t        <EventNoteIcon className={classes.icon} />\n\t\t\t\t          Event\n\t\t\t\t        </Link>\n\t\t\t\t    </Breadcrumbs>\n\n\n\n                \t<Grid container spacing={3}>\n\t\t\t\t\t        <Grid item xs>\n\t\t\t\t\t        </Grid>\n\n\t\t\t\t\t        <Grid item xs={6}>\n\t\t\t\t\t\t\t     \n\t\t\t\t\t\t\t        <Card className={classes.card}>\n\t\t\t\t\t\t\t\t      <CardHeader\n\t\t\t\t\t\t\t\t        avatar={\n\t\t\t\t\t\t\t\t          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n\t\t\t\t\t\t\t\t            SOA\n\t\t\t\t\t\t\t\t          </Avatar>\n\t\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\t\t        // action={\n\t\t\t\t\t\t\t\t        //   <IconButton aria-label=\"settings\">\n\t\t\t\t\t\t\t\t        //     <MoreVertIcon />\n\t\t\t\t\t\t\t\t        //   </IconButton>\n\t\t\t\t\t\t\t\t        // }\n\t\t\t\t\t\t\t\t        title={event.title}\n\t\t\t\t\t\t\t\t        subheader={`${moment(event.dateDate).format('MMMM D YYYY')} by: ${event.setBy}`}\n\t\t\t\t\t\t\t\t      />\n\n\t\t\t\t\t\t\t\t  <CardMedia className={classes.media}>\n\t\t\t\t\t\t\t\t  \t\t<img style={{height: \"340px\", width: \"450px\"}} src={`${event.poster}`}/>\n\t\t\t\t\t\t\t\t  </CardMedia>\n\n\t\t\t\t\t\t\t\t      <CardContent>\n\t\t\t\t\t\t\t\t         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t\t\t\t          Venue: {event.venue}\n\t\t\t\t\t\t\t\t        </Typography>\n\n\t\t\t\t\t\t\t\t        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n\t\t\t\t\t\t\t\t          {event.description}\n\t\t\t\t\t\t\t\t        </Typography>\n\t\t\t\t\t\t\t\t      </CardContent>\n\t\t\t\t\t\t\t\t      <CardActions disableSpacing>\n\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t      </CardActions>\n\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t    </Card>\n\t\t\t\t\t\t\t\t    \n\t\t\t\t\t        </Grid>\n\n\t\t\t\t\t        <Grid item xs>\n\t\t\t\t\t        </Grid>\n\n\n\t\t\t\t\t      </Grid>\n\n                \t\t\t\n\n\n\n\t\t\t\t  \t</Container>\n\n\t\t\t</div>\n\t\t)\t\n}\n\nexport default OrgEventSingle;","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport clsx from 'clsx';\n\nimport Navbar2 from \"../layouts/Navbar2\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport { red } from '@material-ui/core/colors';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Grid from '@material-ui/core/Grid';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n     card: {\n   float: 'center',\n    maxWidth: 500,\n  },\n  media: {\n    textAlign: \"center\"\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n    \n}));\n\nfunction OrgEvents(props) {\n\tconst classes = useStyles();\n\n    //State for the events\n    const [events, setEvents] = useState([]);\n    const [ifError, setIfError] = useState(false);\n\n    //Component Effect\n    useEffect(_ => {\n        axios.get(`/api/announcements/getByDate/${props.match.params.dateDate}`)\n        .then(res => setEvents(res.data))\n        .catch(err => {\n            if(err)\n                setIfError(true)\n        });\n    },[]);\n    // console.log(events);\n\treturn (\n\t\t\t<div>\n\n\t\t\t\t <Navbar2 />\n\n\t\t\t\t  \t<Container style={{paddingTop: 20}}>\n\n\t\t\t\t\t<Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n\t\t\t\t        <Link color=\"inherit\" href=\"/org/calendar\" className={classes.link}>\n\t\t\t\t          <DateRangeIcon className={classes.icon} />\n\t\t\t\t          Calendar\n\t\t\t\t        </Link>\n\n\t\t\t\t        <Link\n\t\t\t\t          color=\"textPrimary\"\n\t\t\t\t          href={``}\n\t\t\t\t          aria-current=\"page\"\n\t\t\t\t          className={classes.link}\n\t\t\t\t        >\n\t\t\t\t        <EventNoteIcon className={classes.icon} />\n\t\t\t\t          Events\n\t\t\t\t        </Link>\n\t\t\t\t    </Breadcrumbs>\n\n                        <Fragment>\n                     {/*check if Theres an error\n\n                             <Typography variant=\"h1\" component=\"h2\" color=\"textSecondary\">\n                                            There's an error. Please refresh the page...\n                                        </Typography>\n                     */}\n                            {\n                                ifError\n                                ?\n                                <Grid container spacing={3}>\n                                     <Grid item xs>\n                                     </Grid>\n\n                                     <Grid item xs={6}>\n                                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"center\">\n                                            <WarningIcon style={{color: 'red'}} /> <br />\n                                            There's an error. Please refresh the page...\n                                        </Typography>\n                                     </Grid>\n\n                                    <Grid item xs>\n                                    </Grid>\n                                </Grid>\n                                :\n                                <Fragment>\n                                    {\n                                        events.length === 0 \n                                        ?\n                                          <Grid container spacing={3}>\n                                             <Grid item xs>\n                                             </Grid>\n\n                                             <Grid item xs={6}>\n                                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"center\">\n                                                    <SentimentVerySatisfiedIcon style={{color: 'green'}} /> <br />\n                                                    There are no events for this date. Please other dates for events.\n                                                </Typography>\n                                             </Grid>\n\n                                            <Grid item xs>\n                                            </Grid>\n                                        </Grid>\n\n                                        :\n\n                                    <Fragment>\n                                        {\n\n                                        events.map(event => (\n\n                            <Grid container spacing={3}>\n                                        <Grid item xs>\n                                        </Grid>\n\n                                        <Grid item xs={6}>\n                                             \n                                                <Card className={classes.card}>\n                                                  <CardHeader\n                                                    avatar={\n                                                      <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                                        SOA\n                                                      </Avatar>\n                                                    }\n                                                    // action={\n                                                    //   <IconButton aria-label=\"settings\">\n                                                    //     <MoreVertIcon />\n                                                    //   </IconButton>\n                                                    // }\n                                                    title={event.title}\n                                                    subheader={`${moment(event.dateDate).format('MMMM D YYYY')} by: ${event.setBy}`}\n                                                  />\n\n                                              <CardMedia className={classes.media}>\n                                                    <img style={{height: \"340px\", width: \"450px\"}} src={`${event.poster}`}/>\n                                              </CardMedia>\n\n                                                  <CardContent>\n                                                     <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                      Venue: {event.venue}\n                                                    </Typography>\n\n                                                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                                      {event.description}\n                                                    </Typography>\n                                                  </CardContent>\n                                                  <CardActions disableSpacing>\n                                                  \n                                                  </CardActions>\n                                               \n                                                </Card>\n                                                \n                                        </Grid>\n\n                                        <Grid item xs>\n                                        </Grid>\n\n\n                                 </Grid>\n\n                                            ))\n\n                                    }\n                                    </Fragment>\n\n\n                                    }\n                                </Fragment>\n                            }\n\n                        </Fragment>\n                        \n\n\t\t\t\t  \t</Container>\n\n\t\t\t</div>\n\t\t)\t\n}\n\nexport default OrgEvents;","import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { addActivityAssessmentFalse, updateActivityAssessmentFalse } from '../../actions/assessmentActions';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport Navbar2 from \"../layouts/Navbar2\";\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    timeFeed: {\n      float: 'right',\n      fontSize: 13\n    },\n    tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nfunction Assessment(props) {\n  const classes = useStyles();\n    \n    // Pagination Controls addAnnouncementFalseHead\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n\n    const [activities, getActivities] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [ifError, setIfError] = useState(false);\n\n    const [added, setAdded] = useState(false);  \n    const [updated, setUpdated] = useState(false);  \n\n    //Event Handlers\n    const handleChangePage = (event, newPage) => {\n           setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n         setRowsPerPage(parseInt(event.target.value, 10));\n         setPage(0);\n     };\n\n              // Event for added state \n    const handleClose = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setAdded(false);\n                props.addActivityAssessmentFalse();\n     };\n     const handleCloseUpdate = (event, reason) => {\n        if (reason === 'clickaway') {\n                  return;\n                }\n              setUpdated(false);\n              props.updateActivityAssessmentFalse()\n     }\n\n     // Component Effects \n     useEffect(_ => {\n     \taxios.get('/api/assessments/')\n     \t.then(res => {\n     \t\tgetActivities(res.data);\n     \t\tsetLoading(false);\n     \t})\n     \t.catch(err => {\n     \t\tif(err){\n     \t\t\tsetLoading(false);\n     \t\t\tsetIfError(true);\n\n     \t\t}\n     \t})\n     },[]);\n\n     //If added props\n     useEffect(_ => {\n     \tif(props.assessment.added)\n     \t\tsetAdded(true);\n\n     \tsetTimeout(function(){ props.addActivityAssessmentFalse() }, 6000);\n     },[props.assessment.added]);\n\n     // if updated props \n     useEffect(_ => {\n      if(props.assessment.updated)\n          setUpdated(true)\n\n      setTimeout(function(){ props.updateActivityAssessmentFalse() }, 6000);\n     },[props.assessment.updated])\n\n    const { user } = props.auth;\n\n    const rows = activities.sort((a, b) => a.date > b.date ? -1 : 1)\n    \t\t\t.filter(row => row.username === user.username);\n\n    //Empty row that says the rows for paginationaddAnnouncementFalseHead\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    // console.log(props);\n  return (\n    <div>\n    \t<Navbar2 />\n\n    \t\t<FormConfirmationMsg open={added} onClose={handleClose} variant=\"success\" message=\"Activity Assessment Added.\"  />\n        <FormConfirmationMsg open={updated} onClose={handleCloseUpdate} variant=\"success\" message=\"Activity Assessment Updated & Resend.\"  />\n\n    \t\t<Container style={{paddingTop: 10}}>\n\n    \t\t  <Button \n                        href=\"/org/assessment/addActivity\"\n                        className={classes.button}\n                        variant=\"outlined\" \n                        color=\"secondary\"\n                        >\n                        Add Activity\n                    </Button>\n                    <br />\n\n    \t\t\t<Paper className={classes.root} elevation={10} >\n    \t\t\t\t\n\t\t\t\t\t<div className={classes.tableWrapper}>\n\n                            <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Activity Title</StyledTableCell>\n                                <StyledTableCell align=\"left\">Date of Activity</StyledTableCell>\n                                <StyledTableCell align=\"left\">Requirements needed</StyledTableCell>\n                                <StyledTableCell align=\"left\">Description of the Activity</StyledTableCell>\n                                <StyledTableCell align=\"left\">Action</StyledTableCell>\n\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { loading \n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :  \n                                    <Fragment>\n                                     {\n                                      ifError\n                                      ?\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <span>Something went wrong. Please try again.</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :\n                                    //Data to be displayed when the data is fetched\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.activity}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{moment(row.dateDate).format('MMMM D YYYY')}</TableCell>\n                                          <TableCell align=\"left\">{row.activityRequirements}</TableCell>\n                                          <TableCell align=\"left\">{row.description}</TableCell>\n                                          <TableCell align=\"left\">\n                                          {\n                                          \trow.status === 'pending'\n                                          \t?\n                                          \t\t<Fragment>\n                                          \t\t\tPending... \n                                          \t\t\t <CircularProgress color=\"secondary\" size={20}/>\n                                          \t\t</Fragment>\n                                          \t:\n                                          \t<Fragment>\n                                          \t\t{\n                                          \t\t\trow.status === 'approved'\n                                          \t\t\t?\n                                          \t\t\t<Link to={`/org/assessment/${row.id}/${row.activity}`}>\n                                          \t\t\t\tCheck students who joined...\n                                          \t\t\t</Link>\n                                          \t\t\t:\n                                          \t\t\t<Fragment>\n                                                    \tYour activity is declined for implementation,\n                                                    \tmaybe change the prerequisites or the date of the \n                                                    \tactivity. <Link to={`/org/assessment/${row.id}`}>Edit Assessment</Link>\n                                                \t</Fragment>\n                                          \t\t}\n                                          \t</Fragment>\n                                          }\n\n                                                \n                                              {/*\n                                              <Tooltip title=\"Delete\" placement=\"top\">\n                                                 <IconButton onClick={_ => handleDelete(row.id)} aria-label=\"edit\" color=\"secondary\">\n                                                  <DeleteIcon />\n                                                </IconButton>\n                                              </Tooltip>   \n                                               */ }\n                                          </TableCell>\n                                        </TableRow>\n                                      ))\n                                    \n                                    }\n                                    </Fragment>\n                                    \n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n                        </div>\n\n\n    \t\t\t</Paper>\n\n\n    \t\t</Container>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\tassessment: state.assessment,\n\tauth: state.auth,\n});\n\nconst mapDispatchToProps = { addActivityAssessmentFalse, updateActivityAssessmentFalse };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Assessment);","import axios from 'axios';\n\nimport {\n\tADD_ASSESSMENT_ACTIVITY,\n\tADD_ASSESSMENT_ACTIVITY_FALSE,\n\n\tUPDATE_ASSESSMENT_ACTIVITY,\n\tUPDATE_ASSESSMENT_ACTIVITY_FALSE,\n\n\tSET_ASSESSMENT_APPROVED,\n\tSET_ASSESSMENT_APPROVED_FALSE,\n\n\tSET_ASSESSMENT_DECLINED,\n\tSET_ASSESSMENT_DECLINED_FALSE,\n\n\tSET_ASSESSMENT_PENDING,\n\tSET_ASSESSMENT_PENDING_FALSE,\n\n\tGET_ASSESSMENT_ACTIVITIES,\n\tASSESSMENT_LOADING,\n\n\tGET_ERRORS,\n} from './types';\n\nexport const addActivityAssessment = data => dispatch => {\n\n\taxios.post('/api/assessments/addActivity', data)\n\t.then(res => \n\t\tdispatch({\n\t\t\ttype: ADD_ASSESSMENT_ACTIVITY,\n\t\t}))\n\t.catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n    }));  \n}\n\nexport const addActivityAssessmentFalse = _ => {\n\treturn { type: ADD_ASSESSMENT_ACTIVITY_FALSE }\n}\n\nexport const updateActivityAssessment = (id, data) => dispatch => {\n\n\taxios.post(`/api/assessments/updateActivity/${id}`, data)\n\t.then(res => dispatch({\n\t\ttype: UPDATE_ASSESSMENT_ACTIVITY\n\t}))\n\t.catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n    }));  \n}\n\nexport const updateActivityAssessmentFalse = _ => {\n\treturn { type: UPDATE_ASSESSMENT_ACTIVITY_FALSE };\n}\n\n//Approved and Declined Actions\nexport const setAsApproved = (id, data, notif) => dispatch => {\n\taxios.post(`/api/assessments/setAsApproved/${id}`, data)\n\t.then(res => dispatch({\n\t\ttype: SET_ASSESSMENT_APPROVED\n\t}))\n\t.catch(err => console.log(err));\n\n\taxios.post('/api/assessments/activityAssessment/notif', notif)\n\t.then(res => res)\n\t.catch(err => err);\n}\n\nexport const setAsApprovedFalse = _ => {\n\treturn { type: SET_ASSESSMENT_APPROVED_FALSE }\n}\n\nexport const setAsDeclined = (id, data, notif) => dispatch => {\n\taxios.post(`/api/assessments/setAsDeclined/${id}`, data)\n\t.then(res => dispatch({\n\t\ttype: SET_ASSESSMENT_DECLINED\n\t}))\n\t.catch(err => console.log(err))\n\n\taxios.post('/api/assessments/activityAssessmentDeclined/notif', notif)\n\t.then(res => res)\n\t.catch(err => err);\n}\n\nexport const setAsDeclinedFalse = _ => {\n\treturn { type: SET_ASSESSMENT_DECLINED_FALSE }\n}\n\nexport const setAgainToPending = (id, data, notif) => dispatch => {\n\taxios.post(`/api/assessments/setAgainToPending/${id}`, data)\n\t.then(res => dispatch({\n\t\ttype: SET_ASSESSMENT_PENDING\n\t}))\n\t.catch(err => console.log(err));\n\n\taxios.post('/api/assessments/activityAssessment/notif', notif)\n\t.then(res => res)\n\t.catch(err => err);\n}\n\nexport const setAgainToPendingFalse = _ => {\n\treturn { type: SET_ASSESSMENT_DECLINED_FALSE }\n}\n\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { addActivityAssessment } from '../../actions/assessmentActions';\nimport { connect } from 'react-redux';\n\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker,} from '@material-ui/pickers';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport Navbar2 from \"../layouts/Navbar2\";\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n\t  root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    timeFeed: {\n      float: 'right',\n      fontSize: 13\n    },\n    tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n   formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n}));\n\nfunction AddAssessment(props){\n\n \tconst classes = useStyles();\n\n \t/*State*/\n \tconst [errors, getErrors] = useState({});\n\n \tconst [values, setValues] = useState({\n \t\tactivity: '',\n \t\tactivityRequirements: '',\n \t\tdescription: ''\n \t});\n\n \tconst [createdBy, getCreatedBy] = useState('');\n \tconst [selectedDate, setSelectedDate] = useState(new Date());\n \tconst [selectedTime, setSelectedTime] = useState(new Date());\n\n \t/*Event Handlers*/\n\n \t const handleDate = date => {\n        setSelectedDate(date);\n     }\n\n     const handleTime = time => {\n         setSelectedTime(time);\n      }\n\n \tconst handleSubmit = e => {\n \t\te.preventDefault();\n\n \t\tconst { user } = props.auth;\n\n \t\tconst dateDate = moment(selectedDate).format('YYYY-MM-DD');\n        const dateTime = moment(selectedTime).format('HH:mm:ss'); \n \t\n        const date = `${dateDate} ${dateTime}`;\n\n \t\tconst newAssessment = {\n \t\t\t...values,\n \t\t\tdate,\n \t\t\tcreatedBy,\n \t\t\tcampus: user.campus,\n \t\t\tusername: user.username\n \t\t}\n\n \t\t// console.log(newAssessment);\n \t\tprops.addActivityAssessment(newAssessment);\n \t}\n\n \t  // Component Effects \n\tuseEffect(_ => {\n\t\tconst { auth } = props;\n\n          axios.get('/api/org/getorgaccnts')\n        .then(res => {\n          res.data.filter(org => auth.user.username === org.username)\n          .map(org => getCreatedBy(org.orgname))\n        })\n        .catch(err => err)\n\t},[]);\n\n\tuseEffect(_ => {\n\t\tif(props.assessment.added)\n\t\t\tprops.history.push('/org/assessment')\n\t},[props.assessment.added]);\n\n \tuseEffect( _ => {\n      if(props.errors){\n        getErrors(props.errors)\n      }\n    },[props.errors]);\n\n \tconst { user } = props.auth;\n\n \t// console.log(props);\n\n  return (\n    <div>\n    \t<Navbar2 />\n\n    \t<Container style={{paddingTop: 10}}>\n\n    \t <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n                        <Link color=\"inherit\" href=\"/org/assessment\" className={classes.link}>\n                          <AssessmentIcon className={classes.icon} />\n                          Calendar\n                        </Link>\n\n                        <Link\n                          color=\"textPrimary\"\n                          href={``}\n                          aria-current=\"page\"\n                          className={classes.link}\n                        >\n                        <AddBoxIcon className={classes.icon} />\n                          Add Activity\n                        </Link>\n                    </Breadcrumbs>\n\n    \t<Grid container spacing={3}>\n    \t\t <Grid item md>\n             </Grid>\n\n\t\t\t<Grid item md={8} xs={12}>\n\t\t\t\t<Paper className={classes.root} elevation={10} >\n\n\t\t\t\t\t\t<Typography variant=\"h4\" align=\"center\">\n                           Activity Assessment\n                        </Typography>\n                        <br></br>\n\n                        <form noValidate onSubmit={handleSubmit}>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n                                    <TextField \n                                        value={values.activity}\n                                        onChange={e => setValues({...values, activity: e.target.value})}\n                                        id=\"activity\"\n                                        name=\"activity\"\n                                        label=\"Enter the name of the activity to implement\"\n                                        fullWidth\n                                        autoComplete\n                                            />\n                                </Grid>\n                                <br />\n                             <span style={{ color: \"red\" }}>\n                                {errors.activity}\n                            </span>\n\n                    \t<Grid container spacing={3}>\n\n\t\t\t\t\t<Grid item xs={6}>\n                        <FormControl fullWidth className={classes.formControl}>\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                        <KeyboardDatePicker\n                                                          value={selectedDate}\n                                                          onChange={handleDate}\n                                                          disableToolbar\n                                                          variant=\"inline\"\n                                                          format=\"yyyy-MM-dd\"\n                                                          margin=\"normal\"\n                                                          id=\"date-picker-inline\"\n                                                          label=\"Date of the Activity\"\n                                                          KeyboardButtonProps={{\n                                                            'aria-label': 'change date',\n                                                          }}\n                                                        />\n                                    </MuiPickersUtilsProvider>\n                             </FormControl>\n                     </Grid>\n\n                      <Grid item xs={6}>\n                                            <FormControl fullWidth className={classes.formControl}>\n                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                    <KeyboardTimePicker\n                                                     format= \"hh:mm a\"\n                                                      value={selectedTime}\n                                                      onChange={handleTime}\n                                                      margin=\"normal\"\n                                                      id=\"time-picker\"\n                                                      label=\"Time picker\"\n                                                      KeyboardButtonProps={{\n                                                        'aria-label': 'change time',\n                                                      }}\n                                                      keyboardIcon={<AccessTimeIcon />}\n                                                    />\n                                                </MuiPickersUtilsProvider>\n                                            </FormControl>\n                                         </Grid>\n                                         <br/>\n                        </Grid>\n\n                      <span style={{ color: \"red\" }}>\n                                {errors.date}\n                            </span>\n\n                           <br/>\n\n                     \t<Grid item xs={12}>\n                                    <TextField \n                                        value={values.activityRequirements}\n                                        onChange={e => setValues({...values, activityRequirements: e.target.value})}\n                                        id=\"activityRequirements\"\n                                        name=\"activityRequirements\"\n                                        label=\"Enter the requirements/instruction of the activity to implement\"\n                                        fullWidth\n                                        autoComplete\n                                         multiline\n         \t\t\t\t\t\t\t\t rows={4}\n         \t\t\t\t\t\t\t\t variant=\"outlined\"\n                                            />\n                                </Grid>\n                                <br />\n                              <span style={{ color: \"red\" }}>\n                                {errors.activityRequirements}\n                            </span>\n\n                         <Grid item xs={12}>\n                                     <TextField\n                                     \tlabel=\"Your Campus\"\n                                      \tid=\"campus\"\n                  \t\t\t\t\t\tname=\"campus\"\n                                    \tvalue={user.campus}\n                                      \tInputProps={{\n                                       \t readOnly: true,\n                                      \t}}\n                                    \tfullWidth\n                                \t/>\n                                </Grid>\n                                <br />\n\n\n                            <Grid item xs={12}>\n                                    <TextField \n                                        value={values.description}\n                                        onChange={e => setValues({...values, description: e.target.value})}\n                                        id=\"description\"\n                                        name=\"description\"\n                                        label=\"Enter the description of the activity to implement\"\n                                        fullWidth\n                                        autoComplete\n                                         multiline\n         \t\t\t\t\t\t\t\t rows={4}\n         \t\t\t\t\t\t\t\t variant=\"outlined\"\n                                            />\n                                </Grid>\n                                <br />\n                              <span style={{ color: \"red\" }}>\n                                {errors.description}\n                            </span>\n\n\t\t\t\t \t\t\t<Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n\t\t\t\t                  *** Please double check anything before passing it as a activity\n\t\t\t\t           </Typography>\n\n\t\t\t\t              <Button\n                                type=\"submit\"\n                               size=\"small\" \n                               variant=\"outlined\" \n                               color=\"secondary\"\n                                className={classes.submit}\n                            >\n                               Upload activity\n                            </Button>\n\n                       </form>\n\t\t\t\t</Paper>\n\t\t\t</Grid>             \n\n\t\t\t <Grid item md>\n             </Grid>\n\n    \t</Grid>\n\n    \t</Container>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\tassessment: state.assessment,\n\tauth: state.auth,\n\terrors: state.errors\n});\n\nconst mapDispatchToProps = { addActivityAssessment };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAssessment);","import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport TextField from '@material-ui/core/TextField'\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport UndoIcon from '@material-ui/icons/Undo';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Slide from '@material-ui/core/Slide';\n// import CancelIcon from '@material-ui/icons/Cancel';\n// import UndoIcon from '@material-ui/icons/Undo';\n\nimport Navbar2 from \"../layouts/Navbar2\";\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\nconst Transition = props => {\n    return <Slide direction=\"up\" {...props} />\n}\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    timeFeed: {\n      float: 'right',\n      fontSize: 13\n    },\n    tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nfunction CheckRegisteredStudentsOrg(props) {\n\n\tconst classes = useStyles();\n\n\t    // Pagination Controls addAnnouncementFalseHead\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n\n       //Data States\n    const [students, getStudents] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [ifError, setIfError] = useState(false);\n\n    //Who's organization is online\n\tconst [orgOnline, setOrgOnline] = useState('');\n\n    //Modal State\n    const [openModalState, setOpenModalState] = useState(false);\n    const [id, getId] = useState(null);\n\n    //Confirmation State\n    const [complete, setComplete] = useState(false);\n    const [undo, setUndo] = useState(false);\n\n        //Filter State\n    const [filter, setFilter] = useState('');\n\n          //Event Handlers\n    const handleChangePage = (event, newPage) => {\n           setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n         setRowsPerPage(parseInt(event.target.value, 10));\n         setPage(0);\n     };\n\n     //Modal\n     const setFullRequirements = id => {\n     \tgetId(id);\n     \tsetOpenModalState(true);\n     }\n     const handleModalClose = _ => {\n     \tsetOpenModalState(false);\n     }\n\n     //Undo Event\n     const undoEvent = id => {\n     \tconst { auth } = props;\n\n     \tconst statusBody = {\n     \t\tstatus: 'pending'\n     \t};\n\n     \taxios.post(`/api/registeredStudents/setStudentStatus/${id}`, statusBody)\n     \t.then(res => {\n     \t\tsetUndo(true);\n     \t})\n     \t.catch(err => console.log(err))\n\n     \tconst newOrgFeed = {\n     \t\tusername: auth.user.username,\n     \t\torgname: orgOnline,\n     \t\tmessage: `You've undo an action in assessment page.`\n     \t}\n\n     \taxios.post(`/api/registeredStudents/sendOrgFeed`, newOrgFeed)\n     \t.then(res => res)\n     \t.catch(err => console.log(err));\n\n\n     }\n       const closeUndo = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setUndo(false);\n          };\n\n\n     // Final Confirmation\n     const completeRequiremenFinal = _ => {\n     \tconst { auth } = props;\n\n     \tconst statusBody = {\n     \t\tstatus: 'complete'\n     \t}\n\n     \tconst newOrgFeed = {\n     \t\tusername: auth.user.username,\n     \t\torgname: orgOnline,\n     \t\tmessage: `You've set a student as COMPLETE REQUIREMENTS`\n     \t}\n\n     \taxios.post(`/api/registeredStudents/setStudentStatus/${id}`, statusBody)\n     \t.then(res => {\n     \t\tsetComplete(true);\n     \t\tsetOpenModalState(false);\n     \t})\n     \t.catch(err => console.log(err));\n\n     \taxios.post(`/api/registeredStudents/sendOrgFeed`, newOrgFeed)\n     \t.then(res => res)\n     \t.catch(err => console.log(err));\n\n\n     }\n     const closeComplete = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setComplete(false);\n          };\n\n     // Component Effects \n     useEffect(_ => {\n        axios.get(`/api/registeredStudents/seeRegisteredStudents/${props.match.params.activityId}/${props.match.params.activityTitle}`)\n        .then(res => {\n            getStudents(res.data);\n            setLoading(false);\n        })\n        .catch(err => {\n            if(err){\n                setLoading(false);\n                setIfError(true);\n\n            }\n        })\n     },[complete, undo]);\n\n     useEffect(_ => {\n\t\tconst { auth } = props;\n\n        axios.get('/api/org/getorgaccnts')\n        .then(res => {\n          res.data.filter(org => auth.user.username === org.username)\n          .map(org => setOrgOnline(org.orgname))\n        })\n        .catch(err => console.log(err))\n\n\t},[]);\n\n     const rows = students.sort((a, b) => a.created_at > b.created_at ? -1 : 1);\n\n    //Empty row that says the rows for paginationaddAnnouncementFalseHead\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    // console.log(students);\n\n    return (\n    \t\t<div>\n    \t\t\t<Navbar2 />\n                \n                <FormConfirmationMsg open={complete} onClose={closeComplete} variant=\"success\" message=\"Student set to complete requirements.\"  />\n                <FormConfirmationMsg open={undo} onClose={closeUndo} variant=\"info\" message=\"Undo action.\"  />\n\n\n    \t\t\t <Dialog\n                   open={openModalState}\n                   TransitionComponent={Transition}\n                   keepMounted\n                   onClose={handleModalClose}\n                   aria-labelledby=\"alert-dialog-slide-title\"\n                   aria-describedby=\"alert-dialog-slide-description\"\n                   >\n                       <DialogTitle id=\"alert-dialog-slide-title\">\n                           {\"Approved Activity Assessment\"}\n                        </DialogTitle>\n\n                        <DialogContent>\n\n                          <DialogContentText id=\"alert-dialog-slide-description\">\n                              Are you sure this student is complete at requirements?\n                              </DialogContentText>\n                          </DialogContent>  \n\n                          <DialogActions>\n                            <Button onClick={completeRequiremenFinal} variant=\"outlined\" color=\"primary\">\n                              Yes\n                            </Button>\n                            <Button onClick={handleModalClose} variant=\"outlined\" color=\"secondary\">\n                              No\n                            </Button>\n                          </DialogActions>\n                   </Dialog>\n\n    \t\t<Container style={{paddingTop: 10}}>\n\n    \t\t<Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n                <Link color=\"inherit\" href=\"/org/assessment\" className={classes.link}>\n                  <AssessmentIcon className={classes.icon} />\n                  Activities\n                </Link>\n\n                 <Link\n                  color=\"textPrimary\"\n                  href={``}\n                  aria-current=\"page\"\n                  className={classes.link}\n                >\n                <EventNoteIcon className={classes.icon} />\n                  Students who join\n                </Link>\n            </Breadcrumbs>\n\n    \t\t\t<Paper className={classes.root} elevation={10} >\n\n    \t\t\t <Grid container spacing={3}>\n\n                 <Grid item xs={8}>\n                  <TextField \n                    value={filter}\n                    onChange={e => setFilter(e.target.value)}\n                    id=\"filter\"\n                    name=\"Filter\"\n                    label=\"Search by Name\"\n                    fullWidth\n                    autoComplete\n                    variant=\"outlined\"\n                      />\n                    \n                  </Grid>\n\n                    </Grid>\n                    <br />\n                    <br />\n    \t\t\t\t\n\t\t\t\t\t<div className={classes.tableWrapper}>\n\n\t\t\t\t\t\t  <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Student Name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Date Registered</StyledTableCell>\n                                <StyledTableCell align=\"left\">SR-Code</StyledTableCell>\n                                <StyledTableCell align=\"left\">Department</StyledTableCell>\n                                <StyledTableCell align=\"left\">College Year</StyledTableCell>\n                                <StyledTableCell align=\"left\">Section</StyledTableCell>\n                                <StyledTableCell align=\"left\">Contact Number</StyledTableCell>\n                                <StyledTableCell align=\"left\">Complete Requirements ?</StyledTableCell>\n\n\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { loading \n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :  \n                                    <Fragment>\n                                     {\n                                      ifError\n                                      ?\n                                    <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <span>Something went wrong. Please try again.</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :\n                                    <Fragment>\n                                    {\n                                      rows.length === 0 \n                                      ?\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <span>No registered students for this activity.</span>\n                                      </TableCell>\n                                    </TableRow>\n\n                                    :\n                                    //Data to be displayed when the data is fetched\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      .filter(row => row.studentName.toLowerCase().search(filter.toLowerCase()) !== -1 )\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.studentName}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{moment(row.created_at).format('MMMM D YYYY')}</TableCell>\n                                          <TableCell align=\"left\">{row.srCode}</TableCell>\n                                          <TableCell align=\"left\">{row.department}</TableCell>\n                                          <TableCell align=\"left\">{row.yr}</TableCell>\n                                          <TableCell align=\"left\">{row.section}</TableCell>\n                                          <TableCell align=\"left\">{row.contactNumber}</TableCell>\n\n                                          <TableCell align=\"left\">\n\n                                          {\n                                            row.status === 'pending'\n                                            ?\n                                            <Fragment>\n                                            Click the check button ONLY if the students is complete at requirements\n                                            <Tooltip title=\"Yes\" placement=\"top\">\n                                                 <IconButton onClick={_ => setFullRequirements(row.id)} aria-label=\"edit\" style={{color: 'green'}}>\n                                                  <CheckCircleIcon />\n                                                </IconButton>\n                                              </Tooltip> \n                                           </Fragment>\n                                              :\n                                              <Fragment>\n                                              <p>\n                                              Student is complete in requirements\n                                              </p>\n                                              If you feel you click the wrong one, click undo.\n                                                 <IconButton onClick={_ => undoEvent(row.id)} aria-label=\"edit\" color=\"primary\">\n                                                                  <UndoIcon />\n                                                                </IconButton>\n                                              </Fragment>\n                                          }\n\n                                          </TableCell>\n                                        </TableRow>\n                                      ))\n\n                                    }\n                                    </Fragment>\n                                    \n                                    \n                                    }\n                                    </Fragment>\n                                    \n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</Paper>\n\n\t\t\t</Container>\n\n    \t\t</div>\n    \t);\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth\n})\n\nexport default connect(mapStateToProps)(CheckRegisteredStudentsOrg);","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { updateActivityAssessment } from '../../actions/assessmentActions';\nimport { connect } from 'react-redux';\n\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker,} from '@material-ui/pickers';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\nimport Navbar2 from \"../layouts/Navbar2\";\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n\t  root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    timeFeed: {\n      float: 'right',\n      fontSize: 13\n    },\n    tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n   formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n}));\n\nfunction UpdateAssessment(props){\n\n \tconst classes = useStyles();\n\n \t/*State*/\n \tconst [errors, getErrors] = useState({});\n  const [errorsAll, getErrorsAll] = useState(false);\n\n \tconst [values, setValues] = useState({\n \t\tactivity: '',\n \t\tactivityRequirements: '',\n \t\tdescription: ''\n \t});\n\n \tconst [createdBy, getCreatedBy] = useState('');\n \tconst [selectedDate, setSelectedDate] = useState(new Date());\n \tconst [selectedTime, setSelectedTime] = useState(new Date());\n\n \t/*Event Handlers*/\n\n \t const handleDate = date => {\n        setSelectedDate(date);\n     }\n\n     const handleTime = time => {\n         setSelectedTime(time);\n      }\n\n \tconst handleSubmit = e => {\n \t\te.preventDefault();\n\n \t\tconst { user } = props.auth;\n\n \t\tconst dateDate = moment(selectedDate).format('YYYY-MM-DD');\n        const dateTime = moment(selectedTime).format('HH:mm:ss'); \n \t\n        const date = `${dateDate} ${dateTime}`;\n\n \t\tconst newAssessment = {\n \t\t\t...values,\n \t\t\tdate,\n \t\t\tcreatedBy,\n \t\t\tcampus: user.campus,\n \t\t\tusername: user.username\n \t\t}\n\n \t\t// console.log(newAssessment);\n    props.updateActivityAssessment(props.match.params.id, newAssessment);\n \t\t// props.addActivityAssessment(newAssessment);\n \t}\n\n                // Event for added state \n    const handleClose = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                getErrorsAll(false);\n     };\n\n \t  // Component Effects \n\tuseEffect(_ => {\n\t\tconst { auth } = props;\n\n        axios.get('/api/org/getorgaccnts')\n        .then(res => {\n          res.data.filter(org => auth.user.username === org.username)\n          .map(org => getCreatedBy(org.orgname))\n        })\n        .catch(err => console.log(err));\n\n        //Getting the values f\n        axios.get(`/api/assessments/${props.match.params.id}`)\n        .then(res => {\n          console.log(res.data);\n          setValues({\n            ...values,\n            activity: res.data.activity,\n            activityRequirements: res.data.activityRequirements,\n            description: res.data.description\n          });\n\n          setSelectedDate(res.data.date);\n          setSelectedTime(res.data.date);\n\n        })  \n        .catch(err => err);\n\t},[]);\n\n\tuseEffect(_ => {\n\t\tif(props.assessment.updated)\n\t\t\tprops.history.push('/org/assessment')\n\t},[props.assessment.updated]);\n\n \tuseEffect( _ => {\n      if(props.errors){\n        getErrors(props.errors)\n      }\n\n      if(props.errors.all){\n        getErrorsAll(true)\n      }\n    },[props.errors]);\n\n \tconst { user } = props.auth;\n\n \t// console.log(props);\n\n  return (\n    <div>\n    \t<Navbar2 />\n\n      <FormConfirmationMsg open={errorsAll} onClose={handleClose} variant=\"error\" message={errors.all}  />\n\n    \t<Container style={{paddingTop: 10}}>\n\n    \t <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n                        <Link color=\"inherit\" href=\"/org/assessment\" className={classes.link}>\n                          <AssessmentIcon className={classes.icon} />\n                          Calendar\n                        </Link>\n\n                        <Link\n                          color=\"textPrimary\"\n                          href={``}\n                          aria-current=\"page\"\n                          className={classes.link}\n                        >\n                        <AddBoxIcon className={classes.icon} />\n                          Add Activity\n                        </Link>\n                    </Breadcrumbs>\n\n    \t<Grid container spacing={3}>\n    \t\t <Grid item md>\n             </Grid>\n\n\t\t\t<Grid item md={8} xs={12}>\n\t\t\t\t<Paper className={classes.root} elevation={10} >\n\n\t\t\t\t\t\t<Typography variant=\"h4\" align=\"center\">\n                           Activity Assessment\n                        </Typography>\n                        <br></br>\n\n                        <form noValidate onSubmit={handleSubmit}>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n                                    <TextField \n                                        value={values.activity}\n                                        onChange={e => setValues({...values, activity: e.target.value})}\n                                        id=\"activity\"\n                                        name=\"activity\"\n                                        label=\"Enter the name of the activity to implement\"\n                                        fullWidth\n                                        autoComplete\n                                            />\n                                </Grid>\n                                <br />\n                             <span style={{ color: \"red\" }}>\n                                {errors.activity}\n                            </span>\n\n                    \t<Grid container spacing={3}>\n\n\t\t\t\t\t<Grid item xs={6}>\n                        <FormControl fullWidth className={classes.formControl}>\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                        <KeyboardDatePicker\n                                                          value={selectedDate}\n                                                          onChange={handleDate}\n                                                          disableToolbar\n                                                          variant=\"inline\"\n                                                          format=\"yyyy-MM-dd\"\n                                                          margin=\"normal\"\n                                                          id=\"date-picker-inline\"\n                                                          label=\"Date of the Activity\"\n                                                          KeyboardButtonProps={{\n                                                            'aria-label': 'change date',\n                                                          }}\n                                                        />\n                                    </MuiPickersUtilsProvider>\n                             </FormControl>\n                     </Grid>\n\n                      <Grid item xs={6}>\n                                            <FormControl fullWidth className={classes.formControl}>\n                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                    <KeyboardTimePicker\n                                                     format= \"hh:mm a\"\n                                                      value={selectedTime}\n                                                      onChange={handleTime}\n                                                      margin=\"normal\"\n                                                      id=\"time-picker\"\n                                                      label=\"Time picker\"\n                                                      KeyboardButtonProps={{\n                                                        'aria-label': 'change time',\n                                                      }}\n                                                      keyboardIcon={<AccessTimeIcon />}\n                                                    />\n                                                </MuiPickersUtilsProvider>\n                                            </FormControl>\n                                         </Grid>\n                                         <br/>\n                        </Grid>\n\n                      <span style={{ color: \"red\" }}>\n                                {errors.date}\n                            </span>\n                          <br/>\n\n                     \t<Grid item xs={12}>\n                                    <TextField \n                                        value={values.activityRequirements}\n                                        onChange={e => setValues({...values, activityRequirements: e.target.value})}\n                                        id=\"activityRequirements\"\n                                        name=\"activityRequirements\"\n                                        label=\"Enter the requirements/instruction of the activity to implement\"\n                                        fullWidth\n                                        autoComplete\n                                         multiline\n         \t\t\t\t\t\t\t\t rows={4}\n         \t\t\t\t\t\t\t\t variant=\"outlined\"\n                                            />\n                                </Grid>\n                                <br />\n                              <span style={{ color: \"red\" }}>\n                                {errors.activityRequirements}\n                            </span>\n\n                         <Grid item xs={12}>\n                                     <TextField\n                                     \tlabel=\"Your Campus\"\n                                      \tid=\"campus\"\n                  \t\t\t\t\t\tname=\"campus\"\n                                    \tvalue={user.campus}\n                                      \tInputProps={{\n                                       \t readOnly: true,\n                                      \t}}\n                                    \tfullWidth\n                                \t/>\n                                </Grid>\n                                <br />\n\n\n                            <Grid item xs={12}>\n                                    <TextField \n                                        value={values.description}\n                                        onChange={e => setValues({...values, description: e.target.value})}\n                                        id=\"description\"\n                                        name=\"description\"\n                                        label=\"Enter the description of the activity to implement\"\n                                        fullWidth\n                                        autoComplete\n                                         multiline\n         \t\t\t\t\t\t\t\t rows={4}\n         \t\t\t\t\t\t\t\t variant=\"outlined\"\n                                            />\n                                </Grid>\n                                <br />\n                              <span style={{ color: \"red\" }}>\n                                {errors.description}\n                            </span>\n\n\t\t\t\t \t\t\t<Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n\t\t\t\t                  *** Please double check anything before passing it as a activity\n\t\t\t\t           </Typography>\n\n\t\t\t\t              <Button\n                                type=\"submit\"\n                               size=\"small\" \n                               variant=\"outlined\" \n                               color=\"secondary\"\n                                className={classes.submit}\n                            >\n                               Upload activity\n                            </Button>\n\n                       </form>\n\t\t\t\t</Paper>\n\t\t\t</Grid>             \n\n\t\t\t <Grid item md>\n             </Grid>\n\n    \t</Grid>\n\n    \t</Container>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\tassessment: state.assessment,\n\tauth: state.auth,\n\terrors: state.errors\n});\n\nconst mapDispatchToProps = { updateActivityAssessment };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateAssessment);","import React, { useState, useEffect, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\t\nimport { submitReport, submitReportFalse } from '../../actions/reportsActions';\nimport { createFormData } from \"./formData\";\nimport axios from 'axios';\n\n// Material-ui components \nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport Grid from '@material-ui/core/Grid';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Navbar2 from \"../layouts/Navbar2\";\n\n//Style component\nconst useStyles = makeStyles(theme => ({\n\t link: {\n    display: 'flex',\n    textDecoration: 'none',\n     color: '#8c8c8c',\n      '&:hover': {\n   \t\t textDecoration: 'underline',\n     \t }\n\t  },\n\t  textPrimary: {\n \t\tdisplay: 'flex',\n\t    textDecoration: 'none',\n\t    color: '#737373',\n\t      '&:hover': {\n\t   \t\t textDecoration: 'underline',\n\t     \t }\n\t  },\n\t  icon: {\n\t    marginRight: theme.spacing(0.5),\n\t    width: 20,\n\t    height: 20,\n\t  },\n\t     paper: {\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(0),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(2),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n     input: {\n    display: 'none',\n  },\n   margin: {\n    margin: theme.spacing(1),\n  },\n  submit:{\n        marginTop: theme.spacing(3),\n      },\n}));\n\n\nfunction SendOrgReports(props){\n\n\tconst classes = useStyles();\n\n\t//State\n\tconst [orgname, setOrgName] = useState('');\n\tconst [errorOrgName, setErrorOrgName] = useState(false);\n\n\tconst [submitted, setSubmitted] = useState(false);\n\n\t//Error handler state\n\tconst [errors, getErrors] = useState({});\n\n\t//Reports Body\n\tconst [values, setValues] = useState({\n\t\treportTitle: '',\n\t\treportDesc: '',\n\t\tfile: null,\n\t\tfileName: ''\n\t});\n\n\t//Event Handlers\n\t const handleClose = () => {\n\t    setSubmitted(false);\n\t    setValues({\n\t    \treportTitle: '',\n\t\t\treportDesc: '',\n\t\t\tfile: null,\n\t\t\tfileName: ''\n\t    })\n\t  };\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tconst { user } = props.auth;\n\n\t\tconst newReports = {\n\t\t\t...values,\n\t\t\torgname,\n\t\t\tcampus: user.campus,\n\t\t\tusername: user.username\n\t\t}\t\t\n\n\t\t//Report body\n\t\tlet fd = new FormData();\n\t\tfd.append('file', values.file);\n\t\tfd.append('reportTitle', values.reportTitle);\n\t\tfd.append('reportDesc', values.reportDesc);\n\t\tfd.append('orgname', orgname);\n\t\tfd.append('campus', user.campus);\n\t\tfd.append('username', user.username);\n\n\t\t//orgFeed body\n\t\tconst newOrgFeed = { \n\t\t\tusername: user.username,\n\t\t\torgname,\n\t\t\treportTitle: values.reportTitle,\n\t\t\treportDesc: values.reportDesc\n\t\t}\n\n\t\t// console.log(newOrgFeed);\n\n\t\t// console.log(newReports);\n\t\tprops.submitReport(fd, newOrgFeed);\n\n\n\t}\n\t//Component effect\n\t// Effect to know what org is online\n\t useEffect(_ => {\n\t\tconst { auth } = props;\n\n\t\taxios.get('/api/org/getorgaccnts')\n\t\t.then(res => res.data.filter(org => auth.user.username === org.username).map(org => setOrgName(org.orgname)))\n\t\t.catch(err => {\n\t\t\t// if(err.request)\n\t\t\t// \tsetErrorOrgName(true)\n\t\t\tconsole.log(err);\n\t\t});\n\n\t},[]);\n\n\t useEffect(_ => {\n\t \tif(props.reports.submitted)\n\t \t\tsetSubmitted(true)\n\n\t\tsetTimeout(function () {\n\t\t\tprops.submitReportFalse()\n\t\t}, 6000)\n\n\t },[props.reports.submitted]);\n\n\t  // Component Effect for the errors\n     useEffect(_ => {\n          if(props.errors)\n              getErrors(props.errors)\n        },[props.errors]);\n\n\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar2 />\n\n\t\t\t\t <Dialog\n\t\t\t        open={submitted}\n\t\t\t        onClose={handleClose}\n\t\t\t        aria-labelledby=\"alert-dialog-title\"\n\t\t\t        aria-describedby=\"alert-dialog-description\"\n\t\t\t      >\n\t\t\t        <DialogTitle id=\"alert-dialog-title\">{\"Send an organizational report\"}</DialogTitle>\n\t\t\t        <DialogContent>\n\t\t\t          <DialogContentText id=\"alert-dialog-description\">\n\t\t\t            You've archived your reports to the admin successfully\n\t\t\t          </DialogContentText>\n\t\t\t        </DialogContent>\n\t\t\t        <DialogActions>\n\n\t\t\t          <Button onClick={handleClose} color=\"primary\">\n\t\t\t            OK\n\t\t\t          </Button>\n\n\n\t\t\t        </DialogActions>\n\t\t\t      </Dialog>\n\n\t\t\t \t\t<Container maxWidth=\"xl\" style={{paddingTop: 20}}>\n\n\t\t\t \t\t<Breadcrumbs aria-label=\"breadcrumb\">\n\t\t\t      \t\t<Link to=\"/org/activitysections\" className={classes.link}>\n\t\t\t      \t\t\t<HomeIcon className={classes.icon}/>\n\t\t\t      \t\t\tMenu\n\t\t\t      \t\t</Link>\n\n\t\t\t\t\t        <Link\n\t\t\t\t\t          to={' '}\n\t\t\t\t\t          aria-current=\"page\"\n\t\t\t\t\t          className={classes.textPrimary}\n\t\t\t\t\t        >\n\t\t\t\t\t        <ArchiveIcon className={classes.icon}/>\n\t\t\t\t\t        Archived\n\t\t\t\t\t        </Link>\n\n\t\t\t      \t</Breadcrumbs>\n\n\t\t\t      \t    \t<Grid container spacing={2}> \n\n\n\t\t\t\t\t      \t    \t\t<Grid item xs={2}>\n\t\t\t\t\t      \t    \t\t</Grid>\n\n\t\t\t\t\t      \t    \t\t<Grid  item xs={8}>\n\t\t\t      \t    \t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t      \t    \t\t\t\t\t{\n\t\t\t      \t    \t\t\t\t\t\terrorOrgName\n\t\t\t      \t    \t\t\t\t\t\t?\n\t\t\t      \t    \t\t\t\t\t\t<Typography variant=\"h6\" align=\"center\">\n\t\t\t\t\t                          \t\t  Something went wrong. Please refresh the page.\n\t\t\t\t\t                        \t\t</Typography>\n\t\t\t      \t    \t\t\t\t\t\t:\n\t\t\t      \t    \t\t\t\t\t\t<Fragment>\n\t\t\t      \t    \t\t\t\t\t\t\t\n\t\t\t      \t    \t\t\t\t\t\t\t <Typography variant=\"h6\">\n\t\t\t\t\t                          \t\t  Input the details needed.\n\t\t\t\t\t                        \t\t</Typography>\n\n\t\t\t\t\t                        \t\t<form noValidate onSubmit={handleSubmit}>\n\n\t\t\t\t\t                        \t\t <TextField\n\t\t\t\t\t                        \t\t \tonChange={e => setValues({...values, reportTitle: e.target.value}) }\n\t\t\t\t\t                        \t\t \tvalue={values.reportTitle}\n\t\t\t\t\t                                    id=\"reportTitle\"\n\t\t\t\t\t                                    name=\"reportTitle\"\n\t\t\t\t\t                                    label=\"Title of your report\"\n\t\t\t\t\t                                    fullWidth\n\t\t\t\t\t                                    autoComplete=\"reportTitle\"\n\t\t\t\t\t                                />\n\t\t\t\t\t                                <br />\n\t\t\t\t\t\t\t\t                      <span style={{ color: \"red\" }}>\n\t\t\t                                               {errors.reportTitle}\n\t\t\t                                         </span>\n\t\t\t\t\t                                <br />\n\n\t\t\t\t\t                                 <TextField\n\t\t\t\t\t                        \t\t \tonChange={e => setValues({...values, reportDesc: e.target.value}) }\n\t\t\t\t\t                               \t\tvalue={values.reportDesc}\n\t\t\t\t\t                                    id=\"reportDesc\"\n\t\t\t\t\t                                    name=\"reportDesc\"\n\t\t\t\t\t                                    label=\"Description of your report\"\n\t\t\t\t\t                                    fullWidth\n\t\t\t\t\t                                    autoComplete=\"reportDesc\"\n\t\t\t\t\t                                    multiline\n\t\t\t\t\t                                />\n\t\t\t\t\t                                   <span style={{ color: \"red\" }}>\n\t\t\t                                               {errors.reportDesc}\n\t\t\t                                         </span>\n\n\t\t\t\t\t                                {/* File Upload TextField */}\n\t\t\t\t\t\t\t                                <div className={classes.margin}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        <Grid container spacing={1} alignItems=\"flex-end\">\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          <Grid item xs={1}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          {/* \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t onChange={e => setObj({...obj, file: e.target.files[0], fileName: e.target.files[0].name})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input onChange={e => setValues({...values, file: e.target.files[0], fileName: e.target.files[0].name}) }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.input} id=\"file\" name=\"file\" type=\"file\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      <label htmlFor=\"file\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          <CloudUploadIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        </IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t     </label>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          </Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          <Grid item xs={11}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            <TextField \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            value={values.fileName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            id=\"input-with-icon-grid\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            label=\"Enter your report here\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            helperText=\"Note: .docx and .pdf file types only\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            fullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t              InputProps={{\n\t\t\t\t\t\t\t                                               readOnly: true,\n\t\t\t\t\t\t\t                                              }}\n\t\t\t\t\t\t\t                                           InputLabelProps={{\n\t\t\t\t\t\t\t                                           \t\tshrink: true,\n\t\t\t\t\t\t\t                                           }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            />\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            {/*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        Native Input file for\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        <input type=\"file\" name=\"file\" value={fileName} onChange={handleChangeFile}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t               \t*/ }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        \n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        </Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        </Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    </div> \n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span style={{ color: \"red\" }}>\n\t\t\t                                               {errors.file}\n\t\t\t                                         </span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    <br/>\n\t\t\t\t\t                        \t\t<span>*** Please double check everythin before you submit</span>\n\n\t\t\t\t\t                        \t\t\t<Button\n\t\t\t\t\t\t\t                                type=\"submit\"\n\t\t\t\t\t\t\t                                fullWidth\n\t\t\t\t\t\t\t                                variant=\"contained\"\n\t\t\t\t\t\t\t                                color=\"primary\"\n\t\t\t\t\t\t\t                                className={classes.submit}\n\t\t\t\t\t\t\t\t                            >\n\t\t\t\t\t\t\t\t                                submit\n\t\t\t\t\t\t\t\t                            </Button>\n\t\t\t\t\t                        \t\t</form>\n\n\n\t\t\t      \t    \t\t\t\t\t\t</Fragment>\n\t\t\t      \t    \t\t\t\t\t}\n\t\t\t\t\t\t\t\t      \t    \t\t\n\t\t\t\t\t\t\t\t     \t\t \t\t\n\t\t\t\t\t\t\t\t      \t    </Paper>\t\n\t\t\t\t\t      \t    \t\t</Grid>\n\n\t\t\t\t\t      \t    \t\t<Grid item xs={2}>\n\t\t\t\t\t      \t    \t\t</Grid>\n\n\n\t\t\t      \t    \t</Grid>\n\n\n\t\t\t \t\t</Container>\n\t\t\t</div>\n\t\t);\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth,\n\terrors: state.errors,\n\treports: state.reports\n});\n\nconst mapDispatchToProps = { submitReport, submitReportFalse };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SendOrgReports);","import axios from 'axios';\n\nimport {\n\tSEND_REPORT,\n\tSEND_REPORT_FALSE,\n\tGET_REPORTS,\n\tARCHIVED_LOADING,\n\tGET_ERRORS\n} from './types';\n\nexport const submitReport = (data, orgFeed) => dispatch => {\n\taxios.post('/api/reports/passReports', data)\n\t.then(res =>  dispatch({\n\t\ttype: SEND_REPORT,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => dispatch({\n\t\ttype:GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\n\n\t // if (res.status === 200) {\n\t axios.post('/api/reports/sendOrgFeed', orgFeed)\n\t.then(res => res)\n\t.catch(err => console.log(err))\n\t\n}\n\nexport const submitReportFalse = _ => {\n\treturn { type: SEND_REPORT_FALSE }\n}\n\nexport const getReports = _ => dispatch => {\n\taxios.get('/api/reports/')\n\t.then(res => dispatch({\n\t\ttype: GET_REPORTS,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => console.log(err))\n}\n\nexport const reportLoading = _ => {\n\treturn { type: ARCHIVED_LOADING }\n}","import React, { useMemo, forwardRef, Fragment} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Badge from '@material-ui/core/Badge';\n\n// Component for having a sidebar with links on it \nfunction ListItemLink(props) {\n    // props to be included in the component \n    const { icon, primary, to , count, handleClick} = props;\n\n    // Function for rendering the component everytime the listlink is clicked  \n    const renderLink = useMemo(\n        _ => forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n        [to],\n    );\n\n    return (\n        <Fragment>\n    {     \n        handleClick        \n        ?\n        <li>\n           <ListItem button onClick={handleClick} component={renderLink}>\n               \n                {\n                // If icon props is included \n                icon ? \n                <Fragment>\n                  \n                    {\n                        // If count props is included \n                        count \n                        ?\n                        <ListItemIcon>\n                            <Badge badgeContent={count} color=\"primary\">\n                            {icon}\n                            </Badge>\n                        </ListItemIcon> \n                        \n                        :\n                        <ListItemIcon>{icon}</ListItemIcon> \n                    }\n                    </Fragment>\n                : null}\n                <ListItemText primary={primary} />\n           </ListItem>\n       </li>\n        :\n        // if none \n        <li>\n           <ListItem button component={renderLink}>\n               \n                {\n                // If icon props is included \n                icon ? \n                <Fragment>\n                  \n                    {\n                        // If count props is included \n                        count \n                        ?\n                        <ListItemIcon>\n                            <Badge badgeContent={count} color=\"primary\">\n                            {icon}\n                            </Badge>\n                        </ListItemIcon> \n                        \n                        :\n                        <ListItemIcon>{icon}</ListItemIcon> \n                    }\n                    </Fragment>\n                : null}\n                <ListItemText primary={primary} />\n           </ListItem>\n       </li>\n    }\n    </Fragment>\n       \n    )\n}\n\nListItemLink.propTypes = {\n    icon: PropTypes.element,\n    primary: PropTypes.string.isRequired,\n    to: PropTypes.string.isRequired,\n  };\n\nexport default ListItemLink;","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport axios from 'axios';\n//Redux components\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { countNotifHead, updateCountNotif } from '../../actions/requestActivitiesActions';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport EventIcon from '@material-ui/icons/Event';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport FindReplaceIcon from '@material-ui/icons/FindReplace';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\n\n//Link Components\nimport ListItemLink from './ListItemLink';\n\nconst drawerWidth = 240;\n\nconst Transition = props => {\n    return <Slide direction=\"up\" {...props} />\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction DashboardHead(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    //States\n    \n    const [open, setOpen] = useState(true);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [count, setCount] = useState(0);\n\n    // Counting the notif filtered by campus in request_activities table\n    // const [count, setCount] = useState(4);\n    // Event Handlers \n\n    // onclick menu toggle\n    const handleDrawerOpen = _ => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = _ => {\n        setOpen(false);\n    };\n\n    const onModalLogoutClick = _ => {\n        setModalOpen(true)\n    }\n\n    const onHandleLogoutClickClose = _ => {\n        setModalOpen(false)\n    }\n\n    const onLogOutClick = e => {\n        props.logoutUser();\n    }\n\n    const handleUpdateNotif = notif => {\n        const { auth } = props;\n        const read = { notif }\n        props.updateCountNotif(read, auth.user.campus);\n    }\n\n\n    // Component Effects \n\n    useEffect(_ => {\n\n        const { auth } = props;\n\n        axios.get(`/api/requestactivities/countheadrequest/${auth.user.campus}`)\n        .then(res => setCount(res.data.count))\n        .catch(err => console.log(err))\n\n\n    },[count]);\n\n\n    //Name of user\n    const { user } = props.auth;\n    // Props of the count notification \n    const { requestActivities } = props;\n\n    // The count for the Notifications \n\n    return (\n        <div className={classes.root}>\n            {/* Modal  */}\n            <Dialog\n                open={modalOpen}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={onHandleLogoutClickClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    {\"Logging Out\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Are you sure you want to Logout?\n                        </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onHandleLogoutClickClose} variant=\"outlined\" color=\"primary\">\n                        Cancel\n                        </Button>\n                    <Button onClick={onLogOutClick} variant=\"outlined\" color=\"secondary\">\n                        Logout\n                               </Button>\n                </DialogActions>\n            </Dialog>\n\n            {/* Dashboard  */}\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar style={{ backgroundColor: \"#820101\" }}>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        SOA Web Portal\n          </Typography>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n                open={open}\n            >\n                {/* SideNav Drawer Components */}\n                <div className={classes.toolbar}>\n\n                    <Box fontSize={12} m={1}>SOA Head - {user.campus}</Box>\n\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <MenuIcon /> : <MenuIcon />}\n                    </IconButton>\n                </div>\n\n                <Divider />\n                {/* Item List 1 */}\n                <List>\n\n                    <ListItemLink \n                    to=\"/h\" \n                    primary=\"Calendar\" \n                    icon={<EventIcon />}\n                    />\n\n                    <ListItemLink \n                    to=\"/h/announceevent\" \n                    primary=\"Announce Events\"\n                    icon={<AnnouncementIcon />}                    \n                    />\n\n                </List>\n\n                <Divider />\n\n                <List>\n\n                    <ListItemLink \n                    to=\"/h/lostandfound\"\n                    primary=\"Lost and Found\"\n                    icon={<FindReplaceIcon />}\n                    />\n\n                </List>\n                \n                <Divider />\n\n                {/* Item List 2 */}\n                <List>  \n\n                    <ListItemLink \n                    to=\"/h/organizationlist\"\n                    primary=\"Organization List\"\n                    icon={<FormatListBulletedIcon />}\n                    />\n\n                    <ListItemLink \n                    handleClick={_ => handleUpdateNotif('read')}\n                    to=\"/h/requestedactivities\"\n                    primary=\"Requested Activities\"\n                    icon={<ListAltIcon />}\n                    count={count}\n                    />\n\n                    <ListItemLink\n                    to=\"/h/activityassessment\"\n                    primary=\"Activity Assessment\"\n                    icon={<AssessmentIcon />}\n                     />\n\n                </List>\n\n                <Divider />\n\n                {/* Item List 2 */}\n                <List>\n                    <ListItem style={{ color: \"red\" }} button onClick={onModalLogoutClick}>\n                        <ListItemIcon><ExitToAppIcon color=\"error\" /></ListItemIcon>\n                        <ListItemText>Logout</ListItemText>\n                    </ListItem> \n                </List>\n            </Drawer>\n\n            {/* for the main content */}\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {props.children}\n            </main>\n        </div>\n    );\n}\n\n//Redux State connection \nconst mapStateToProps = state => ({\n    auth: state.auth,\n    requestActivities: state.requestActivities\n});\n//Dipatch proptypes(React Hooks) \nconst mapDispatchToProps = { logoutUser, countNotifHead, updateCountNotif };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardHead); ","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport DashBoardHead from '../layouts/DashboardHead';\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClic\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n}));\n\nfunction HeadIndex(props){\n\n    const classes = useStyles();\n\n         const [events, setEvents] = useState([]);\n\n    useEffect(_ => {\n            axios.get('/api/announcements/')\n                .then(res => setEvents(res.data))\n                .catch(err => console.log(err));\n            },[]);\n\n    const dateClick = arg => {\n        // console.log(arg);\n        props.history.push(`/h/calendar/listOfEvents/${arg.dateStr}`)\n    }\n\n    const renderEventContent = eventInfo => (\n            <Fragment>     \n        {/*console.log(eventInfo) */}\n     \n            <a href={`/h/calendar/${eventInfo.event._def.publicId}`}>\n              <span style={{color: 'white', backgroundColor:`${eventInfo.backgroundColor}`}}>\n               \n               <b>{eventInfo.timeText}</b> &nbsp;\n                <span>{eventInfo.event.title}</span>\n\n               </span>\n            </a>\n            </Fragment>\n        )\n\n        return (\n            <div>\n                <DashBoardHead>\n                     <Paper className={classes.root}>\n\n                        <FullCalendar\n                            plugins={[ dayGridPlugin , interactionPlugin ]}\n                            initialView=\"dayGridMonth\"\n                            weekends={true}\n                            events={events}\n                            eventContent={renderEventContent}\n                            themeSystem='bootstrap'\n                            dateClick={dateClick}\n                          />\n\n                     </Paper>\n                </DashBoardHead>\n            </div>\n        )\n}\n\nexport default HeadIndex;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass FormConfirmationMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant={this.props.variant}\n            message={this.props.message}\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default FormConfirmationMsg;","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { addAnnouncementFalseHead, updateAnnouncementFalseHead } from '../../actions/announcementActions';\n\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Button from '@material-ui/core/Button';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Slide from '@material-ui/core/Slide';\n\n//Admin Dashboard Component\nimport DashboardHead from '../layouts/DashboardHead';\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\nconst Transition = props => {\n    return <Slide direction=\"up\" {...props} />\n}\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\n\nconst styles = makeStyles(theme => ({\n    root: {\n        // ...theme.mixins.gutters(),\n        // paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n     root2: {\n    width: '100%',\n    paddingBottom: '2 0px',\n      flexGrow: 1,\n  },\n    link: {\n    display: 'flex',\n      },\n       icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n      },\n       formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nfunction AnnounceEvents(props){\n        const classes = styles();\n\n    /* States */\n      \n      // Pagination Controls addAnnouncementFalseHead\n      const [page, setPage] = useState(0);\n      const [rowsPerPage, setRowsPerPage] = useState(5);\n\n      const [id, setId] = useState();\n\n      const [events, getEvents] = useState([]);\n      const [loading, setLoading] = useState(true);\n      const [ifError, setIfError] = useState(false);\n\n      //Confirmation States\n      const [added, setAdded] = useState(false);  \n      const [updated, setUpdate] = useState(false);\n      const [deleted, setDeleted] = useState(false);\n\n      //Delete modal State\n      const [deleteModal, openDeleteModal] = useState(false);\n\n    /* Event Handlers */\n        //Getting the pages, Material UI Funcs\n          const handleChangePage = (event, newPage) => {\n            setPage(newPage);\n          };\n\n          const handleChangeRowsPerPage = event => {\n            setRowsPerPage(parseInt(event.target.value, 10));\n            setPage(0);\n          };\n\n            // Event for openAdded state \n        const handleClose = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setAdded(false);\n                props.addAnnouncementFalseHead();\n          };\n\n                // Event for openAdded state \n        const handleCloseUpdate = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setUpdate(false);\n                props.updateAnnouncementFalseHead();\n          };\n\n          const handleCloseDelete = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setDeleted(false);\n                props.deleteAnnouncementFalseHead();\n          };\n\n          //Delete button function\n        const handleDelete = id => {\n          setId(id);\n\n          openDeleteModal(true);\n        }\n\n        //Final action for the delete action\n        const deleteFinal = _ => {\n          props.deleteAnnouncement(id);\n\n          openDeleteModal(false);\n\n        }\n\n        const handleDeleteModalClose = _ => {\n          openDeleteModal(false)\n        }\n\n        useEffect(_ => {\n\n        axios.get('/api/announcements/')\n        .then(res => {\n          getEvents(res.data);\n          setLoading(false);\n        })\n        .catch(err => {\n          if(err) \n            setIfError(true)\n        })\n\n        },[props.announcement.addedHead, props.announcement.updateHead, props.announcement.deletedHead]);\n\n    /* Component Effect */\n    useEffect(_ => {\n      if(props.announcement.added)\n          setAdded(true);\n\n      setTimeout(function(){ props.addAnnouncementFalseHead() }, 6000);\n\n\n    },[props.announcement.added]);\n\n    useEffect(_ => {\n       if(props.announcement.updated)\n          setUpdate(true)\n\n      setTimeout(function(){ props.updateAnnouncementFalseHead() }, 6000);\n\n    },[props.announcement.updated])\n\n    const { user } = props.auth;\n\n    const rows = events.sort((a, b) => a.created_at > b.created_at ? -1 : 1)\n                .filter(row => row.setBy === `SOA Head of ${user.campus}`);\n\n    //Empty row that says the rows for paginationaddAnnouncementFalseHead\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n        return (\n            <div>\n                <DashboardHead>\n\n                 {/* Modal body for the delete */}\n\n                   <Dialog\n                   open={deleteModal}\n                   TransitionComponent={Transition}\n                   keepMounted\n                   onClose={handleDeleteModalClose}\n                   aria-labelledby=\"alert-dialog-slide-title\"\n                   aria-describedby=\"alert-dialog-slide-description\"\n                   >\n                       <DialogTitle id=\"alert-dialog-slide-title\">\n                           {\"Approved Request Activity\"}\n                        </DialogTitle>\n\n                        <DialogContent>\n\n                          <DialogContentText id=\"alert-dialog-slide-description\">\n                              Are you sure to approve this requested activity?\n                              </DialogContentText>\n                          </DialogContent>  \n\n                          <DialogActions>\n                            <Button onClick={deleteFinal} variant=\"outlined\" color=\"primary\">\n                              Yes\n                            </Button>\n                            <Button onClick={handleDeleteModalClose} variant=\"outlined\" color=\"secondary\">\n                              No\n                            </Button>\n                          </DialogActions>\n                   </Dialog>\n\n                <FormConfirmationMsg open={added} onClose={handleClose} variant=\"success\" message=\"Announcement Added.\"  />\n                <FormConfirmationMsg open={updated} onClose={handleCloseUpdate} variant=\"success\" message=\"Announcement Update Successfully.\"  />\n\n      {/* Button that will redirect to registering a account*/}\n                 <Button \n                        href=\"/h/announceevent/addEvent\"\n                        className={classes.button}\n                        variant=\"outlined\" \n                        color=\"secondary\"\n                        >\n                        Add Event\n                    </Button>\n                    <br />\n                    <br />  \n\n                    <Paper className={classes.root}>\n                        \n                        <div className={classes.tableWrapper}>\n\n                            <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Event title</StyledTableCell>\n                                <StyledTableCell align=\"left\">Date of Event</StyledTableCell>\n                                <StyledTableCell align=\"left\">Time of Event</StyledTableCell>\n                                <StyledTableCell align=\"left\">Venue of the Event</StyledTableCell>\n                                <StyledTableCell align=\"left\">Announce by</StyledTableCell>\n                                <StyledTableCell align=\"left\">Action</StyledTableCell>\n\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { loading \n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :  \n                                    <Fragment>\n                                     {\n                                      ifError\n                                      ?\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <span>Something went wrong. Please try again.</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :\n                                    //Data to be displayed when the data is fetched\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.title}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{moment(row.dateDate).format('MMMM D YYYY')}</TableCell>\n                                          <TableCell align=\"left\">{moment(row.date).format('LT')}</TableCell>\n                                          <TableCell align=\"left\">{row.venue}</TableCell>\n                                          <TableCell align=\"left\">{row.setBy}</TableCell>\n                                          <TableCell align=\"left\">\n\n                                                <Tooltip title=\"Update\" placement=\"top\">\n                                                 <IconButton href={`/h/announceevent/updateEvent/${row.id}`} aria-label=\"edit\" color=\"primary\">\n                                                  <EditIcon />\n                                                </IconButton>\n                                              </Tooltip>   \n                                              {/*\n                                              <Tooltip title=\"Delete\" placement=\"top\">\n                                                 <IconButton onClick={_ => handleDelete(row.id)} aria-label=\"edit\" color=\"secondary\">\n                                                  <DeleteIcon />\n                                                </IconButton>\n                                              </Tooltip>   \n                                               */ }\n                                          </TableCell>\n                                        </TableRow>\n                                      ))\n                                    \n                                    }\n                                    </Fragment>\n                                    \n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n                        </div>\n\n                    </Paper>\n\n                </DashboardHead>\n            </div>\n        )\n    \n}\n\nconst mapStateToProps = state => ({\n  announcement: state.announcement,\n  auth: state.auth\n});\n\nconst mapDispatchToProps = { addAnnouncementFalseHead, updateAnnouncementFalseHead }; \n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnnounceEvents);\n","import axios from 'axios';\n\nimport {\n\tADD_ANNOUNCEMENT_ADMIN,\n\tADD_ANNOUNCEMENT_ADMIN_FALSE,\n\n\tUPDATE_ANNOUNCEMENT_ADMIN,\n\tUPDATE_ANNOUNCEMENT_ADMIN_FALSE,\n\n\tDELETE_ANNOUNCEMENT_ADMIN,\n\tDELETE_ANNOUNCEMENT_ADMIN_FALSE,\n\n\tGET_ERRORS\n} from './types';\n\n//Admin\nexport const addAnnouncement = data => dispatch => {\n\taxios.post('/api/announcements/addEvents', data)\n\t.then(res => dispatch({\n\t\ttype: ADD_ANNOUNCEMENT_ADMIN,\n\t\tpayload: res.data,\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\n}\n\nexport const addAnnouncementFalse = _ => {\n\treturn {\n\t\ttype: ADD_ANNOUNCEMENT_ADMIN_FALSE\n\t}\n}\n\nexport const updateAnnouncement = (id,data) => dispatch => {\n\taxios.post(`/api/announcements/updateannouncement/${id}`, data)\n\t.then(res => dispatch({\n\t\ttype:UPDATE_ANNOUNCEMENT_ADMIN\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\n}\n\nexport const updateAnnouncementFalse = _ => {\n\treturn {\n\t\ttype: UPDATE_ANNOUNCEMENT_ADMIN_FALSE\n\t}\n}\n\nexport const deleteAnnouncement = id => dispatch => {\n\taxios.delete(`/api/announcements/deleteannouncement/${id}`)\n\t.then(res => dispatch({\n\t\ttype: DELETE_ANNOUNCEMENT_ADMIN\n\t}))\n\t.catch(err => console.log(err));\n}\n\nexport const deleteAnnouncementFalse = _ => {\n\treturn  { type: DELETE_ANNOUNCEMENT_ADMIN_FALSE }\n}\n\n// Head\nexport const addAnnouncementHead = data => dispatch => {\n\taxios.post('/api/announcements/addEvents', data)\n\t.then(res => dispatch({\n\t\ttype: ADD_ANNOUNCEMENT_ADMIN,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\n\t// .catch(err => console.log(err.response))\n}\nexport const addAnnouncementFalseHead = _ => {\n\treturn {\n\t\ttype: ADD_ANNOUNCEMENT_ADMIN_FALSE\n\t}\n}\n\nexport const updateAnnouncementHead = (id,data) => dispatch => {\n\taxios.post(`/api/announcements/updateannouncement/${id}`, data)\n\t.then(res => dispatch({\n\t\ttype:UPDATE_ANNOUNCEMENT_ADMIN,\t\n\t\tpayload: res.data\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\n}\n\nexport const updateAnnouncementFalseHead = _ => {\n\treturn {\n\t\ttype: UPDATE_ANNOUNCEMENT_ADMIN_FALSE\n\t}\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass FoundSuccessMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant=\"info\"\n            message=\"Item Reported has been found!\"\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default FoundSuccessMsg;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass ClaimedSuccessMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant=\"success\"\n            message=\"Item Reported is now claimed!\"\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default ClaimedSuccessMsg;","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { setReportToFound, setReportToClaimed } from '../../actions/lafActions';\nimport { withRouter } from \"react-router\";\n\nimport axios from 'axios';\nimport moment from 'moment';\n\nimport { withStyles, makeStyles, useTheme} from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\n//Other Components\nimport FoundSuccessMsg from './FoundSuccessMsg';\nimport ClaimedSuccessMsg from './ClaimedSuccessMsg';\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  }));\n\n//Colored button for The Claimed Action\nconst ClaimedButton = withStyles((theme) => ({\n  root: {\n    // color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n}))(Button);\n  \n  // Table Functions for table pagination \n  // Table one \n  function TablePaginationActions(props) {\n      const classes = useStyles1();\n      const theme = useTheme();\n      const { count, page, rowsPerPage, onChangePage } = props;\n    \n      const handleFirstPageButtonClick = event => {\n        onChangePage(event, 0);\n      };\n    \n      const handleBackButtonClick = event => {\n        onChangePage(event, page - 1);\n      };\n    \n      const handleNextButtonClick = event => {\n        onChangePage(event, page + 1);\n      };\n    \n      const handleLastPageButtonClick = event => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n      };\n      // Table Pagination Component \n      return (\n        <div className={classes.root}>\n          <IconButton\n            onClick={handleFirstPageButtonClick}\n            disabled={page === 0}\n            aria-label=\"first page\"\n          >\n            {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n          </IconButton>\n          <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n          </IconButton>\n          <IconButton\n            onClick={handleNextButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"next page\"\n          >\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </IconButton>\n          <IconButton\n            onClick={handleLastPageButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"last page\"\n          >\n            {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n          </IconButton>\n        </div>\n      );\n    }\n    \n    TablePaginationActions.propTypes = {\n      count: PropTypes.number.isRequired,\n      onChangePage: PropTypes.func.isRequired,\n      page: PropTypes.number.isRequired,\n      rowsPerPage: PropTypes.number.isRequired,\n    };\n  \n  \n  \n  // Style of the main Component \n  const styles = theme => ({\n      root: {\n          ...theme.mixins.gutters(),\n          paddingTop: theme.spacing(2),\n          paddingBottom: theme.spacing(2),\n      },\n      table: {\n        minWidth: 500,\n      },\n      tableWrapper: {\n        overflowX: 'auto',\n      },\n  });\n  \n  function LostAndFoundTable2(props) {\n      const classes = props;\n    // Table pagination Actions states\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    // Data State for getting the reports \n    const [reports, getReports] = useState([]);\n\n// State for the confirmation message component\n  const [found, setFound] = useState(false);\n  const [claimed, setClaimed] = useState(false);\n\n  //statements for the action to be submitted as data for found and claimed actions\n  const [foundData, ] = useState('Found, Not Claimed');\n  const [claimedData, ] = useState('Found and Claimed');\n\n      // Loading for fetching datas \n    const [loading, setLoading] = useState(true);\n  \n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n  \n    const handleChangeRowsPerPage = event => {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    };\n\n    //Action for Claimed and Found\n    // The function button for setting the data into found \n    const setAsFound = id => {\n\n      if(window.confirm(\"Are you sure this report item is now found?\") ){\n         const updateStatusFound = {\n            status: foundData\n          };\n\n          props.setReportToFound(id, updateStatusFound);\n          setFound(true);\n      }\n         \n    };\n\n    // The function button for setting the data into found \n    const setAsClaimed = id => {\n\n      if(window.confirm(\"Are you sure this report item is now claimed?\")){\n        const updateStatusClaimed = {\n          status: claimedData\n        };\n\n        props.setReportToClaimed(id, updateStatusClaimed);\n        setClaimed(true);\n      }\n        \n    };\n\n    //Success handlin message \n  const handlingCloseAction = (event, reason) => {\n    if(reason === 'clickaway'){\n        return\n    }\n    setFound(false);\n  };\n\n    //Success handlin message \n  const handlingCloseAction1 = (event, reason) => {\n    if(reason === 'clickaway'){\n        return\n    }\n    setClaimed(false);\n  };\n\n// Fuction expression for getting all the reports in the database \n   const fetchReports = async _ => {\n      const res = await axios.get('/api/lost/getreportlostitem');\n          getReports(res.data);\n          setLoading(false);\n   };\n\n    // Fetch the datas of lost item reports through reducer \n  useEffect( _ => {\n\n// an Interval that fetches the reports and renders every 2secs. \n// It will update the component whether if theres changes or not \n    const id = setInterval( _ => {\n        fetchReports();\n    }, 2000);\n\n\n    return _ => {\n      clearInterval(id);\n    };\n\n    // Including a dependency makes an infinity loop of rendering the reporsts \n\n  //May 12 2020, remove reports dependency tha causes infinity loop\n  },[]);\n\n\n  // This is the props for getting the details of the user \n  const auth = props.auth;\n\n  //Date Methods Filtering\n  let today = new Date();\n   const dd = String(today.getDate()).padStart(2, '0');\n   const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n   const yyyy = today.getFullYear();\n\n  today = yyyy + '-' + mm + '-' + dd;\n  const dateFilter = moment(today).format('YYYY-MM-DD');\n\n  //Array of the reports in the lost item reports \n  const rows = reports.sort((a, b) => (a.created_at > b.created_at ? -1 : 1))\n  .filter(row => ( moment(row.created_at).format('YYYY-MM-DD') !== dateFilter && auth.user.campus === row.campus ) );\n\n  //Empty row that says the rows for pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n      return (\n      <Fragment>\n\n    {/* Confirmation messages */}\n      <FoundSuccessMsg open={found} onClose={handlingCloseAction}/>\n      <ClaimedSuccessMsg open={claimed} onClose={handlingCloseAction1}/>\n\n        <Paper className={classes.root}>\n  \n              {/* Table for the today reports will be here */}\n                 <div className={classes.tableWrapper}>\n                  <Table className={classes.table} aria-label=\"custom pagination table\">\n\n                  <TableHead>\n                    <TableRow>\n                      <StyledTableCell>Student name</StyledTableCell>\n                      <StyledTableCell align=\"left\">SR-Code</StyledTableCell>\n                      <StyledTableCell align=\"left\">College Year</StyledTableCell>\n                      <StyledTableCell align=\"left\">Campus</StyledTableCell>\n                      <StyledTableCell align=\"left\">Department</StyledTableCell>\n                      <StyledTableCell align=\"left\">Student course</StyledTableCell>\n                      <StyledTableCell align=\"left\">Lost Item Details</StyledTableCell>\n                      <StyledTableCell align=\"left\">Contact Details</StyledTableCell>\n                      <StyledTableCell align=\"left\">Report Status</StyledTableCell>\n                      <StyledTableCell align=\"left\">Date Reported</StyledTableCell>\n                      <StyledTableCell align=\"left\">Actions</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n\n                <TableBody>\n              { loading \n                ? \n                  //When the data is still loading\n                  <TableRow>\n                  <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                    <CircularProgress color=\"secondary\" /><br/>\n                    <span>Loading ...</span>\n                  </TableCell>\n                </TableRow>\n                :   \n\n                <Fragment>\n                  {\n                    rows.length === 0\n                    ?\n                    <TableRow>\n                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                        <span>No Report Records? Refresh the page after 5 mins to see what's up</span>\n                      </TableCell>\n                    </TableRow>\n                    :\n                      //Data to be displayed when the data is fetched\n                      <Fragment>\n                      {\n                      \n                        (rowsPerPage > 0\n                          ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                          : rows\n                        )\n                        .map(row => (\n                          <TableRow>\n                            <TableCell component=\"th\" scope=\"row\">\n                              {row.name}\n                            </TableCell>\n                            <TableCell align=\"left\">{row.src}</TableCell>\n                            <TableCell align=\"left\">{row.yr}</TableCell>\n                            <TableCell align=\"left\">{row.campus}</TableCell>\n                            <TableCell align=\"left\">{row.department}</TableCell>\n                            <TableCell align=\"left\">{row.course}</TableCell>\n                            <TableCell align=\"left\">{row.details}</TableCell>\n                            <TableCell align=\"left\">{row.contact}</TableCell>\n                             { /* If the status of the reports is Unfound/Unclaimed */}\n                            {\n\n                              row.status === 'Unfound/Unclaimed'\n                              ? <TableCell align=\"left\" style={{ color: 'red' }}>{row.status}</TableCell>\n                              : \n                              // Else if the status is Found, Not Claimed, the status text color will turn to blue \n                                <Fragment>\n                                {\n                                  row.status === 'Found, Not Claimed'\n                                  ?\n                                <TableCell align=\"left\" style={{ color: 'blue'}}>{row.status}</TableCell>\n                                    // else it will be color green \n                                  :\n                                <TableCell align=\"left\" style={{ color: 'green'}}>{row.status}</TableCell>\n\n                                }\n                                \n                                </Fragment>         \n                              \n                            }\n                            <TableCell align=\"left\">{moment(row.created_at).format('YYYY-MM-DD')}</TableCell>\n                            <TableCell align=\"left\">\n\n                           { /*These buttons will be the actions for declaring the report claimed or found */}\n                            {\n                              // if the status is Unfound/Unclaimed the button actions will both appear\n                              row.status === 'Unfound/Unclaimed'\n                              ?\n                              <Fragment>\n                            <Button onClick={ _ => setAsFound(row.id)} variant=\"contained\" color=\"primary\">Set as found</Button>\n                            |\n                            <ClaimedButton onClick={ _ => setAsClaimed(row.id)} variant=\"contained\" color=\"primary\">\n                            Set as claimed\n                            </ClaimedButton>\n                            </Fragment>\n                              :\n                              <Fragment>\n                                {\n                                  // else if the status Found not claimed, the action for Found will dissappear and in the button for Claimed action will appear \n                                  row.status === 'Found, Not Claimed'\n                                  ?\n                                   <ClaimedButton onClick={ _ => setAsClaimed(row.id)} variant=\"contained\" color=\"primary\">\n                                   Set as claimed\n                                   </ClaimedButton>\n                                   // Else , both buttons will be dissappear and the action will mark as Report Closed  \n                                  :\n                                    <Fragment>\n                                      Report Closed\n                                   </Fragment>\n                                }\n                              </Fragment>\n                            }\n                          \n                \n\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      }\n                      </Fragment>\n                  }\n                </Fragment> \n              }\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          \n                    {/* Pagination Actions  */}\n                    <TableFooter>\n                      <TableRow>\n                        <TablePagination\n                          rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                          colSpan={3}\n                          count={rows.length}\n                          rowsPerPage={rowsPerPage}\n                          page={page}\n                          SelectProps={{\n                            inputProps: { 'aria-label': 'rows per page' },\n                            native: true,\n                          }}\n                          onChangePage={handleChangePage}\n                          onChangeRowsPerPage={handleChangeRowsPerPage}\n                          ActionsComponent={TablePaginationActions}\n                        />\n                      </TableRow>\n                    </TableFooter>\n                  </Table>\n                </div>\n                \n                  </Paper>\n              </Fragment>\n      );\n  }\n\n  LostAndFoundTable2.propTypes = {\n      history: PropTypes.object.isRequired,\n    };\n\n  \nconst mapStateToProps = state => ({\n    auth: state.auth,\n  });\n\nconst mapDispatchToProps = { setReportToFound, setReportToClaimed };\n\n\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LostAndFoundTable2)));\n  ","import React, { Fragment, useState, useEffect } from 'react';\nimport { withRouter } from \"react-router\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { setReportToFound, setReportToClaimed } from '../../actions/lafActions';\n\nimport axios from 'axios';\nimport moment from 'moment';\n\nimport { withStyles, makeStyles, useTheme,} from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FindReplaceIcon from '@material-ui/icons/FindReplace';\n\n//Other Components\nimport FoundSuccessMsg from './FoundSuccessMsg';\nimport ClaimedSuccessMsg from './ClaimedSuccessMsg';\n\n// Dashboard Component  \nimport DashBoardHead from '../layouts/DashboardHead';\n\n// Table 2 component \nimport LostAndFoundTable2 from './LostAndFoundTable2';\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: 'rgb(138, 28, 28)',\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\n//Colored button for The Claimed Action\nconst ClaimedButton = withStyles((theme) => ({\n  root: {\n    // color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n}))(Button);\n\n// Table Functions for table pagination \n// Table one \nfunction TablePaginationActions(props) {\n    const classes = useStyles1();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n  \n    const handleFirstPageButtonClick = event => {\n      onChangePage(event, 0);\n    };\n  \n    const handleBackButtonClick = event => {\n      onChangePage(event, page - 1);\n    };\n  \n    const handleNextButtonClick = event => {\n      onChangePage(event, page + 1);\n    };\n  \n    const handleLastPageButtonClick = event => {\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n    // Table Pagination Component \n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"first page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"next page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"last page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n  \n  TablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n  };\n\n// Style of the main Component \nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 500,\n    },\n    tableWrapper: {\n      overflowX: 'auto',\n    },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n});\n\n// Main component \nfunction LostAndFound(props) {\n    const classes = props;\n    // Table pagination Actions states\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const [reports, getReports] = useState([]);\n   // Loading for fetching datas \n  const [loading, setLoading] = useState(true);\n\n  // State for the confirmation message component\n  const [found, setFound] = useState(false);\n  const [claimed, setClaimed] = useState(false);\n\n  //statements for the action to be submitted as data for found and claimed actions\n  const [foundData, ] = useState('Found, Not Claimed');\n  const [claimedData, ] = useState('Found and Claimed');\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  //Action for Claimed and Found\n    // The function button for setting the data into found \n  const setAsFound = id => {\n      \n      if(window.confirm(\"Are you sure this report item is now found?\") ){\n         const updateStatusFound = {\n            status: foundData\n          };\n\n          props.setReportToFound(id, updateStatusFound);\n          setFound(true);\n      }\n \n    };\n\n    // The function button for setting the data into found \n  const setAsClaimed = id => {\n    if(window.confirm(\"Are you sure this report item is now claimed?\")){\n        const updateStatusClaimed = {\n          status: claimedData\n        };\n\n        props.setReportToClaimed(id, updateStatusClaimed);\n        setClaimed(true);\n      }\n        };\n\n    //Success handlin message \n  const handlingCloseAction = (event, reason) => {\n    if(reason === 'clickaway'){\n        return\n    }\n    setFound(false);\n  };\n\n    //Success handlin message \n  const handlingCloseAction1 = (event, reason) => {\n    if(reason === 'clickaway'){\n        return\n    }\n    setClaimed(false);\n  };\n  \n// Fuction expression for getting all the reports in the database \n  const fetchReports = async _ => {\n    const res = await axios.get('/api/lost/getreportlostitem');\n      getReports(res.data);\n      setLoading(false);\n  };\n   \n  useEffect( _ => {\n   // an Interval that fetches the reports and renders every 2secs. \n// It will update the component whether if theres changes or not \n    const id = setInterval(_ => {\n      fetchReports();\n    }, 2000);\n\n    return _ => {\n      clearInterval(id);\n    }\n\n  },[]);\n\n  //Date Methods Filtering\n  let today = new Date();\n    const dd = String(today.getDate()).padStart(2, '0');\n    const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    const yyyy = today.getFullYear();\n\n  today = yyyy + '-' + mm + '-' + dd;\n  //This variable is used to f\n  const dateFilter = moment(today).format('YYYY-MM-DD');\n\n  // This is the props for getting the details of the user \n  const auth = props.auth;\n\n  //Array of the reports in the lost item reports \n  //The array is now sorted that it only accepts data that is reported today and if the the campus of the user is equal to the campus or the report.\n  const rows = reports.sort((a, b) => (a.created_at > b.created_at ? -1 : 1)).filter(row => \n    ( moment(row.created_at).format('YYYY-MM-DD') === dateFilter && auth.user.campus === row.campus)\n  );\n\n   //Empty row that says the rows for pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n    <DashBoardHead>\n\n    {/* Confirmation messages */}\n    <FoundSuccessMsg open={found} onClose={handlingCloseAction}/>\n    <ClaimedSuccessMsg open={claimed} onClose={handlingCloseAction1}/>\n\n    <Breadcrumbs aria-label=\"breadcrumb\">\n        <Link color=\"inherit\" href=\"/h/lostandfound\" className={classes.link}>\n          <HomeIcon className={classes.icon} />\n          Menu\n        </Link>\n\n        <Link\n          color=\"textPrimary\"\n          href=\"/h/lostandfound/lostreports\"\n          aria-current=\"page\"\n        >\n        <FindReplaceIcon className={classes.icon}/>\n          Lost Reports\n        </Link>\n    </Breadcrumbs>\n\n          <Typography variant=\"h4\" gutterBottom>\n            Reports today\n          </Typography>\n          \n      <Paper className={classes.root}>\n\n                {/* Table for the today reports will be here */}\n           <div className={classes.tableWrapper}>\n              <Table className={classes.table} aria-label=\"custom pagination table\">\n\n                <TableHead>\n                  <TableRow>\n                    <StyledTableCell>Student name</StyledTableCell>\n                    <StyledTableCell align=\"left\">SR-Code</StyledTableCell>\n                    <StyledTableCell align=\"left\">College Year</StyledTableCell>\n                    <StyledTableCell align=\"left\">Campus</StyledTableCell>\n                    <StyledTableCell align=\"left\">Department</StyledTableCell>\n                    <StyledTableCell align=\"left\">Student course</StyledTableCell>\n                    <StyledTableCell align=\"left\">Lost Item Details</StyledTableCell>\n                    <StyledTableCell align=\"left\">Contact Details</StyledTableCell>\n                    <StyledTableCell align=\"left\">Report Status</StyledTableCell>\n                    <StyledTableCell align=\"left\">Date Reported</StyledTableCell>\n                    <StyledTableCell align=\"left\">Actions</StyledTableCell>\n                  </TableRow>\n                </TableHead>\n\n               {/* Body for displaying the reports */}\n            <TableBody>\n              { loading \n                ? \n                //  If the loading state is still true, this preloader will be displayed\n                  <TableRow>\n                  <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                    <CircularProgress color=\"secondary\" /><br/>\n                    <span>Loading ...</span>\n                  </TableCell>\n                </TableRow>\n                :    \n                // Else if the rows variable with the array of reports have the no data\n                // This component will be displayed\n                <Fragment>\n                  {\n                  rows.length === 0\n                    ?\n                    <TableRow>\n                    <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                        <span>No Report for today ? Refresh the page after 5 mins to see what's up</span>\n                    </TableCell>\n                  </TableRow>\n                    :\n                //Then if the rows variable has a data, the date will be presented in the table\n                <Fragment>\n                {\n                  (rowsPerPage > 0\n                    ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    : rows\n                  )\n                  .map((row, id) => (\n                    // The row where all the datas will be displayed \n                  <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                  </TableCell>\n                  <TableCell align=\"left\">{row.src}</TableCell>\n                  <TableCell align=\"left\">{row.yr}</TableCell>\n                  <TableCell align=\"left\">{row.campus}</TableCell>\n                  <TableCell align=\"left\">{row.department}</TableCell>\n                  <TableCell align=\"left\">{row.course}</TableCell>\n                  <TableCell align=\"left\">{row.details}</TableCell>\n                  <TableCell align=\"left\">{row.contact}</TableCell>\n                  {\n                    row.status === 'Unfound/Unclaimed'\n                    ? <TableCell align=\"left\" style={{ color: 'red' }}>{row.status}</TableCell>\n                    : \n                      <Fragment>\n                        {\n                          row.status === 'Found, Not Claimed'\n                          ?\n                          <TableCell align=\"left\" style={{ color: 'blue'}}>{row.status}</TableCell>\n                          :\n                           <TableCell align=\"left\" style={{ color: 'green'}}>{row.status}</TableCell>\n                        }\n                      </Fragment>\n                   \n                  }\n                  <TableCell align=\"left\">{moment(row.created_at).format('YYYY-MM-DD')}</TableCell>\n                  <TableCell align=\"left\">\n                   \n                      { /*These buttons will be the actions for declaring the report claimed or found */}\n                      {\n                        row.status === 'Unfound/Unclaimed'\n                        ?\n                        <Fragment>\n                         <Button onClick={ _ => setAsFound(row.id)} variant=\"contained\" color=\"primary\">Set as found</Button>\n                            |\n                          <ClaimedButton onClick={ _ => setAsClaimed(row.id)} variant=\"contained\" color=\"primary\">\n                          Set as claimed\n                          </ClaimedButton>\n                        </Fragment>\n                        :\n                        <Fragment>\n                        {\n                          row.status === 'Found, Not Claimed'\n                            ?\n                           <ClaimedButton onClick={ _ => setAsClaimed(row.id)} variant=\"contained\" color=\"primary\">\n                            Set as claimed\n                            </ClaimedButton>\n                          :\n                           <Fragment>\n                               Report Closed\n                            </Fragment>\n                        }\n                        </Fragment>\n                      }\n                     \n                    </TableCell>\n                  </TableRow>\n                  ))\n                 }\n                </Fragment>\n                }\n                </Fragment>\n  \n              }\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n\n                {/* Pagination Actions  */}\n                <TableFooter>\n                  <TableRow>\n                    <TablePagination\n                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                      colSpan={3}\n                      count={rows.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      SelectProps={{\n                        inputProps: { 'aria-label': 'rows per page' },\n                        native: true,\n                      }}\n                      onChangePage={handleChangePage}\n                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                      ActionsComponent={TablePaginationActions}\n                    />\n                  </TableRow>\n                </TableFooter>\n              </Table>\n\n            </div>\n        </Paper>\n                <br/>\n\n                <Typography variant=\"h4\" gutterBottom>\n                  All Reports\n                </Typography>\n\n                <LostAndFoundTable2 />\n\n            </DashBoardHead>\n    )\n};\n\n LostAndFound.propTypes = {\n      history: PropTypes.object.isRequired,\n    };\nconst mapStateToProps = state => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = { setReportToFound, setReportToClaimed };\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LostAndFound)));\n","import axios from 'axios';\n\nimport {\n\tGET_ORGDESC,\n\tADD_ORGDESC,\n\tUPDATE_ORGDESC,\n\tDELETE_ORGDESC,\n\tRECORD_LOADING,\n\tGET_ERRORS,\n} from './types';\n\n\n// Function for getting all the record off all organization \nexport const getOrgDesc = _ => dispatch => {\n\tdispatch(setRecordLoading);\n\taxios.get('/api/orgdesc/getorgdesc')\n\t.then(res => dispatch({\n\t\ttype: GET_ORGDESC,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => console.log(err));\n};\n\n// Function for adding data of organization in the data table \nexport const addOrgDesc = orgdesc => dispatch => {\n\taxios.post('/api/orgdesc/addorganization', orgdesc)\n\t.then(res => \n\t\tdispatch({\n\t\t\ttype: ADD_ORGDESC,\n\t\t\tpayload: res.data\n\t\t}))\n\t.catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n    }));   \n};\n\n// Function for update an organization record\nexport const updateOrgDesc = (id, orgdesc) => dispatch => {\n\taxios.post(`/api/orgdesc/updateorganization/${id}`, orgdesc)\n\t.then(res => dispatch({\n\t\ttype: UPDATE_ORGDESC,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\n};\n\n// Function for deleting a specific data in the data table\nexport const deleteOrgDesc = id => dispatch => {\n\taxios.delete(`/api/orgdesc/deleteorganization/${id}`)\n\t.then( res => dispatch({\n\t\ttype: DELETE_ORGDESC,\n\t\tpayload: res.data\n\t}))\t\n\t.catch(err => console.log(err));\n};\n\nexport const setRecordLoading = _ => {\n\treturn { type: RECORD_LOADING }\n};","import React, {useState, useEffect, Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport { getOrgDesc } from '../../actions/orgDescActions';\nimport axios from 'axios';\n\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nimport DashBoardHead from '../layouts/DashboardHead';\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n    // root: {\n    //     // ...theme.mixins.gutters(),\n    //     paddingTop: theme.spacing(2),\n    //     paddingBottom: theme.spacing(2),\n    // },\n     root2: {\n    width: '100%',\n    paddingBottom: '2 0px',\n      flexGrow: 1,\n  },\n    reportButton: {\n    paddingTop:15,\n  },\n   formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nfunction OrgList(props){\n    const classes = useStyles();\n\n    //States\n          // Pagination Controls State\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);  \n\n      //Campus fetching states\n  const [campuses, getCampuses] = useState([]);\n  const [loadingCampuses, setLoadingCampuses] = useState(true);  \n\n  // Search State \n    const [searchDept, setSearchDept] = useState('');\n\n    // Event Handlers \n      //Getting the pages, Material UI Funcs\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n    //Component Effect\n    useEffect(_ => {\n        props.getOrgDesc();\n    },[]);\n\n    const { user } = props.auth;\n\n      //Amd filters it by chosen campus\n  const rows = props.orgDesc.records.sort((a, b) => (a.created_at > b.created_at ? -1 : 1))\n    .filter(row => row.campus === user.campus)\n\n  //Empty row that says the rows for pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    // console.log(props);\n        return (\n            <div>\n                <DashBoardHead>\n          {/* Form Filters */} \n\n          <Typography variant=\"h4\">Organization list of the campus</Typography>\n          <br />\n                    <Paper className={classes.root2}>\n\n                    <Grid container spacing={3}>\n                      \n                        <Grid item sm={12}>\n                            <TextField\n                                id=\"searchDept\"\n                                name=\"searchDept\"\n                                label=\"Search by department\"\n                                fullWidth\n                                className=\"classes.formControl\"\n                                value={searchDept}\n                                autoComplete=\"searchDept\"\n                                onChange={e => setSearchDept(e.target.value)}\n                             />\n                        </Grid>\n                    </Grid>\n                        \n                    </Paper>\n\n                    <br /> \n\n                     <Paper>\n                            <div className={classes.tableWrapper}>\n\n                            <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Campus</StyledTableCell>\n                                <StyledTableCell align=\"left\">Department</StyledTableCell>\n                                <StyledTableCell align=\"left\">Organization Name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Org President Name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Org Adviser Name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Members Count</StyledTableCell>\n                                <StyledTableCell align=\"left\">Officers Count</StyledTableCell>\n                                <StyledTableCell align=\"left\">Organization Description</StyledTableCell>\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { props.orgDesc.loading \n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :   \n                                    //Data to be displayed when the data is fetched\n                                    <Fragment>\n                                    {\n                                       rows.length === 0 ?\n                                       <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                       <ArrowUpwardIcon /><br></br>\n                                       Pls search at the top to filter by campus...\n                                     </TableCell>\n                                      :\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      //Filter the row by what will be typed in the search filter for department then map the result\n                                      .filter(row => row.department.toLowerCase().search(searchDept.toLowerCase()) !== -1)\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.campus}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{row.department}</TableCell>\n                                          <TableCell align=\"left\">{row.orgname}</TableCell>\n                                          <TableCell align=\"left\">{row.orgpresname}</TableCell>\n                                          <TableCell align=\"left\">{row.orgadvisername}</TableCell>\n                                          <TableCell align=\"left\">{row.quantitymembers}</TableCell>\n                                          <TableCell align=\"left\">{row.quantityofficers}</TableCell>\n                                          <TableCell align=\"left\">{row.description}</TableCell>\n                                        </TableRow>\n                                      ))\n                                    }\n                                    </Fragment>\n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n                        </div> \n                     </Paper>\n\n                </DashBoardHead>\n            </div>\n        )\n}\n\nconst mapStateToProps = state => ({\n     orgDesc: state.orgDesc,\n     auth: state.auth\n});\n\nconst mapDisPatchToProps = { getOrgDesc };\n\nexport default connect(mapStateToProps, mapDisPatchToProps)(OrgList);\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { getActivitiesHead, setApprovedHead, setDeclinedHead } from '../../actions/requestActivitiesActions';\n\nimport { withStyles, makeStyles, useTheme, } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport DashBoardHead from '../layouts/DashboardHead';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField'\n\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Button from '@material-ui/core/Button';\n\nimport Slide from '@material-ui/core/Slide';\n\n//Confirmation Message\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\nconst Transition = props => {\n    return <Slide direction=\"up\" {...props} />\n}\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        // ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2 ),\n        paddingBottom: theme.spacing(2),\n    },\n     root2: {\n    width: '100%',\n    paddingBottom: '2 0px',\n      flexGrow: 1,\n  },\n    link: {\n    display: 'flex',\n      },\n       icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n      },\n    reportButton: {\n    paddingTop:15,\n    },\n       formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nfunction RequestedActivities(props){\n    const classes = useStyles();\n\n    //States\n\n      // Pagination Controls \n      const [page, setPage] = useState(0);\n      const [rowsPerPage, setRowsPerPage] = useState(5);\n\n      // Dummy State \n      const [reports,] = useState([]);\n      const [loading, setLoading] = useState(true);\n\n      const [id, setId] = useState();\n      const [username, setUsername] = useState('');\n      const [orgname, setOrgName] = useState('');\n      // This state will have the value of the title of the request activity\n      const [notification, setNotification] = useState('');\n\n      // if the clicked event handler is Decline \n      const [reason, setReason] = useState('');\n\n      // Data for the status of the request_activity \n      const [approved,] = useState('Approved1');\n      const [declined,] = useState('Declined1');\n\n      // Modal open for Approved \n      const [approvedModal, openApprovedModal] = useState(false);\n      const [declinedModal, openDeclinedModal] = useState(false);\n\n      const [openApproved, setOpenApproved] = useState(false);\n      const [openDeclined, setOpenDeclined] = useState(false);\n\n    //Event Handlers\n\n     //Getting the pages, Material UI Funcs\n          const handleChangePage = (event, newPage) => {\n            setPage(newPage);\n          };\n\n          const handleChangeRowsPerPage = event => {\n            setRowsPerPage(parseInt(event.target.value, 10));\n            setPage(0);\n          };\n\n      const handleApprovedModalClose = _ =>  {\n          openApprovedModal(false);\n      }\n\n      const handleDeclinedModalClose = _ => {\n          openDeclinedModal(false);\n      }\n\n        const handleCloseApproved = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setOpenApproved(false);\n          };\n\n      const handleCloseDeclined = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setOpenDeclined(false);\n      };\n\n\n\n      const handleApproved = (id, username, orgname, notif) => {\n          setId(id);\n          setUsername(username);\n          setOrgName(orgname);\n          setNotification(notif);\n\n          openApprovedModal(true);\n      };\n\n      const handleDeclined = (id, username, orgname, notif) => {\n          setId(id);\n          setUsername(username);\n          setOrgName(orgname);\n          setNotification(notif);\n\n          openDeclinedModal(true);\n      }\n\n      const handleReason = e => {\n        setReason(e.target.value);\n      }\n\n      const approvedFinal = _ => {\n        const approvedBody = {\n          status: approved\n        };\n\n        const notifBody = {\n          username,\n          orgname,\n          notification,\n        }\n        props.setApprovedHead(id,approvedBody, notifBody);\n        openApprovedModal(false);\n        // console.log(id, approvedBody, notifBody);\n\n      }\n\n      const declinedFinal = _ => {\n        const declinedBody = {\n          status: declined\n        }\n\n        const notifBody = {\n          username,\n          orgname,\n          notification,\n          reason,\n        }\n\n        props.setDeclinedHead(id, declinedBody, notifBody);\n        openDeclinedModal(false);\n        // console.log(id, declinedBody, notifBody);\n      }\n\n    // Component Effect\n    useEffect(_ => {\n\n      const id = setInterval(_ => {\n          props.getActivitiesHead();\n          setLoading(false);\n      },800);\n      \n      return _ => {\n        clearInterval(id);\n      }\n\n    },[])\n\n    // Effect is the request activity is now approved by the soa head\n    useEffect(_ => {\n        if (props.requestActivities.approvedByHead) {\n             setOpenApproved(true)\n        }\n    },[props.requestActivities.approvedByHead]);\n\n    // Effect if the request activity is declined\n    useEffect(_ => {\n        if (props.requestActivities.declinedByHead) {\n            setOpenDeclined(true)\n        }\n    },[props.requestActivities.declinedByHead]);\n\n    // Props\n    const { auth } = props;\n\n    const rows = props.requestActivities.request.sort((a, b) => a.created_at > b.created_at ? -1 : 1)\n                    .filter(row => row.campus === auth.user.campus && row.status === 'Approved0');\n\n    //Empty row that says the rows for pagination\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n        return (\n            <div>\n                <DashBoardHead>\n                   {/* Component for Approved Confirmation message  */}\n                <FormConfirmationMsg open={openApproved} onClose={handleCloseApproved} variant=\"success\" message=\"Request Activity Approved\" />\n                  \n                   {/* Component for Declined Confirmation Message  */}\n                <FormConfirmationMsg open={openDeclined} onClose={handleCloseDeclined} variant=\"info\" message=\"Request Activity Declined\" />\n\n\n                   {/* Modal for approve and declined action  */}\n\n                   {/* For Approved Modal */}\n\n                   <Dialog\n                   open={approvedModal}\n                   TransitionComponent={Transition}\n                   keepMounted\n                   onClose={handleApprovedModalClose}\n                   aria-labelledby=\"alert-dialog-slide-title\"\n                   aria-describedby=\"alert-dialog-slide-description\"\n                   >\n                       <DialogTitle id=\"alert-dialog-slide-title\">\n                           {\"Approved Request Activity\"}\n                        </DialogTitle>\n\n                        <DialogContent>\n\n                          <DialogContentText id=\"alert-dialog-slide-description\">\n                              Are you sure to approve this requested activity?\n                              </DialogContentText>\n                          </DialogContent>  \n\n                          <DialogActions>\n                            <Button onClick={approvedFinal} variant=\"outlined\" color=\"primary\">\n                              Yes\n                            </Button>\n                            <Button onClick={handleApprovedModalClose} variant=\"outlined\" color=\"secondary\">\n                              No\n                            </Button>\n                          </DialogActions>\n                   </Dialog>\n\n                   {/* For Approved Modal */}\n\n                    <Dialog\n                       open={declinedModal}\n                       TransitionComponent={Transition}\n                       keepMounted\n                       onClose={handleDeclinedModalClose}\n                       aria-labelledby=\"alert-dialog-slide-title\"\n                       aria-describedby=\"alert-dialog-slide-description\"\n                       >\n                           <DialogTitle id=\"alert-dialog-slide-title\">\n                               {\"Decline Request Activity\"}\n                            </DialogTitle>\n\n                            <DialogContent>\n\n                              <DialogContentText id=\"alert-dialog-slide-description\">\n                                  Tell the reason why it is declined before sending bakc to org.\n                                  </DialogContentText>\n\n                                  <TextField\n                                    onChange={handleReason}\n                                    autoFocus\n                                    margin=\"dense\"\n                                    id=\"reason\"\n                                    label=\"Reason\"\n                                    type=\"text\"\n                                    fullWidth\n                                  />\n                              </DialogContent>  \n\n                              <DialogActions>\n                                <Button onClick={declinedFinal} variant=\"outlined\" color=\"primary\">\n                                  send\n                                </Button>\n                                <Button onClick={handleDeclinedModalClose} variant=\"outlined\" color=\"secondary\">\n                                  cancel\n                                </Button>\n                              </DialogActions>\n                       </Dialog>\n\n                    <Typography variant=\"h6\">\n                        Request Activity List\n                    </Typography>\n\n                     <Paper className={classes.root}>                        \n                        <div className={classes.tableWrapper}>\n\n                         <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Organization Name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Organization Campus</StyledTableCell>\n                                <StyledTableCell align=\"left\">Activity Title</StyledTableCell>\n                                <StyledTableCell align=\"left\">Description</StyledTableCell>\n                                <StyledTableCell align=\"left\">File</StyledTableCell>\n                                <StyledTableCell align=\"left\">Action</StyledTableCell>\n\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { loading \n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :   \n                                    <Fragment>\n                                    {\n                                        rows.length === 0\n                                        ?\n                                    <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                       <br></br>\n                                       No Request activity for today.\n                                     </TableCell>\n                                        :\n                                        //Data to be displayed when the data is fetched\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.orgname}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{row.campus}</TableCell>\n                                          <TableCell align=\"left\">{row.activity_title}</TableCell>\n                                          <TableCell align=\"left\">{row.description}</TableCell>\n                                          <TableCell align=\"left\">\n                                            <a href={row.file} target=\"_blank\">\n                                              <GetAppIcon />\n                                            </a>\n                                            {row.fileName}\n                                          </TableCell>\n                                          <TableCell align=\"left\">\n                                              <Button variant=\"contained\" \n                                              color=\"primary\" \n                                              onClick={_ => handleApproved(row.id, row.username, row.orgname, row.activity_title)}>\n                                                Accept\n                                              </Button>\n                                              <br />\n                                              |\n                                              <Button \n                                              onClick={_ => handleDeclined(row.id, row.username, row.orgname, row.activity_title)}\n                                              variant=\"contained\" \n                                              color=\"secondary\">\n                                                Decline\n                                              </Button>\n                                          </TableCell>\n                                        </TableRow>\n                                      ))\n                                    }\n                                    \n                                    </Fragment>\n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n\n                        </div>\n                     </Paper>\n\n                </DashBoardHead>\n            </div>\n        )\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    requestActivities: state.requestActivities\n});\n\nconst mapDispatchToProps = { getActivitiesHead, setApprovedHead, setDeclinedHead };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestedActivities);","import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { setAsApproved, setAsApprovedFalse, setAsDeclined, setAsDeclinedFalse,\n        setAgainToPending, setAgainToPendingFalse } from '../../actions/assessmentActions';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport UndoIcon from '@material-ui/icons/Undo';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button';\n\nimport Slide from '@material-ui/core/Slide';\n\nimport DashBoardHead from '../layouts/DashboardHead';\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\nconst Transition = props => {\n    return <Slide direction=\"up\" {...props} />\n}\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    timeFeed: {\n      float: 'right',\n      fontSize: 13\n    },\n    tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nfunction ActivityAssessment(props){\n    const classes = useStyles();\n\n    // Pagination Controls addAnnouncementFalseHead\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    const [activities, getActivities] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [ifError, setIfError] = useState(false);\n\n    //Bodies\n    const [id, setId] = useState(null);\n    const [username, setUserName] = useState('');\n    const [orgname, setOrgName] = useState('');\n    const [notification, setNotif] = useState('');\n    const [reason, setReason] = useState('');\n\n    const [approvedModal, openApprovedModal] = useState(false);\n    const [declinedModal, openDeclinedModal] = useState(false);\n    const [pendingModal, openPendingModal] = useState(false);\n\n    //Confimation States\n    const [approve, setApprove] = useState(false);\n    const [declined, setDeclined] = useState(false);\n    const [pending, setPending] = useState(false);\n\n        //Event Handlers\n    const handleChangePage = (event, newPage) => {\n           setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n         setRowsPerPage(parseInt(event.target.value, 10));\n         setPage(0);\n     };\n\n     //Modal Events\n     const handleApproved = (id, username, orgname, notif ) => {\n         setId(id);\n         setUserName(username);\n         setOrgName(orgname);\n         setNotif(notif);\n\n         openApprovedModal(true);\n     };\n    const handleApprovedModalClose = _ =>  {\n          openApprovedModal(false);\n    }\n    const handleDeclined = (id, username, orgname, notif) => {\n        setId(id);\n        setUserName(username);\n        setOrgName(orgname);\n        setNotif(notif);\n\n        openDeclinedModal(true);\n    }\n    const handleDeclinedModalClose = _ => {\n        openDeclinedModal(false);\n    }\n    const handlePending = (id, username, orgname, notif) => {\n        setId(id);\n        setUserName(username);\n        setOrgName(orgname);\n        setNotif(notif);\n\n        openPendingModal(true);\n    }\n    const handlePendingModalClose = _ => {\n        openPendingModal(false);\n    }\n\n    // Event for closing approved confimation msg\n    const handleCloseApproved = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setApprove(false);\n                props.setAsApprovedFalse();\n          };\n    const handleClosedDeclined = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setDeclined(false);\n                props.setAsDeclinedFalse();\n          };\n    const handleClosedPending = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setPending(false);\n                props.setAgainToPendingFalse();\n          };\n\n    //Final Confirmation Event\n    const approvedFinal = _ => {\n        const approvedBody = {\n            status: 'approved'\n        }\n\n        const notifBody = {\n            username,\n            orgname,\n            notification: `Your activity ${notification} has been approved. You may now check the students who will join the activity`\n        }\n\n        // console.log(id, approvedBody, notifBody);\n        props.setAsApproved(id, approvedBody, notifBody);\n        openApprovedModal(false);\n    }\n    const declinedFinal = _ => {\n        const declinedBody = {\n          status: 'declined'\n        }\n\n        const notifBody = {\n          username,\n          orgname,\n          notification: `Your activity ${notification} has been declined.`,\n          reason,\n        }\n\n        // props.setDeclinedHead(id, declinedBody, notifBody);\n        openDeclinedModal(false);\n        // console.log(id, declinedBody, notifBody);\n        props.setAsDeclined(id, declinedBody, notifBody);\n      }\n    const pendingFinal = _ => {\n         const pendingBody = {\n          status: 'pending'\n        }\n\n        const notifBody = {\n          username,\n          orgname,\n          notification: `Your activity ${notification} has been undo it's status.`,\n        }\n\n        openPendingModal(false);\n        // console.log(id, pendingBody, notifBody);\n        props.setAgainToPending(id, pendingBody, notifBody);\n    }\n\n       // Component Effects \n     useEffect(_ => {\n        axios.get('/api/assessments/')\n        .then(res => {\n            getActivities(res.data);\n            setLoading(false);\n        })\n        .catch(err => {\n            if(err){\n                setLoading(false);\n                setIfError(true);\n\n            }\n        })\n     },[props.assessment.approved, props.assessment.declined, props.assessment.pendingAgain]);\n\n     //Effects in Confirmations\n     useEffect(_ => {\n        if(props.assessment.approved)\n            setApprove(true)\n\n      setTimeout(function(){ props.setAsApprovedFalse() }, 6000);\n     },[props.assessment.approved]);\n\n      useEffect(_ => {\n        if(props.assessment.declined)\n            setDeclined(true)\n\n      setTimeout(function(){ props.setAsApprovedFalse() }, 6000);\n     },[props.assessment.declined]);\n\n    useEffect(_ => {\n        if(props.assessment.pendingAgain)\n            setPending(true)\n\n        setTimeout(function(){ props.setAgainToPendingFalse() }, 6000);\n    },[props.assessment.pendingAgain])\n\n    const { user } = props.auth;\n\n    const rows = activities.sort((a, b) => a.date > b.date ? -1 : 1)\n                .filter(row => row.campus === user.campus);\n\n    //Empty row that says the rows for paginationaddAnnouncementFalseHead\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    // console.log(rows);\n\n        return (\n            <div>\n                <DashBoardHead>\n\n                <FormConfirmationMsg open={approve} onClose={handleCloseApproved} variant=\"success\" message=\"Activity Accepted.\"  />\n                <FormConfirmationMsg open={declined} onClose={handleClosedDeclined} variant=\"success\" message=\"Activity Declined.\"  />\n                <FormConfirmationMsg open={pending} onClose={handleClosedPending} variant=\"info\" message=\"Activity Undo.\"  />\n\n\n                {/* For Approved Modal */}\n\n                   <Dialog\n                   open={approvedModal}\n                   TransitionComponent={Transition}\n                   keepMounted\n                   onClose={handleApprovedModalClose}\n                   aria-labelledby=\"alert-dialog-slide-title\"\n                   aria-describedby=\"alert-dialog-slide-description\"\n                   >\n                       <DialogTitle id=\"alert-dialog-slide-title\">\n                           {\"Approved Activity Assessment\"}\n                        </DialogTitle>\n\n                        <DialogContent>\n\n                          <DialogContentText id=\"alert-dialog-slide-description\">\n                              Are you sure to approve this activity assessment?\n                              </DialogContentText>\n                          </DialogContent>  \n\n                          <DialogActions>\n                            <Button onClick={approvedFinal} variant=\"outlined\" color=\"primary\">\n                              Yes\n                            </Button>\n                            <Button onClick={handleApprovedModalClose} variant=\"outlined\" color=\"secondary\">\n                              No\n                            </Button>\n                          </DialogActions>\n                   </Dialog>\n\n                    {/* For Declined Modal */}\n                      <Dialog\n                       open={declinedModal}\n                       TransitionComponent={Transition}\n                       keepMounted\n                       onClose={handleDeclinedModalClose}\n                       aria-labelledby=\"alert-dialog-slide-title\"\n                       aria-describedby=\"alert-dialog-slide-description\"\n                       >\n                           <DialogTitle id=\"alert-dialog-slide-title\">\n                               {\"Declined Activity\"}\n                            </DialogTitle>\n\n                            <DialogContent>\n\n                              <DialogContentText id=\"alert-dialog-slide-description\">\n                                  Are you sure to decline this activity assessment? Tell the reason why?\n                                  </DialogContentText>\n                                    <TextField\n                                    onChange={e => setReason(e.target.value)}\n                                    autoFocus\n                                    margin=\"dense\"\n                                    id=\"reason\"\n                                    label=\"Reason\"\n                                    type=\"text\"\n                                    fullWidth\n                                  />\n                              </DialogContent>  \n\n                              <DialogActions>\n                                <Button onClick={declinedFinal} variant=\"outlined\" color=\"primary\">\n                                  Yes\n                                </Button>\n                                <Button onClick={handleDeclinedModalClose} variant=\"outlined\" color=\"secondary\">\n                                  No\n                                </Button>\n                              </DialogActions>\n                       </Dialog>\n\n                    {/* For Pending Modal */}\n                      <Dialog\n                           open={pendingModal}\n                           TransitionComponent={Transition}\n                           keepMounted\n                           onClose={handlePendingModalClose}\n                           aria-labelledby=\"alert-dialog-slide-title\"\n                           aria-describedby=\"alert-dialog-slide-description\"\n                           >\n                               <DialogTitle id=\"alert-dialog-slide-title\">\n                                   {\"Undo Activity Assessment\"}\n                                </DialogTitle>\n\n                                <DialogContent>\n\n                                  <DialogContentText id=\"alert-dialog-slide-description\">\n                                      Your about to undo a activity assessment by an organization.\n                                      Are you sure about this?\n                                      </DialogContentText>\n                                  </DialogContent>  \n\n                                  <DialogActions>\n                                    <Button onClick={pendingFinal} variant=\"outlined\" color=\"primary\">\n                                      Yes\n                                    </Button>\n                                    <Button onClick={handlePendingModalClose} variant=\"outlined\" color=\"secondary\">\n                                      No\n                                    </Button>\n                                  </DialogActions>\n                           </Dialog>\n\n                     <Paper className={classes.root}>\n                            \n                        <div className={classes.tableWrapper}>\n\n                            <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Activity Title</StyledTableCell>\n                                <StyledTableCell align=\"left\">By</StyledTableCell>\n                                <StyledTableCell align=\"left\">Date of Activity</StyledTableCell>\n                                \n                                <StyledTableCell align=\"left\">Requirements needed</StyledTableCell>\n                                <StyledTableCell align=\"left\">Description of the Activity</StyledTableCell>\n                                <StyledTableCell align=\"left\">Action</StyledTableCell>\n\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { loading \n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :  \n                                    <Fragment>\n                                     {\n                                      ifError\n                                      ?\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <span>Something went wrong. Please try again.</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :\n                                    //Data to be displayed when the data is fetched\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.activity}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{row.createdBy}</TableCell>\n                                          <TableCell align=\"left\">{moment(row.dateDate).format('MMMM D YYYY')}</TableCell>\n                                          <TableCell align=\"left\">{row.activityRequirements}</TableCell>\n                                          <TableCell align=\"left\">{row.description}</TableCell>\n                                          <TableCell align=\"left\">\n                                          {\n                                            row.status === 'pending'\n                                            ?\n                                            <Fragment>\n                                              <Tooltip title=\"Accept\" placement=\"top\">\n                                                 <IconButton onClick={_ => handleApproved(row.id, row.username, row.createdBy, row.activity)} aria-label=\"edit\" style={{color: 'green'}}>\n                                                  <CheckCircleIcon />\n                                                </IconButton>\n                                              </Tooltip> \n                                              |\n                                              <Tooltip title=\"Decline\" placement=\"top\">\n                                                 <IconButton onClick={_ => handleDeclined(row.id, row.username, row.createdBy, row.activity)} aria-label=\"edit\" color=\"secondary\">\n                                                  <CancelIcon />\n                                                </IconButton>\n                                              </Tooltip> \n\n                                              </Fragment>\n                                            :\n                                            <Fragment>\n                                                {\n                                                    row.status === 'finished'\n                                                    ?\n                                                    <span>\n                                                        This activity is already finished\n                                                    </span>\n                                                    :\n                                                                 <Fragment>\n                                                                    {\n                                                                row.status === 'approved'\n                                                                ?\n                                                                <Fragment>\n                                                                <Link to={`/h/activityassessment/${row.id}/${row.activity}`}>\n                                                                    Check students who joined...\n                                                                </Link>\n                                                                <br />\n                                                                     Change your mind? Click the icon.\n                                                                 \n                                                                <IconButton onClick={_ => handlePending(row.id, row.username, row.createdBy, row.activity)} aria-label=\"edit\" color=\"primary\">\n                                                                  <UndoIcon />\n                                                                </IconButton>\n\n                                                                </Fragment>\n                                                                :\n                                                                <Fragment>\n                                                                    You declined this activity,\n                                                                    Change your mind? Click the icon.\n                                                                 \n                                                                <IconButton onClick={_ => handlePending(row.id, row.username, row.createdBy, row.activity)} aria-label=\"edit\" color=\"primary\">\n                                                                  <UndoIcon />\n                                                                </IconButton>\n                                                                 \n                                                                </Fragment>\n                                                            }\n                                                            </Fragment>\n\n                                                }\n                                            </Fragment>\n                                               \n                                          }\n\n                                          </TableCell>\n                                        </TableRow>\n                                      ))\n                                    \n                                    }\n                                    </Fragment>\n                                    \n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n                        </div>\n\n\n                     </Paper>\n                </DashBoardHead>\n            </div>\n        )\n}\n\nconst mapStateToProps = state => ({\n    assessment: state.assessment,\n    auth: state.auth,\n});\n\nconst mapDispatchToProp = { setAsApproved, setAsApprovedFalse, setAsDeclined, setAsDeclinedFalse, setAgainToPending, setAgainToPendingFalse };\n\nexport default connect(mapStateToProps, mapDispatchToProp)(ActivityAssessment);\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nimport lostandfound from '../img/640x640_12988565.png';\nimport found from '../img/images.png';\n\n// Dashboard Component  \nimport DashBoardHead from '../layouts/DashboardHead';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n   card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      cardMedia: {\n        paddingTop: '56.25%', // 16:9\n      },\n}));\n\nconst LostOrFound = (props) => {\n\n\t  const classes = useStyles();\n\n  return (\n    <DashBoardHead className={classes.root}>\n\n         <Typography variant=\"h4\" gutterBottom>\n            Lost and Found\n          </Typography>\n\n\t\t    <Grid container spacing={3}>\n\t\t    \t{/*For lost component grid */}\n\t\t    \t<Grid item xs={12} sm={6}>\n\n\t\t \t\t\t  <Card className={classes.card}>\n                                   <CardMedia\n                                         className={classes.cardMedia}\n                                         image={lostandfound}\n                                         title=\"Image title\"\n                                       />\n                                            {/* This Content will be for the lost and found form content  */}\n                                 <CardContent className={classes.cardContent}>\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                Lost Item Reports\n                                                </Typography>\n                                                <Typography>\n                                                Check Lost Item Reports from your campus\n                                                </Typography>\n                                 </CardContent>\n                                   <CardActions>\n                                                <Button href=\"/h/lostandfound/lostreports\" size=\"small\" variant=\"outlined\" color=\"secondary\">\n                                                Check Reports\n                                                </Button>\n                                   </CardActions>\n                        </Card>\n\n\t\t        </Grid>\n\n\t\t    \t{/*For found component grid */}\n\t\t        <Grid item xs={12} sm={6}>\n\n\t\t         <Card className={classes.card}>\n                                            <CardMedia\n                                                className={classes.cardMedia}\n                                                image={found}\n                                                title=\"Image title\"\n                                            />\n                                            <CardContent className={classes.cardContent}>\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                Record Found Item Reports\n                                                </Typography>\n                                                <Typography>\n                                                Record a found item inside your campus\n                                                </Typography>\n                                            </CardContent>\n                                            <CardActions>\n                                            <Button href=\"/h/lostandfound/foundreports\" size=\"small\" variant=\"outlined\" color=\"secondary\">\n                                                Input Found Item Reports\n                                                </Button>\n                                            </CardActions>\n                                        </Card>\n\t\t   \n\n\t\t        </Grid>\n\n\t\t     </Grid>\n    </DashBoardHead>\n  )\n}\n\nexport default LostOrFound;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass FoundReportSuccessMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant=\"success\"\n            message=\"Found Item Record Added!\"\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default FoundReportSuccessMsg;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass FoundDeleteMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant=\"success\"\n            message=\"Found Item Deleted\"\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default FoundDeleteMsg;","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { getFoundReports, deleteFoundReport } from '../../actions/lafActions';\n\nimport { withStyles, makeStyles, useTheme} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FindReplaceIcon from '@material-ui/icons/FindReplace';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n// Dashboard Component  \nimport DashBoardHead from '../layouts/DashboardHead';\nimport FoundReportSuccessMsg from './FoundReportSuccessMsg';\nimport FoundDeleteMsg from './FoundDeleteMsg';\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  }));\n\n// Table Functions for table pagination \n  // Table one \n  function TablePaginationActions(props) {\n      const classes = useStyles1();\n      const theme = useTheme();\n      const { count, page, rowsPerPage, onChangePage } = props;\n    \n      const handleFirstPageButtonClick = event => {\n        onChangePage(event, 0);\n      };\n    \n      const handleBackButtonClick = event => {\n        onChangePage(event, page - 1);\n      };\n    \n      const handleNextButtonClick = event => {\n        onChangePage(event, page + 1);\n      };\n    \n      const handleLastPageButtonClick = event => {\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n      };\n      // Table Pagination Component \n      return (\n        <div className={classes.root}>\n          <IconButton\n            onClick={handleFirstPageButtonClick}\n            disabled={page === 0}\n            aria-label=\"first page\"\n          >\n            {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n          </IconButton>\n          <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n          </IconButton>\n          <IconButton\n            onClick={handleNextButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"next page\"\n          >\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </IconButton>\n          <IconButton\n            onClick={handleLastPageButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"last page\"\n          >\n            {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n          </IconButton>\n        </div>\n      );\n    }\n    \n    TablePaginationActions.propTypes = {\n      count: PropTypes.number.isRequired,\n      onChangePage: PropTypes.func.isRequired,\n      page: PropTypes.number.isRequired,\n      rowsPerPage: PropTypes.number.isRequired,\n    };\n\n\nconst styles = theme => ({\t\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n   table: {\n        minWidth: 500,\n      },\n  tableWrapper: {\n        overflowX: 'auto',\n      }\n});\n\nconst Found = (props) => {\n\tconst classes = props;\n\n\t// Table pagination Actions states\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n      // Loading for fetching datas \n    const [loading, setLoading] = useState(true);\n\n      // Success message handling state \n  const [open, setOpen] = useState(false);\n\n  // FoundDeleteMsg component state \n  const [open1 , setOpen1] = useState(false);\n\n    //Success handlin message \n  const handleClose = (event, reason) => {\n    if(reason === 'clickaway'){\n        return\n    }\n    setOpen(false);\n  };\n\n   const handleClose1 = (event, reason) => {\n    if(reason === 'clickaway'){\n        return\n    }\n    setOpen1(false);\n  };\n\n  // Function for deleting a found data report with its specific id \n  const deleteFoundReport = id => {\n\n    if(window.confirm(\"Are you sure to delete this records?\")){\n      props.deleteFoundReport(id);\n      setOpen1(true)\n    }\n\n  };\n\n     const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n  \n    const handleChangeRowsPerPage = event => {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    };\n\n    useEffect( _ => {\n      if(props.laf.found){\n        setOpen(true)\n      }\n    },[props.laf.found]);\n\n    useEffect( _ => {\n\n      const id = setInterval( _ => {\n\n      props.getFoundReports();\n      setLoading(false);\n\n      }, 2000) ;\n\n      return _ => {\n        clearInterval(id);\n      }\n\n    \n    }, [])\n\n  // This is the props for getting the details of the user \n  const auth = props.auth;\n\n  //Array of the reports in the lost item reports \n  const rows = props.laf.reports.sort((a, b) => (a.created_at > b.created_at ? -1 : 1))\n  .filter(row => auth.user.campus === row.campus );\n\n    //Empty row that says the rows for pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n     <DashBoardHead>\n\n     <FoundDeleteMsg open={open1} onClose={handleClose1} />\n     <FoundReportSuccessMsg open={open} onClose={handleClose} />\n\n      <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n        <Link color=\"inherit\" href=\"/h/lostandfound\" className={classes.link}>\n          <HomeIcon className={classes.icon} />\n          Menu\n        </Link>\n\n        <Link\n          color=\"textPrimary\"\n          href=\"/h/lostandfound/foundreports\"\n          aria-current=\"page\"\n          className={classes.link}\n        >\n        <FindReplaceIcon className={classes.icon}/>\n          Lost Reports\n        </Link>\n    </Breadcrumbs>\n\n    <Typography variant=\"h4\" gutterBottom>\n            Found Item Records\n          </Typography>\n\n         <Paper className={classes.root}>\n               {/*Table of reports will be Here */}\n               <div className={classes.tableWrapper}>\n               \t\t\n               \t\t<Table className={classes.table} aria-label=\"custom pagination table\">\n\n                  <TableHead>\n                    <TableRow>\n                      <StyledTableCell>Name of Finder</StyledTableCell>\n                      <StyledTableCell align=\"left\">Found Item</StyledTableCell>\n                      <StyledTableCell align=\"left\">Campus of the found item</StyledTableCell>\n                      <StyledTableCell align=\"left\">Date Reported</StyledTableCell>\n                      <StyledTableCell align=\"left\">Action</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n\n                <TableBody>\n              { loading \n                ? \n                  //When the data is still loading\n                  <TableRow>\n                  <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                    <CircularProgress color=\"secondary\" /><br/>\n                    <span>Loading ...</span>\n                  </TableCell>\n                </TableRow>\n                :   \n\n                <Fragment>\n                  {\n                    rows.length === 0\n                    ?\n                    <TableRow>\n                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                        <span>No Report Records? Refresh the page after 5 mins to see what's up</span>\n                      </TableCell>\n                    </TableRow>\n                    :\n                      //Data to be displayed when the data is fetched\n                      <Fragment>\n                      {\n                      \n                        (rowsPerPage > 0\n                          ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                          : rows\n                        )\n                        .map(row => (\n                          <TableRow>\n                            <TableCell component=\"th\" scope=\"row\">{row.findername}</TableCell>\n                            <TableCell align=\"left\">{row.founditem}</TableCell>\n                            <TableCell align=\"left\">{row.campus}</TableCell>\n                            <TableCell align=\"left\">{row.date}</TableCell>\n                            <TableCell align=\"left\">\n                            \t<IconButton \n                              aria-label=\"delete\" \n                              color=\"secondary\"\n                              onClick={ _ => deleteFoundReport(row.id)}\n                              >\n                                  <DeleteIcon />\n                                </IconButton>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      }\n                      </Fragment>\n                  }\n                </Fragment> \n              }\n\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          \n                    {/* Pagination Actions  */}\n                    <TableFooter>\n                      <TableRow>\n                        <TablePagination\n                          rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                          colSpan={3}\n                          count={rows.length}\n                          rowsPerPage={rowsPerPage}\n                          page={page}\n                          SelectProps={{\n                            inputProps: { 'aria-label': 'rows per page' },\n                            native: true,\n                          }}\n                          onChangePage={handleChangePage}\n                          onChangeRowsPerPage={handleChangeRowsPerPage}\n                          ActionsComponent={TablePaginationActions}\n                        />\n                      </TableRow>\n                    </TableFooter>\n                  </Table>\n               </div>\n\n               \n         </Paper>\n\n       \t   <div style={{ paddingTop: '20px'}}>\n         \t\t<Button href=\"/h/lostandfound/foundreports/addfoundrecord\" size=\"small\" variant=\"outlined\" color=\"secondary\">\n                   \tAdd Records\n                </Button>\n           </div>\n\n     </DashBoardHead>\n  )\n};\n\nFound.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n     laf: state.laf\n  });\n\nconst mapDispatchToProps = { getFoundReports, deleteFoundReport };\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Found)));","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport { withRouter } from \"react-router\";\nimport { addFoundReports } from '../../actions/lafActions';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FindReplaceIcon from '@material-ui/icons/FindReplace';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\n\nimport DashBoardHead from '../layouts/DashboardHead';\n\n// Object Styles for the components \nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n          width: 600,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        },\n      },\n      paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n      closeIcon: {\n          float: 'right',\n          color: 'red'\n      },\n      formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n      submit:{\n        marginTop: theme.spacing(3),\n      },\n      close: {\n          padding: theme.spacing() / 2,\n      },\n         link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n});\n\nfunction AddFound(props){\n\n\n    const classes = props;\n\n    // State for the campuses and its loading state\n  const [campuses, getCampuses] = useState([]);\n  const [loadingCampuses, setLoadingCampuses] = useState(true);\n  \n  // Error Handling \n  const [errors, getErrors] = useState({});\n \n  // Value States \n  const [findername ,setFinderName]  = useState('');\n  const [founditem, setFoundItem] = useState('');\n  const [campus, setCampus] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n// Value functions : \n\n// For Findername State \nconst handleFinderName = e => {\n    setFinderName(e.target.value);\n};\n\n// For FoundItem State\nconst handleFoundItem = e => {\n    setFoundItem(e.target.value);\n}\n\n// For campus State \nconst handleCampus = e => {\n    setCampus(e.target.value);\n};\n\n// For selectedDate state \nconst handleDateChange = date => {\n    setSelectedDate(date);\n};\n\n\nconst handleSubmit = e => {\n\n    e.preventDefault();\n\n    const date = moment(selectedDate).format('YYYY-MM-DD, h:mm:ss a');\n\n    const newFoundRecord = {\n        findername,\n        founditem,\n        campus,\n        date\n    };\n\n    props.addFoundReports(newFoundRecord);\n    \n};\n\n\n    useEffect( _ => {\n\n      const id = setInterval( _ => {\n        (async _ => {\n            const res = await axios.get('/api/campuses');\n            getCampuses(res.data);\n            setLoadingCampuses(false);\n        })();\n      }, 2000);\n\n      return _ => {\n        clearInterval(id);\n      }\n       \n    }, []);\n\n    // useEffect for getting the errors\n    useEffect( _ => {\n      if(props.errors){\n        getErrors(props.errors)\n      }\n    },[props.errors]);\n\n    useEffect( _ => {\n      if(props.laf.found){\n          props.history.push('/h/lostandfound/foundreports');\n      }\n    }, [props.laf.found]);\n\n  return (\n     <DashBoardHead>\n\n      <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n        <Link color=\"inherit\" href=\"/h/lostandfound\" className={classes.link}>\n          <HomeIcon className={classes.icon} />\n          Menu\n        </Link>\n\n        <Link\n          color=\"inherit\"\n          href=\"/h/lostandfound/foundreports\"\n          aria-current=\"page\"\n          className={classes.link}\n        >\n        <FindReplaceIcon className={classes.icon}/>\n          Lost Reports\n        </Link>\n        <Link\n          color=\"textPrimary\"\n          href=\"/h/lostandfound/foundreports/addfoundrecord\"\n          aria-current=\"page\"\n          className={classes.link}\n        >\n        <ListAltIcon className={classes.icon} />\n          Add\n        </Link>\n    </Breadcrumbs>\n\n        {/* Main Component for the form of AddFound */}\n         <div className={classes.root}>    \n            \n                <main className={classes.layout}>\n                    <Paper className={classes.paper} style={{ paddingTop: '10px', paddingBottom:'30px'}}>\n\n                        <Typography variant=\"h4\" align=\"center\">\n                            Lost Item Report Form\n                        </Typography>\n                        <br></br>\n\n                <Container maxWidth=\"md\">\n                        <Typography variant=\"h6\">\n                            Input the details needed.\n                        </Typography>\n\n                        <form noValidate onSubmit={handleSubmit}>\n\n                        <Grid container spacing={3}>\n\n                            {/* Ful Name Text Fiel  */}\n                        <Grid item xs={12}>\n                                <TextField\n                                value={findername}\n                                onChange={handleFinderName}\n                                    id=\"findername\"\n                                    name=\"findername\"\n                                    label=\"Founder Name\"\n                                    fullWidth\n                                    autoComplete=\"findername\"\n                                />\n                            \n                              <span style={{ color: \"red\" }}>\n                                {errors.findername}\n                            </span>\n\n                                </Grid>\n\n                          <Grid item xs={12}>\n                                <TextField\n                                value={founditem}\n                                onChange={handleFoundItem}\n                                    id=\"founditem\"\n                                    name=\"founditem\"\n                                    label=\"Found Item\"\n                                    fullWidth\n                                    autoComplete=\"founditem\"\n                                />\n                            <span style={{ color: \"red\" }}>\n                                {errors.founditem}\n                            </span>\n                            </Grid>\n\n                       { /* Campuses Selection */ }\n                        <Grid item xs={12}>\n                            {/* Campuses TextField */}\n                            <FormControl fullWidth className={classes.formControl}>\n\n                            <InputLabel htmlFor=\"campus-simple\">What Campus</InputLabel>\n\n                                <Select\n                                    value={campus}\n                                    onChange={handleCampus}\n                                    \n                                    inputProps={{\n                                        name:'campus',\n                                        id: 'campus-simple'\n                                    }}\n                                >\n\n                                {\n                                    loadingCampuses ?\n                                        <MenuItem></MenuItem>\n                                    :\n                                    campuses.map((campus, id) => {\n                                        return( <MenuItem key={id} value={campus.campusname}>{campus.campusname} </MenuItem>)\n                                    })\n                                }\n\n\n                                </Select>\n\n                            </FormControl>\n                             <span style={{ color: \"red\" }}>\n                                {errors.campus}\n                            </span>\n                        </Grid>\n                               \n                       { /* Date Selection */ }\n                        <Grid item xs={12}>\n                         <FormControl fullWidth className={classes.formControl}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                    <KeyboardDatePicker\n                                      disableToolbar\n                                      variant=\"inline\"\n                                      format=\"yyyy-MM-dd\"\n                                      margin=\"normal\"\n                                      id=\"date-picker-inline\"\n                                      label=\"When did the item found?\"\n                                      value={selectedDate}\n                                      onChange={handleDateChange}\n                                      KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                      }}\n                                    />\n                            </MuiPickersUtilsProvider>\n                          </FormControl>\n                           <span style={{ color: \"red\" }}>\n                                {errors.date}\n                            </span>\n                        </Grid>\n\n\n                         <Button\n                                type=\"submit\"\n                               size=\"small\" \n                               variant=\"outlined\" \n                               color=\"secondary\"\n                                className={classes.submit}\n                            >\n                                Add\n                            </Button>\n\n\n\n                        </Grid>\n\n                        </form>\n\n\n\n                </Container>\n                    </Paper>\n                </main>\n\n            </div>\n      </DashBoardHead>\n  )\n};\n\nAddFound.propTypes = {\n    classes: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n    laf:PropTypes.object.isRequired,\n    addFoundReports: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  laf: state.laf,\n  errors: state.errors\n});\n\nconst mapDispatchToProps = { addFoundReports };\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddFound)));","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\n\nimport moment from 'moment';\nimport clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport { red } from '@material-ui/core/colors';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Grid from '@material-ui/core/Grid';\n\n\nimport DashBoardHead from '../layouts/DashboardHead';\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n   card: {\n   float: 'center',\n    maxWidth: 500,\n  },\n  media: {\n    textAlign: \"center\"\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n    \n}));\n\nfunction HeadEventSingle(props){\n\n    const classes = useStyles();\n\n    const [event, setEvent] = useState({});\n\n    useEffect(_ => {\n        axios.get(`/api/announcements/${props.match.params.id}`)\n        .then(res => setEvent(res.data))\n        .catch(err => console.log(err));\n    },[]);\n\n\n        return (\n            <div>\n                <DashBoardHead>\n                    <Container style={{paddingTop: 20}}>\n\n                     <Paper className={classes.root}>\n\n\n                    <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n                        <Link color=\"inherit\" href=\"/h\" className={classes.link}>\n                          <DateRangeIcon className={classes.icon} />\n                          Calendar\n                        </Link>\n\n                        <Link\n                          color=\"textPrimary\"\n                          href={`/h/calendar/${props.match.params.id}`}\n                          aria-current=\"page\"\n                          className={classes.link}\n                        >\n                        <EventNoteIcon className={classes.icon} />\n                          Event\n                        </Link>\n                    </Breadcrumbs>\n\n\n\n                    <Grid container spacing={3}>\n                            <Grid item xs>\n                            </Grid>\n\n                            <Grid item xs={6}>\n                                 \n                                    <Card className={classes.card}>\n                                      <CardHeader\n                                        avatar={\n                                          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                            SOA\n                                          </Avatar>\n                                        }\n                                        // action={\n                                        //   <IconButton aria-label=\"settings\">\n                                        //     <MoreVertIcon />\n                                        //   </IconButton>\n                                        // }\n                                        title={event.title}\n                                        subheader={`${moment(event.dateDate).format('MMMM D YYYY')} by: ${event.setBy}`}\n                                      />\n\n                                  <CardMedia className={classes.media}>\n                                        <img style={{height: \"340px\", width: \"450px\"}} src={`${event.poster}`}/>\n                                  </CardMedia>\n\n                                      <CardContent>\n                                         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                          Venue: {event.venue}\n                                        </Typography>\n\n                                        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                          {event.description}\n                                        </Typography>\n                                      </CardContent>\n                                      <CardActions disableSpacing>\n                                      \n                                      </CardActions>\n                                   \n                                    </Card>\n                                    \n                            </Grid>\n\n                            <Grid item xs>\n                            </Grid>\n\n\n                          </Grid>\n\n                     </Paper>\n                    </Container>\n\n                </DashBoardHead>\n            </div>\n        )\n}\n\nexport default HeadEventSingle;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\n\nimport moment from 'moment';\nimport clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport { red } from '@material-ui/core/colors';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\n\nimport DashBoardHead from '../layouts/DashboardHead';\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n   card: {\n   float: 'center',\n    maxWidth: 500,\n  },\n  media: {\n    textAlign: \"center\"\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n    \n}));\n\nfunction HeadEvents(props){\n\n    const classes = useStyles();\n    //State for the events\n    const [events, setEvents] = useState([]);\n    const [ifError, setIfError] = useState(false);\n\n    //Component Effect\n    useEffect(_ => {\n        axios.get(`/api/announcements/getByDate/${props.match.params.dateDate}`)\n        .then(res => setEvents(res.data))\n        .catch(err => {\n            if(err)\n                setIfError(true)\n        });\n    },[]);\n\n        return (\n            <div>\n                <DashBoardHead>\n\n                        <Container style={{paddingTop: 20}}>\n\n\n                     <Paper className={classes.root}>\n\n\t\t\t\t\t<Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n\t\t\t\t        <Link color=\"inherit\" href=\"/h\" className={classes.link}>\n\t\t\t\t          <DateRangeIcon className={classes.icon} />\n\t\t\t\t          Calendar\n\t\t\t\t        </Link>\n\n\t\t\t\t        <Link\n\t\t\t\t          color=\"textPrimary\"\n\t\t\t\t          href={`/h/calendar/listOfEvents/${props.match.params.dateDate}`}\n\t\t\t\t          aria-current=\"page\"\n\t\t\t\t          className={classes.link}\n\t\t\t\t        >\n\t\t\t\t        <EventNoteIcon className={classes.icon} />\n\t\t\t\t          Events\n\t\t\t\t        </Link>\n\t\t\t\t    </Breadcrumbs>\n\n                        <Fragment>\n                     {/*check if Theres an error\n\n                             <Typography variant=\"h1\" component=\"h2\" color=\"textSecondary\">\n                                            There's an error. Please refresh the page...\n                                        </Typography>\n                     */}\n                            {\n                                ifError\n                                ?\n                                <Grid container spacing={3}>\n                                     <Grid item xs>\n                                     </Grid>\n\n                                     <Grid item xs={6}>\n                                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"center\">\n                                            <WarningIcon style={{color: 'red'}} /> <br />\n                                            There's an error. Please refresh the page...\n                                        </Typography>\n                                     </Grid>\n\n                                    <Grid item xs>\n                                    </Grid>\n                                </Grid>\n                                :\n                                <Fragment>\n                                    {\n                                        events.length === 0 \n                                        ?\n                                          <Grid container spacing={3}>\n                                             <Grid item xs>\n                                             </Grid>\n\n                                             <Grid item xs={6}>\n                                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"center\">\n                                                    <SentimentVerySatisfiedIcon style={{color: 'green'}} /> <br />\n                                                    There are no events for this date. Please other dates for events.\n                                                </Typography>\n                                             </Grid>\n\n                                            <Grid item xs>\n                                            </Grid>\n                                        </Grid>\n\n                                        :\n\n                                    <Fragment>\n                                        {\n\n                                        events.map(event => (\n\n                            <Grid container spacing={3}>\n                                        <Grid item xs>\n                                        </Grid>\n\n                                        <Grid item xs={6}>\n                                             \n                                                <Card className={classes.card}>\n                                                  <CardHeader\n                                                    avatar={\n                                                      <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                                        SOA\n                                                      </Avatar>\n                                                    }\n                                                    // action={\n                                                    //   <IconButton aria-label=\"settings\">\n                                                    //     <MoreVertIcon />\n                                                    //   </IconButton>\n                                                    // }\n                                                    title={event.title}\n                                                    subheader={`${moment(event.dateDate).format('MMMM D YYYY')} by: ${event.setBy}`}\n                                                  />\n\n                                              <CardMedia className={classes.media}>\n                                                    <img style={{height: \"340px\", width: \"450px\"}} src={`${event.poster}`}/>\n                                              </CardMedia>\n\n                                                  <CardContent>\n                                                     <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                      Venue: {event.venue}\n                                                    </Typography>\n\n                                                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                                      {event.description}\n                                                    </Typography>\n                                                  </CardContent>\n                                                  <CardActions disableSpacing>\n                                                  \n                                                  </CardActions>\n                                               \n                                                </Card>\n                                                \n                                        </Grid>\n\n                                        <Grid item xs>\n                                        </Grid>\n\n\n                                 </Grid>\n\n                                            ))\n\n                                    }\n                                    </Fragment>\n\n\n                                    }\n                                </Fragment>\n                            }\n\n                        </Fragment>\n                     </Paper>\n                        \n\t\t\t\t  \t</Container>\n\n                </DashBoardHead>\n            </div>\n        )\n}\n\nexport default HeadEvents;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addAnnouncementHead } from '../../actions/announcementActions';\nimport moment from 'moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\nimport Container from '@material-ui/core/Container';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker,} from '@material-ui/pickers';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport { createFormData } from \"./formData\";\n//Admin Dashboard Component\nimport DashboardHead from '../layouts/DashboardHead';\n\n// Object Styles for the components \nconst styles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n         ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n      },\n\n      paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n      closeIcon: {\n          float: 'right',\n          color: 'red'\n      },\n      formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n      submit:{\n        marginTop: theme.spacing(3),\n      },\n      close: {\n          padding: theme.spacing() / 2,\n      },\n         link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n    input: {\n    display: 'none',\n  },\n}));\n\n\nfunction AddEventFormHead(props){\n        const classes = styles();\n\n        /* States*/\n\n        const [values, setValues] = useState({\n            title: '',\n            venue: '',\n            description: '',\n            bgColor:'#000000',\n\n        });\n\n        const [poster, getPoster] = useState({\n            poster: null,\n            fileName: ''\n        });\n\n         const [selectedDate, setSelectedDate] = useState(new Date());\n         const [selectedTime, setSelectedTime] = useState(new Date());\n\n         const [errors, getErrors] = useState({});\n        \n        /* Event Handlers*/\n        const handleDate = date => {\n            setSelectedDate(date);\n        }\n\n        const handleTime = time => {\n            setSelectedTime(time);\n        }\n\n        const handleSubmit = e => {\n            e.preventDefault();\n\n            // const fullDate = `${selectedDate.getFullYear()}-${selectedDate.getMonth() + 1}-${selectedDate.getDate()}`;\n            const dateDate = moment(selectedDate).format('YYYY-MM-DD');\n            const dateTime = moment(selectedTime).format('HH:mm:ss');       \n\n            const date = `${dateDate} ${dateTime}`;\n\n            const { user } = props.auth;\n\n            let fd = new FormData();\n            fd.append('poster', poster.poster);\n            fd.append('title', values.title);\n            fd.append('venue', values.venue);\n            fd.append('description', values.description);\n            fd.append('fileName', poster.fileName);\n            fd.append('backgroundColor', values.backgroundColor);\n            fd.append('date', date);\n            fd.append('dateDate', dateDate);\n            fd.append('dateTime', dateTime);\n            fd.append('setBy', `SOA Head of ${user.campus}`);\n\n            props.addAnnouncementHead(fd);\n\n        }\n\n        // Component Effect for a successful Adding of Announcement\n        useEffect(_ => {\n           if(props.announcement.added)\n              props.history.push('/h/announceevent');\n\n        },[props.announcement.added]);\n\n        // Component Effect for the errors\n        useEffect(_ => {\n          if(props.errors)\n              getErrors(props.errors)\n        },[props.errors])\n\n\n        return (\n            <div>\n                <DashboardHead>\n\n                <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n                    <Link color=\"inherit\" href=\"/h/announceevent\" className={classes.link}>\n                      <ViewListIcon className={classes.icon} />\n                      Menu\n                    </Link>\n\n                    <Link\n                      color=\"textPrimary\"\n                      href=\"/h/announceevent/addevent\"\n                      aria-current=\"page\"\n                      className={classes.link}\n                    >\n                    <ListAltIcon className={classes.icon} />\n                      Add\n                    </Link>\n                </Breadcrumbs>\n\n                    <Paper className={classes.root}>\n                          \n                                <Container maxWidth=\"lg\">\n\n                                  <Typography variant=\"h4\" align=\"center\">\n                                        Announce Event Form\n                                    </Typography>\n                                      <br></br>\n\n                                    <form noValidate onSubmit={handleSubmit} enctype=\"multipart/form-data\" method=\"POST\">\n\n                                    <Typography variant=\"h6\">\n                                     Input the details needed.\n                                    </Typography>\n\n                                        <Grid item xs={12}>\n                                            <TextField \n                                            value={values.title}\n                                            onChange={e => setValues({...values, title: e.target.value})}\n                                                id=\"title\"\n                                                name=\"title\"\n                                                label=\"Announcement/Event Title\"\n                                                fullWidth\n                                                autoComplete\n                                            />\n                                        </Grid>\n                                        <span style={{ color: \"red\" }}>\n                                               {errors.title}\n                                         </span>\n                                        <br />\n                                         <Grid item xs={12}>\n                                            <FormControl fullWidth className={classes.formControl}>\n                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                        <KeyboardDatePicker\n                                                          value={selectedDate}\n                                                          onChange={handleDate}\n                                                          disableToolbar\n                                                          variant=\"inline\"\n                                                          format=\"yyyy-MM-dd\"\n                                                          margin=\"normal\"\n                                                          id=\"date-picker-inline\"\n                                                          label=\"Date of the event\"\n                                                          KeyboardButtonProps={{\n                                                            'aria-label': 'change date',\n                                                          }}\n                                                        />\n                                                </MuiPickersUtilsProvider>\n                                          </FormControl>\n                                        </Grid>\n                                         <span style={{ color: \"red\" }}>\n                                               {errors.date}\n                                         </span>\n                                        \n                                        <br />\n\n                                         <Grid item xs={12}>\n                                            <FormControl fullWidth className={classes.formControl}>\n                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                    <KeyboardTimePicker\n                                                     format= \"hh:mm a\"\n                                                      value={selectedTime}\n                                                      onChange={handleTime}\n                                                      margin=\"normal\"\n                                                      id=\"time-picker\"\n                                                      label=\"Time picker\"\n                                                      KeyboardButtonProps={{\n                                                        'aria-label': 'change time',\n                                                      }}\n                                                      keyboardIcon={<AccessTimeIcon />}\n                                                    />\n                                                </MuiPickersUtilsProvider>\n                                            </FormControl>\n                                         </Grid>\n                                         <br/>\n\n                                        <Grid item xs={12}>\n                                            <TextField \n                                                value={values.venue}\n                                                onChange={e => setValues({...values, venue: e.target.value})}\n                                                id=\"venue\"\n                                                name=\"venue\"\n                                                label=\"Where the event will happen\"\n                                                fullWidth\n                                                autoComplete\n                                            />\n                                        </Grid>\n                                         <span style={{ color: \"red\" }}>\n                                               {errors.venue}\n                                         </span>\n                                        <br />\n\n                                <Grid container spacing={1} alignItems=\"flex-end\">\n\n                                    <Grid item xs={1}>\n\n                                      {/* \n                                         onChange={e => setObj({...obj, file: e.target.files[0], fileName: e.target.files[0].name})} \n\n                                        value={obj.fileName}\n\n                                      */}\n                                        <input\n                                        onChange={e => getPoster({...poster, poster: e.target.files[0], fileName: e.target.files[0].name.toLowerCase().split(' ').join('-')})} \n                                        className={classes.input} id=\"poster\" name=\"poster\" type=\"file\" />\n                                          <label htmlFor=\"poster\">\n                                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                              <CloudUploadIcon />\n                                            </IconButton>\n                                         </label>\n\n                                      </Grid>\n\n                                      <Grid item xs={11}>\n                                        <TextField \n                                        value={poster.fileName}\n                                        id=\"input-with-icon-grid\"\n                                        label=\"Poster for the event\"\n                                        helperText=\"Note: .png and .jpg is required\"\n                                        fullWidth\n                                          InputProps={{\n                                               readOnly: true,\n                                              }}\n                                           InputLabelProps={{\n                                                shrink: true,\n                                           }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                 <span style={{ color: \"red\" }}>\n                                               {errors.poster}\n                                         </span>\n\n                                <br />\n\n                                <Grid container spacing={1} alignItems=\"flex-end\">\n\n                                <Grid item xs={8}>\n                                      <TextField \n                                            value={values.description}\n                                            onChange={e => setValues({...values, description: e.target.value})}\n                                                id=\"description\"\n                                                name=\"description\"\n                                                label=\"Description of the Event\"\n                                                fullWidth\n                                                autoComplete\n                                                multiline\n                                            />\n                                    </Grid>\n                                   \n                                    <br/>\n                                      <span style={{ color: \"red\" }}>\n                                               {errors.description}\n                                         </span>\n\n                                    <Grid item xs={4}>\n                                            <TextField \n                                            type=\"color\"\n                                            value={values.bgColor}\n                                            onChange={e => setValues({...values, bgColor: e.target.value})}\n                                                id=\"color\"\n                                                name=\"color\"\n                                                label=\"Choose color for the display background of the event\"\n                                                fullWidth\n                                                autoComplete\n                                            />\n                                        </Grid>\n\n                                    </Grid>\n\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"outlined\"\n                                        color=\"secondary\"\n                                        className={classes.submit}\n                                    >\n                                        Add Record\n                                    </Button>\n\n                                        \n                                    </form>\n\n                                </Container>\n\n                    </Paper>\n                </DashboardHead>\n            </div>\n        )\n    \n}\n\nconst mapStateToProps = state => ({\n  announcement: state.announcement,\n  auth: state.auth,\n  errors: state.errors,\n});\n\nconst mapDispatchToProps = { addAnnouncementHead }; \n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEventFormHead);\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { updateAnnouncementHead } from '../../actions/announcementActions';\nimport moment from 'moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker,} from '@material-ui/pickers';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\n//Admin Dashboard Component\nimport DashboardHead from '../layouts/DashboardHead';\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\nimport { createFormData } from \"./formData\";\n\n// Object Styles for the components \nconst styles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n         ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n      },\n\n      paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n      closeIcon: {\n          float: 'right',\n          color: 'red'\n      },\n      formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n      submit:{\n        marginTop: theme.spacing(3),\n      },\n      close: {\n          padding: theme.spacing() / 2,\n      },\n         link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n    input: {\n    display: 'none',\n  },\n}));\n\n\nfunction UpdateEventFormHead(props){\n        const classes = styles();\n\n        /* States*/\n\n        const [values, setValues] = useState({\n            title: '',\n            poster: '',\n            fileName:'',\n            venue: '',\n            description: '',\n            bgColor:'',\n\n        });\n         const [selectedDate, setSelectedDate] = useState(new Date());\n         const [selectedTime, setSelectedTime] = useState(new Date());\n\n         const [errors, getErrors] = useState({});\n        \n         const [errorAll, setErrorAll] = useState(false);\n\n        /* Event Handlers*/\n        const handleDate = date => {\n            setSelectedDate(date);\n        }\n\n        const handleTime = time => {\n            setSelectedTime(time);\n        }\n\n        const handleSubmit = e => {\n            e.preventDefault();\n\n            const { user } = props.auth;\n\n            // const fullDate = `${selectedDate.getFullYear()}-${selectedDate.getMonth() + 1}-${selectedDate.getDate()}`;\n            const dateDate = moment(selectedDate).format('YYYY-MM-DD');\n            const dateTime = moment(selectedTime).format('HH:mm:ss');       \n\n            const date = `${dateDate} ${dateTime}`;\n\n            const newAnnouncement = { \n                ...values,\n                date,\n                dateDate,\n                dateTime,\n                setBy: `SOA Head of ${user.campus}`\n            }\n\n            // const _formData = createFormData(newAnnouncement);\n\n            const formData = new FormData();\n            formData.append('poster', values.poster)\n            formData.append('title', values.title);\n            formData.append('fileName', values.fileName);\n            formData.append('venue', values.venue);\n            formData.append('description', values.description);\n            formData.append('bgColor', values.bgColor);\n            formData.append('date', date);\n            formData.append('dateDate', dateDate);\n            formData.append('dateTime', dateTime);\n            formData.append('setBy', `SOA Head of ${user.campus}`);\n\n            // console.log(newAnnouncement);\n            // console.log(formData.get('title'))\n\n            // console.log(e);\n            // console.log(dataAnnouncement);\n            props.updateAnnouncementHead(props.match.params.id, formData);\n\n        }\n\n        // Closing Event for the Error message \n        const handleClose = (event, reason) => {\n          if (reason === 'clickaway') {\n            return;\n          }\n\n          setErrorAll(false);\n        };\n\n        useEffect(_ => {\n          axios.get(`/api/announcements/${props.match.params.id}`)\n          .then(res => {\n            setValues({\n            title: res.data.title,\n            venue: res.data.venue,\n            description: res.data.description,\n            bgColor: res.data.backgroundColor,\n            // fileName: res.data.fileName,\n            // poster: res.data.poster\n\n            });\n\n            setSelectedDate(res.data.date);\n            setSelectedTime(res.data.date);\n          }\n\n            )\n          .catch(err => err)\n        },[]);\n\n        // Component Effect for a successful Adding of Announcement\n        useEffect(_ => {\n           if(props.announcement.updated)\n              props.history.push('/h/announceevent');\n\n        },[props.announcement.updated]);\n\n        // Component Effect for the errors\n        useEffect(_ => {\n          if(props.errors)\n              getErrors(props.errors)\n\n          if(props.errors.all)\n            setErrorAll(true)\n        },[props.errors])\n\n     \n        return (\n            <div>\n                <DashboardHead>\n                <FormConfirmationMsg open={errorAll} onClose={handleClose} variant=\"error\" message={errors.all}/>\n\n                <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n                    <Link color=\"inherit\" href=\"/ad/announceevent\" className={classes.link}>\n                      <ViewListIcon className={classes.icon} />\n                      Menu\n                    </Link>\n\n                    <Link\n                      color=\"textPrimary\"\n                      href=\"/ad/announceevent/addevent\"\n                      aria-current=\"page\"\n                      className={classes.link}\n                    >\n                    <ListAltIcon className={classes.icon} />\n                      Add\n                    </Link>\n                </Breadcrumbs>\n\n                    <Paper className={classes.root}>\n                          \n                                <Container maxWidth=\"lg\">\n\n                                  <Typography variant=\"h4\" align=\"center\">\n                                        Announce Event Form\n                                    </Typography>\n                                      <br></br>\n\n                                    <form noValidate onSubmit={handleSubmit} encType=\"multipart/form-data\">\n\n                                    <Typography variant=\"h6\">\n                                     Input the details needed.\n                                    </Typography>\n\n                                        <Grid item xs={12}>\n                                            <TextField \n                                            value={values.title}\n                                            onChange={e => setValues({...values, title: e.target.value})}\n                                                id=\"title\"\n                                                name=\"title\"\n                                                label=\"Announcement/Event Title\"\n                                                fullWidth\n                                                autoComplete\n                                            />\n                                        </Grid>\n                                        <span style={{ color: \"red\" }}>\n                                               {errors.title}\n                                         </span>\n                                        <br />\n                                         <Grid item xs={12}>\n                                            <FormControl fullWidth className={classes.formControl}>\n                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                        <KeyboardDatePicker\n                                                          value={selectedDate}\n                                                          onChange={handleDate}\n                                                          disableToolbar\n                                                          variant=\"inline\"\n                                                          format=\"yyyy-MM-dd\"\n                                                          margin=\"normal\"\n                                                          id=\"date-picker-inline\"\n                                                          label=\"Date of the event\"\n                                                          KeyboardButtonProps={{\n                                                            'aria-label': 'change date',\n                                                          }}\n                                                        />\n                                                </MuiPickersUtilsProvider>\n                                          </FormControl>\n                                        </Grid>\n                                         <span style={{ color: \"red\" }}>\n                                               {errors.date}\n                                         </span>\n                                        \n                                        <br />\n\n                                         <Grid item xs={12}>\n                                            <FormControl fullWidth className={classes.formControl}>\n                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                    <KeyboardTimePicker\n                                                     format= \"hh:mm a\"\n                                                      value={selectedTime}\n                                                      onChange={handleTime}\n                                                      margin=\"normal\"\n                                                      id=\"time-picker\"\n                                                      label=\"Time picker\"\n                                                      KeyboardButtonProps={{\n                                                        'aria-label': 'change time',\n                                                      }}\n                                                      keyboardIcon={<AccessTimeIcon />}\n                                                    />\n                                                </MuiPickersUtilsProvider>\n                                            </FormControl>\n                                         </Grid>\n                                         <br/>\n\n                                        <Grid item xs={12}>\n                                            <TextField \n                                                value={values.venue}\n                                                onChange={e => setValues({...values, venue: e.target.value})}\n                                                id=\"venue\"\n                                                name=\"venue\"\n                                                label=\"Where the event will happen\"\n                                                fullWidth\n                                                autoComplete\n                                            />\n                                        </Grid>\n                                         <span style={{ color: \"red\" }}>\n                                               {errors.venue}\n                                         </span>\n                                        <br />\n\n                                <Grid container spacing={1} alignItems=\"flex-end\">\n\n                                    <Grid item xs={1}>\n\n                                      {/* \n                                         onChange={e => setObj({...obj, file: e.target.files[0], fileName: e.target.files[0].name})} \n\n                                        value={obj.fileName}\n\n                                      */}\n                                        <input\n                                        onChange={e => setValues({...values, poster: e.target.files[0], fileName: e.target.files[0].name.toLowerCase().split(' ').join('-')})} \n                                        className={classes.input} id=\"poster\" name=\"poster\" type=\"file\" />\n                                          <label htmlFor=\"poster\">\n                                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                              <CloudUploadIcon />\n                                            </IconButton> \n                                         </label>\n\n                                      </Grid>\n\n                                      <Grid item xs={11}>\n                                        <TextField \n                                        value={values.fileName}\n                                        id=\"input-with-icon-grid\"\n                                        label=\"Poster for the event\"\n                                        helperText=\"Note: .png and .jpg is required\"\n                                        fullWidth\n                                          InputProps={{\n                                               readOnly: true,\n                                              }}\n                                           InputLabelProps={{\n                                                shrink: true,\n                                           }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                 <span style={{ color: \"red\" }}>\n                                               {errors.poster}\n                                         </span>\n\n                                <br />\n\n                                <Grid container spacing={1} alignItems=\"flex-end\">\n\n                                <Grid item xs={8}>\n                                      <TextField \n                                            value={values.description}\n                                            onChange={e => setValues({...values, description: e.target.value})}\n                                                id=\"description\"\n                                                name=\"description\"\n                                                label=\"Description of the Event\"\n                                                fullWidth\n                                                autoComplete\n                                                multiline\n                                            />\n                                    </Grid>\n                                   \n                                    <br/>\n                                      <span style={{ color: \"red\" }}>\n                                               {errors.description}\n                                         </span>\n\n                                    <Grid item xs={4}>\n                                            <TextField \n                                            type=\"color\"\n                                            value={values.bgColor}\n                                            onChange={e => setValues({...values, bgColor: e.target.value})}\n                                                id=\"color\"\n                                                name=\"color\"\n                                                label=\"Choose color for the display background of the event\"\n                                                fullWidth\n                                                autoComplete\n                                            />\n                                        </Grid>\n\n                                    </Grid>\n\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"outlined\"\n                                        color=\"secondary\"\n                                        className={classes.submit}\n                                    >\n                                        Add Record\n                                    </Button>\n\n                                        \n                                    </form>\n\n                                </Container>\n\n                    </Paper>\n                </DashboardHead>\n            </div>\n        )\n    \n}\n\nconst mapStateToProps = state => ({\n  announcement: state.announcement,\n  auth: state.auth,\n  errors: state.errors,\n});\n\nconst mapDispatchToProps = { updateAnnouncementHead }; \n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEventFormHead);\n","import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport UndoIcon from '@material-ui/icons/Undo';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button';\n\nimport Slide from '@material-ui/core/Slide';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport DashBoardHead from '../layouts/DashboardHead';\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\nconst Transition = props => {\n    return <Slide direction=\"up\" {...props} />\n}\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    timeFeed: {\n      float: 'right',\n      fontSize: 13\n    },\n    tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nfunction CheckRegisteredStudents(props){\n    const classes = useStyles();\n\n    // Pagination Controls addAnnouncementFalseHead\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n\n    //Filter State\n    const [filter, setFilter] = useState('');\n\n    //Data States\n    const [students, getStudents] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [ifError, setIfError] = useState(false);\n\n    // For Deleting a data in registered process\n    const [deleteModal, setDeleteModal] = useState(false);\n    const [id, setId] = useState(null);\n    const [deleted, setDeleted] = useState(false);\n    \n            //Event Handlers\n    const handleChangePage = (event, newPage) => {\n           setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n         setRowsPerPage(parseInt(event.target.value, 10));\n         setPage(0);\n     };\n\n     const handleDeleteModal = id => {\n        setId(id);\n        setDeleteModal(true);\n     }\n     const handleDeleteModalClose = _ => {\n        setDeleteModal(false);\n     }\n\n     const deleteFinal = _ => {\n          axios.delete(`/api/registeredStudents/delete/${id}`)\n          .then(res => {\n            setDeleted(true);\n            setDeleteModal(false);\n          })\n          .catch(err => console.log(err));\n     }\n\n     const handleClose = (reason, event) => {\n           if (reason === 'clickaway') {\n                  return;\n                }\n\n          setDeleted(false);\n     }\n\n     // Component Effects \n     useEffect(_ => {\n        axios.get(`/api/registeredStudents/seeRegisteredStudents/${props.match.params.activityId}/${props.match.params.activityTitle}`)\n        .then(res => {\n            getStudents(res.data);\n            setLoading(false);\n        })\n        .catch(err => {\n            if(err){\n                setLoading(false);\n                setIfError(true);\n\n            }\n        })\n     },[deleted]);\n\n\n    const rows = students.sort((a, b) => a.created_at > b.created_at ? -1 : 1);\n\n    //Empty row that says the rows for paginationaddAnnouncementFalseHead\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    // console.log(props);\n\n     return (\n              <DashBoardHead>\n\n                <FormConfirmationMsg open={deleted} onClose={handleClose} variant=\"success\" message=\"Deleted Successfully.\"  />\n\n                  <Dialog\n                   open={deleteModal}\n                   TransitionComponent={Transition}\n                   keepMounted\n                   onClose={handleDeleteModalClose}\n                   aria-labelledby=\"alert-dialog-slide-title\"\n                   aria-describedby=\"alert-dialog-slide-description\"\n                   >\n                       <DialogTitle id=\"alert-dialog-slide-title\">\n                           {\"Approved Request Activity\"}\n                        </DialogTitle>\n\n                        <DialogContent>\n\n                          <DialogContentText id=\"alert-dialog-slide-description\">\n                              Are you sure this student in no longer active at passing requiremen?\n                              </DialogContentText>\n                          </DialogContent>  \n\n                          <DialogActions>\n                            <Button onClick={deleteFinal} variant=\"outlined\" color=\"primary\">\n                              Yes\n                            </Button>\n                            <Button onClick={handleDeleteModalClose} variant=\"outlined\" color=\"secondary\">\n                              No\n                            </Button>\n                          </DialogActions>\n                   </Dialog>\n\n              <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n                <Link color=\"inherit\" href=\"/h/activityassessment\" className={classes.link}>\n                  <AssessmentIcon className={classes.icon} />\n                  Activities\n                </Link>\n\n                 <Link\n                  color=\"textPrimary\"\n                  href={``}\n                  aria-current=\"page\"\n                  className={classes.link}\n                >\n                <EventNoteIcon className={classes.icon} />\n                  Join \n                </Link>\n            </Breadcrumbs>\n\n                 <Paper className={classes.root}>\n\n                 <Grid container spacing={3}>\n\n                 <Grid item xs={8}>\n                  <TextField \n                    value={filter}\n                    onChange={e => setFilter(e.target.value)}\n                    id=\"filter\"\n                    name=\"Filter\"\n                    label=\"Search by Name\"\n                    fullWidth\n                    autoComplete\n                    variant=\"outlined\"\n                      />\n                    \n                  </Grid>\n\n                    </Grid>\n                    <br />\n                    <br />\n                            \n                        <div className={classes.tableWrapper}>\n\n                            <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Student Name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Date Registered</StyledTableCell>\n                                <StyledTableCell align=\"left\">SR-Code</StyledTableCell>\n                                <StyledTableCell align=\"left\">Department</StyledTableCell>\n                                <StyledTableCell align=\"left\">College Year</StyledTableCell>\n                                <StyledTableCell align=\"left\">Section</StyledTableCell>\n                                <StyledTableCell align=\"left\">Contact Number</StyledTableCell>\n                                <StyledTableCell align=\"left\">Actions</StyledTableCell>\n\n\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { loading \n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :  \n                                    <Fragment>\n                                     {\n                                      ifError\n                                      ?\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <span>Something went wrong. Please try again.</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :\n                                    <Fragment>\n                                    {\n                                      rows.length === 0 \n                                      ?\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <span>No registered students for this activity.</span>\n                                      </TableCell>\n                                    </TableRow>\n\n                                    :\n                                    //Data to be displayed when the data is fetched\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      .filter(row => row.studentName.toLowerCase().search(filter.toLowerCase()) !== -1 )\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.studentName}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{moment(row.created_at).format('MMMM D YYYY')}</TableCell>\n                                          <TableCell align=\"left\">{row.srCode}</TableCell>\n                                          <TableCell align=\"left\">{row.department}</TableCell>\n                                          <TableCell align=\"left\">{row.yr}</TableCell>\n                                          <TableCell align=\"left\">{row.section}</TableCell>\n                                          <TableCell align=\"left\">{row.contactNumber}</TableCell>\n\n                                          <TableCell align=\"left\">\n\n                                          {\n                                            row.status === 'pending'\n                                            ?\n                                            <Fragment>\n                                              <Tooltip title=\"Delete Request\" placement=\"top\">\n                                                 <IconButton onClick={_ => handleDeleteModal(row.id)} aria-label=\"Delete\" color=\"secondary\">\n                                                  <CancelIcon />\n                                                </IconButton>\n                                              </Tooltip> \n                                              </Fragment>\n                                              :\n                                              <Fragment>\n                                              <p>\n                                              Student is complete in requirements\n                                              </p>\n                                              </Fragment>\n                                          }\n\n                                          </TableCell>\n                                        </TableRow>\n                                      ))\n\n                                    }\n                                    </Fragment>\n                                    \n                                    \n                                    }\n                                    </Fragment>\n                                    \n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n                        </div>\n\n\n                     </Paper>\n\n              </DashBoardHead>\n      )\n\n}\n\nexport default CheckRegisteredStudents;","import React, { useState, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport clsx from 'clsx';\nimport axios from 'axios';\n//Redux components\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { withRouter } from \"react-router\";\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport EventIcon from '@material-ui/icons/Event';\n\n//Link Components\nimport ListItemLink from './ListItemLink';\n\nconst drawerWidth = 240;\n\nconst Transition = props => {\n    return <Slide direction=\"up\" {...props} />\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\n//Component\n//The argument of the DashboardAdmin if for redux component in react hooks\nfunction DashboardAdmin(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    //States\n    const [open, setOpen] = useState(true);\n    const [modalOpen, setModalOpen] = useState(false);\n\n    // Count of the Notification \n    const [count, setCount] = useState(0);\n\n    // Updating status state \n    const [notifUpdated, setNotifUpdated] = useState(false);\n\n    // onclick menu toggle\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const onModalLogoutClick = _ => {\n        setModalOpen(true)\n    }\n\n    const onHandleLogoutClickClose = _ => {\n        setModalOpen(false)\n    }\n\n    const onLogOutClick = e => {\n        props.logoutUser();\n    }\n\n    const handleUpdateNotif = notif => {\n        const read = { notif };\n\n        axios.post('/api/requestactivities/updatecountrequestactivitiesadmin', read)\n        .then(res => {\n            setNotifUpdated(true);\n        })\n        .catch(err => console.log(err));\n    }\n\n    //Component effect\n    useEffect(_ => {\n\n        axios.get('/api/requestactivities/countrequestactivitiesadmin')\n        .then(res => setCount(res.data.count))\n        .catch(err => console.log(err));\n\n    },[count])\n\n    return (\n        <div className={classes.root}>\n            {/* Modal  */}\n            <Dialog\n                open={modalOpen}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={onHandleLogoutClickClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    {\"Logging Out\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Are you you want to Logout?\n                        </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onHandleLogoutClickClose} variant=\"outlined\" color=\"primary\">\n                        Cancel\n                        </Button>\n                    <Button onClick={onLogOutClick} variant=\"outlined\" color=\"secondary\">\n                        Logout\n                               </Button>\n                </DialogActions>\n            </Dialog>\n\n            {/* Dashboard  */}\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar style={{ backgroundColor: \"#820101\" }}>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        SOA Web Portal\n          </Typography>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n                open={open}\n            >\n                {/* SideNav Drawer Components */}\n                <div className={classes.toolbar}>\n\n                    <Typography>SOA Assistant Director</Typography>\n\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <MenuIcon /> : <MenuIcon />}\n                    </IconButton>\n                </div>\n\n                <Divider />\n                {/* Calendars and Events */}\n                <List>\n\n                    <ListItemLink \n                        to=\"/ad\"\n                        primary=\"Calendar\"\n                        icon={<EventIcon />}\n                    />\n\n                    <ListItemLink \n                        to=\"/ad/announceevent\"\n                        primary=\"Announce Events\"\n                        icon={<AnnouncementIcon />}\n                    />\n                            \n                </List>\n                    \n                    <Divider />\n                {/* Organization List, Accounts registration */}\n                <List>\n\n                    <ListItemLink \n                        to=\"/ad/organizationlist\"\n                        primary=\"Organization List\"\n                        icon={<FormatListBulletedIcon />}\n                    />\n\n                </List>\n\n                <Divider />\n                {/* Requested Activities and file uploading */}\n                <List>\n\n                    <ListItemLink \n                        handleClick={_ => handleUpdateNotif('read1')}\n                        to=\"/ad/requestedactivities\"\n                        primary=\"Requested Activities\"\n                        icon={<ListAltIcon />}\n                        count={count}\n                    />\n{/* \n                    This component will be just one for :\n                    -Uploading of Files for student organizations and students to download\n                    - POsting and Approving of Reports submitted by Student Organization */}\n\n                    <ListItemLink \n                        to=\"/ad/filesandreports\"\n                        primary=\"Files and Reports\"\n                        icon={<PublishIcon />}\n                    />\n\n                    <Divider />\n\n                    {/* ID Replacement Components  */}\n\n                    <ListItemLink \n                        to=\"/ad/idreplacement\"\n                        primary=\"ID Replacement\"\n                        icon={<AssignmentIndIcon />}\n                    />\n\n                </List>\n\n                <Divider />\n\n                {/* Logout Option */}\n                <List>\n                    <ListItem style={{ color: \"red\" }} button onClick={onModalLogoutClick}>\n                        <ListItemIcon>\n                            <ExitToAppIcon color=\"error\" />\n                            </ListItemIcon>\n                        <ListItemText>Logout</ListItemText>\n                    </ListItem>\n                </List>\n            </Drawer>\n\n            {/* for the main content */}\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {props.children}\n            </main>\n        </div>\n    );\n}\n\nDashboardAdmin.propTypes = {\n    auth: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n};\n\n//Redux State connection \nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n//Dipatch proptypes(React Hooks) \nconst mapDispatchToProps = { logoutUser };\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardAdmin));\n\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\n\n//Calendar Components\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClic\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n}));\n\nfunction AdminIndex(props){\n        const classes = useStyles();\n\n            const [events, setEvents] = useState([]);\n\n            useEffect(_ => {\n                axios.get('/api/announcements/')\n                .then(res => setEvents(res.data))\n                .catch(err => console.log(err));\n            },[]);\n\n  const dateClick = arg => {\n        // console.log(arg);\n        props.history.push(`/ad/calendar/listOfEvents/${arg.dateStr}`)\n    }\n\n\n    const renderEventContent = eventInfo => (\n            <Fragment>     \n        {/*console.log(eventInfo) */}\n        \n            <a href={`/ad/calendar/${eventInfo.event._def.publicId}`}>\n              <span style={{color: 'white', backgroundColor:`${eventInfo.backgroundColor}`}}>\n               \n               <b>{eventInfo.timeText}</b> &nbsp;\n                <span>{eventInfo.event.title}</span>\n\n               </span>\n            </a>\n            </Fragment>\n        );\n    \n        return (\n            <div>\n                <DashboardAdmin>\n                    <Paper className={classes.root}>\n\n                        <FullCalendar\n                            plugins={[ dayGridPlugin , interactionPlugin ]}\n                            initialView=\"dayGridMonth\"\n                            weekends={true}\n                            events={events}\n                            eventContent={renderEventContent}\n                            themeSystem='bootstrap'\n                            dateClick={dateClick}\n                          />\n\n                    </Paper>\n                </DashboardAdmin>\n            </div>\n        )\n    \n}\n\nexport default AdminIndex;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass OrgAddFormSuccessMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant={this.props.variant}\n            message={this.props.message}\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default OrgAddFormSuccessMsg;","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { addAnnouncementFalse, updateAnnouncementFalse, deleteAnnouncement, deleteAnnouncementFalse } from '../../actions/announcementActions';\n\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Button from '@material-ui/core/Button';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Slide from '@material-ui/core/Slide';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\nconst Transition = props => {\n    return <Slide direction=\"up\" {...props} />\n}\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\n\nconst styles = makeStyles(theme => ({\n    root: {\n        // ...theme.mixins.gutters(),\n        // paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n     root2: {\n    width: '100%',\n    paddingBottom: '2 0px',\n      flexGrow: 1,\n  },\n    link: {\n    display: 'flex',\n      },\n       icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n      },\n       formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nfunction AnnounceEvents(props){\n        const classes = styles();\n\n    /* States */\n      \n      // Pagination Controls \n      const [page, setPage] = useState(0);\n      const [rowsPerPage, setRowsPerPage] = useState(5);\n\n      const [id, setId] = useState();\n\n      const [events, getEvents] = useState([]);\n      const [loading, setLoading] = useState(true);\n      const [ifError, setIfError] = useState(false);\n\n      //Confirmation States\n      const [added, setAdded] = useState(false);  \n      const [updated, setUpdate] = useState(false);\n      const [deleted, setDeleted] = useState(false);\n\n      //Delete modal State\n      const [deleteModal, openDeleteModal] = useState(false);\n\n    /* Event Handlers */\n        //Getting the pages, Material UI Funcs\n          const handleChangePage = (event, newPage) => {\n            setPage(newPage);\n          };\n\n          const handleChangeRowsPerPage = event => {\n            setRowsPerPage(parseInt(event.target.value, 10));\n            setPage(0);\n          };\n\n            // Event for openAdded state \n        const handleClose = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setAdded(false);\n                props.addAnnouncementFalse();\n          };\n\n                // Event for openAdded state \n        const handleCloseUpdate = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setUpdate(false);\n                props.updateAnnouncementFalse();\n          };\n\n          const handleCloseDelete = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setDeleted(false);\n                props.deleteAnnouncementFalse();\n          };\n\n          //Delete button function\n        const handleDelete = id => {\n          setId(id);\n\n          openDeleteModal(true);\n        }\n\n        //Final action for the delete action\n        const deleteFinal = _ => {\n          props.deleteAnnouncement(id);\n\n          openDeleteModal(false);\n\n        }\n\n        const handleDeleteModalClose = _ => {\n          openDeleteModal(false)\n        }\n\n        useEffect(_ => {\n\n        axios.get('/api/announcements/')\n        .then(res => {\n          getEvents(res.data);\n          setLoading(false);\n        })\n        .catch(err => {\n          if(err) \n            setIfError(true)\n        })\n\n        },[props.announcement.added, props.announcement.updated, props.announcement.deleted]);\n\n    /* Component Effect */\n    useEffect(_ => {\n      if(props.announcement.added)\n          setAdded(true);\n\n      setTimeout(function(){ props.addAnnouncementFalse() }, 6000);\n\n\n    },[props.announcement.added]);\n\n    useEffect(_ => {\n       if(props.announcement.updated)\n          setUpdate(true)\n\n      setTimeout(function(){ props.updateAnnouncementFalse() }, 6000);\n\n    },[props.announcement.updated])\n\n    useEffect(_ => {\n       if(props.announcement.deleted)\n          setDeleted(true)\n\n      setTimeout(function(){ props.deleteAnnouncementFalse() }, 6000);\n\n    },[props.announcement.deleted])\n\n    const rows = events.sort((a, b) => a.created_at > b.created_at ? -1 : 1);\n\n    // console.log(rows);\n    //Empty row that says the rows for pagination\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n        return (\n            <div>\n                <DashboardAdmin>\n\n                 {/* Modal body for the delete */}\n\n                   <Dialog\n                   open={deleteModal}\n                   TransitionComponent={Transition}\n                   keepMounted\n                   onClose={handleDeleteModalClose}\n                   aria-labelledby=\"alert-dialog-slide-title\"\n                   aria-describedby=\"alert-dialog-slide-description\"\n                   >\n                       <DialogTitle id=\"alert-dialog-slide-title\">\n                           {\"Delete Announcement\"}\n                        </DialogTitle>\n\n                        <DialogContent>\n\n                          <DialogContentText id=\"alert-dialog-slide-description\">\n                              Are you sure to delete this announcement?\n                              </DialogContentText>\n                          </DialogContent>  \n\n                          <DialogActions>\n                            <Button onClick={deleteFinal} variant=\"outlined\" color=\"primary\">\n                              Yes\n                            </Button>\n                            <Button onClick={handleDeleteModalClose} variant=\"outlined\" color=\"secondary\">\n                              No\n                            </Button>\n                          </DialogActions>\n                   </Dialog>\n\n                <FormConfirmationMsg open={added} onClose={handleClose} variant=\"success\" message=\"Announcement Added.\"  />\n                <FormConfirmationMsg open={updated} onClose={handleCloseUpdate} variant=\"success\" message=\"Announcement Update Successfully.\"  />\n                <FormConfirmationMsg open={deleted} onClose={handleCloseDelete} variant=\"success\" message=\"Announcement Delete Successfully.\"  />\n\n      {/* Button that will redirect to registering a account*/}\n                 <Button \n                        href=\"/ad/announceevent/addevent\"\n                        className={classes.button}\n                        variant=\"outlined\" \n                        color=\"secondary\"\n                        >\n                        Add Event\n                    </Button>\n                    <br />\n                    <br />  \n\n                    <Paper className={classes.root}>\n                        \n                        <div className={classes.tableWrapper}>\n\n                            <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Event title</StyledTableCell>\n                                <StyledTableCell align=\"left\">Date of Event</StyledTableCell>\n                                <StyledTableCell align=\"left\">Time of Event</StyledTableCell>\n                                <StyledTableCell align=\"left\">Venue of the Event</StyledTableCell>\n                                <StyledTableCell align=\"left\">Announce by</StyledTableCell>\n                                <StyledTableCell align=\"left\">Action</StyledTableCell>\n\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { loading \n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :  \n                                    <Fragment>\n                                     {\n                                      ifError\n                                      ?\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <span>Something went wrong. Please try again.</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :\n                                    //Data to be displayed when the data is fetched\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.title}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{moment(row.dateDate).format('MMMM D YYYY')}</TableCell>\n                                          <TableCell align=\"left\">{moment(row.date).format('LT')}</TableCell>\n                                          <TableCell align=\"left\">{row.venue}</TableCell>\n                                          <TableCell align=\"left\">{row.setBy}</TableCell>\n                                          <TableCell align=\"left\">\n\n                                                <Tooltip title=\"Update\" placement=\"top\">\n                                                 <IconButton href={`/ad/announceevent/updateevent/${row.id}`} aria-label=\"edit\" color=\"primary\">\n                                                  <EditIcon />\n                                                </IconButton>\n                                              </Tooltip>   \n\n                                              <Tooltip title=\"Delete\" placement=\"top\">\n                                                 <IconButton onClick={_ => handleDelete(row.id)} aria-label=\"edit\" color=\"secondary\">\n                                                  <DeleteIcon />\n                                                </IconButton>\n                                              </Tooltip>   \n\n                                          </TableCell>\n                                        </TableRow>\n                                      ))\n                                    \n                                    }\n                                    </Fragment>\n                                    \n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n                        </div>\n\n                    </Paper>\n\n                </DashboardAdmin>\n            </div>\n        )\n    \n}\n\nconst mapStateToProps = state => ({\n  announcement: state.announcement,\n});\n\nconst mapDispatchToProps = { addAnnouncementFalse, updateAnnouncementFalse, deleteAnnouncement, deleteAnnouncementFalse }; \n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnnounceEvents);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addAnnouncement } from '../../actions/announcementActions';\nimport moment from 'moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\nimport Container from '@material-ui/core/Container';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker,} from '@material-ui/pickers';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\n\n// Object Styles for the components \nconst styles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n         ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n      },\n\n      paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n      closeIcon: {\n          float: 'right',\n          color: 'red'\n      },\n      formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n      submit:{\n        marginTop: theme.spacing(3),\n      },\n      close: {\n          padding: theme.spacing() / 2,\n      },\n         link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n    input: {\n    display: 'none',\n  },\n}));\n\n\nfunction AddEventForm(props){\n        const classes = styles();\n\n        /* States*/\n\n        const [values, setValues] = useState({\n            title: '',\n            venue: '',\n            description: '',\n            backgroundColor:'#000000',\n\n        });\n\n        const [poster, getPoster] = useState({\n            poster: null,\n            fileName: ''\n        });\n\n         const [selectedDate, setSelectedDate] = useState(new Date());\n         const [selectedTime, setSelectedTime] = useState(new Date());\n\n         const [errors, getErrors] = useState({});\n        \n        /* Event Handlers*/\n        const handleDate = date => {\n            setSelectedDate(date);\n        }\n\n        const handleTime = time => {\n            setSelectedTime(time);\n        }\n\n\n        const handleSubmit = e => {\n            e.preventDefault();\n\n            // const fullDate = `${selectedDate.getFullYear()}-${selectedDate.getMonth() + 1}-${selectedDate.getDate()}`;\n            const dateDate = moment(selectedDate).format('YYYY-MM-DD');\n            const dateTime = moment(selectedTime).format('HH:mm:ss');       \n\n            const date = `${dateDate} ${dateTime}`;\n\n            const newAnnouncement = { \n                ...values,\n                ...poster,\n                date,\n                dateDate,\n                dateTime,\n                setBy: 'SOA Admin'\n            }\n\n            let fd = new FormData();\n            fd.append('poster', poster.poster);\n            fd.append('title', values.title);\n            fd.append('venue', values.venue);\n            fd.append('description', values.description);\n            fd.append('fileName', poster.fileName);\n            fd.append('backgroundColor', values.backgroundColor);\n            fd.append('date', date);\n            fd.append('dateDate', dateDate);\n            fd.append('dateTime', dateTime);\n            fd.append('setBy', 'SOA Admin');\n\n            // console.log(newAnnouncement);\n            // console.log(_formData);\n            props.addAnnouncement(fd);\n\n        }\n\n        // Component Effect for a successful Adding of Announcement\n        useEffect(_ => {\n           if(props.announcement.added)\n              props.history.push('/ad/announceevent');\n\n        },[props.announcement.added]);\n\n        // Component Effect for the errors\n        useEffect(_ => {\n          if(props.errors)\n              getErrors(props.errors)\n        },[props.errors])\n     \n        return (\n            <div>\n                <DashboardAdmin>\n\n                <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n                    <Link color=\"inherit\" href=\"/ad/announceevent\" className={classes.link}>\n                      <ViewListIcon className={classes.icon} />\n                      Menu\n                    </Link>\n\n                    <Link\n                      color=\"textPrimary\"\n                      href=\"/ad/announceevent/addevent\"\n                      aria-current=\"page\"\n                      className={classes.link}\n                    >\n                    <ListAltIcon className={classes.icon} />\n                      Add\n                    </Link>\n                </Breadcrumbs>\n\n                    <Paper className={classes.root}>\n                          \n                                <Container maxWidth=\"lg\">\n\n                                  <Typography variant=\"h4\" align=\"center\">\n                                        Announce Event Form\n                                    </Typography>\n                                      <br></br>\n\n                                    <form noValidate onSubmit={handleSubmit} enctype=\"multipart/form-data\">\n\n                                    <Typography variant=\"h6\">\n                                     Input the details needed.\n                                    </Typography>\n\n                                        <Grid item xs={12}>\n                                            <TextField \n                                            value={values.title}\n                                            onChange={e => setValues({...values, title: e.target.value})}\n                                                id=\"title\"\n                                                name=\"title\"\n                                                label=\"Announcement/Event Title\"\n                                                fullWidth\n                                                autoComplete\n                                            />\n                                        </Grid>\n                                        <span style={{ color: \"red\" }}>\n                                               {errors.title}\n                                         </span>\n                                        <br />\n                                         <Grid item xs={12}>\n                                            <FormControl fullWidth className={classes.formControl}>\n                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                        <KeyboardDatePicker\n                                                          value={selectedDate}\n                                                          onChange={handleDate}\n                                                          disableToolbar\n                                                          variant=\"inline\"\n                                                          format=\"yyyy-MM-dd\"\n                                                          margin=\"normal\"\n                                                          id=\"date-picker-inline\"\n                                                          label=\"Date of the event\"\n                                                          KeyboardButtonProps={{\n                                                            'aria-label': 'change date',\n                                                          }}\n                                                        />\n                                                </MuiPickersUtilsProvider>\n                                          </FormControl>\n                                        </Grid>\n                                         <span style={{ color: \"red\" }}>\n                                               {errors.date}\n                                         </span>\n                                        \n                                        <br />\n\n                                         <Grid item xs={12}>\n                                            <FormControl fullWidth className={classes.formControl}>\n                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                    <KeyboardTimePicker\n                                                     format= \"hh:mm a\"\n                                                      value={selectedTime}\n                                                      onChange={handleTime}\n                                                      margin=\"normal\"\n                                                      id=\"time-picker\"\n                                                      label=\"Time picker\"\n                                                      KeyboardButtonProps={{\n                                                        'aria-label': 'change time',\n                                                      }}\n                                                      keyboardIcon={<AccessTimeIcon />}\n                                                    />\n                                                </MuiPickersUtilsProvider>\n                                            </FormControl>\n                                         </Grid>\n                                         <br/>\n\n                                        <Grid item xs={12}>\n                                            <TextField \n                                                value={values.venue}\n                                                onChange={e => setValues({...values, venue: e.target.value})}\n                                                id=\"venue\"\n                                                name=\"venue\"\n                                                label=\"Where the event will happen\"\n                                                fullWidth\n                                                autoComplete\n                                            />\n                                        </Grid>\n                                         <span style={{ color: \"red\" }}>\n                                               {errors.venue}\n                                         </span>\n                                        <br />\n\n                                <Grid container spacing={1} alignItems=\"flex-end\">\n\n                                    <Grid item xs={1}>\n\n                                      {/* \n                                         onChange={e => setObj({...obj, file: e.target.files[0], fileName: e.target.files[0].name})} \n\n                                        value={obj.fileName}\n\n                                      */}\n                                        <input\n                                        onChange={e => getPoster({...poster, poster: e.target.files[0], fileName: e.target.files[0].name.toLowerCase().split(' ').join('-')})} \n                                        className={classes.input} id=\"poster\" name=\"poster\" type=\"file\" />\n                                          <label htmlFor=\"poster\">\n                                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                              <CloudUploadIcon />\n                                            </IconButton>\n                                         </label>\n\n                                      </Grid>\n\n                                      <Grid item xs={11}>\n                                        <TextField \n                                        value={poster.fileName}\n                                        id=\"input-with-icon-grid\"\n                                        label=\"Poster for the event\"\n                                        helperText=\"Note: .png and .jpg is required\"\n                                        fullWidth\n                                          InputProps={{\n                                               readOnly: true,\n                                              }}\n                                           InputLabelProps={{\n                                                shrink: true,\n                                           }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                 <span style={{ color: \"red\" }}>\n                                               {errors.poster}\n                                         </span>\n\n                                <br />\n\n                                <Grid container spacing={1} alignItems=\"flex-end\">\n\n                                <Grid item xs={8}>\n                                      <TextField \n                                            value={values.description}\n                                            onChange={e => setValues({...values, description: e.target.value})}\n                                                id=\"description\"\n                                                name=\"description\"\n                                                label=\"Description of the Event\"\n                                                fullWidth\n                                                autoComplete\n                                                multiline\n                                            />\n                                    </Grid>\n                                   \n                                    <br/>\n                                      <span style={{ color: \"red\" }}>\n                                               {errors.description}\n                                         </span>\n\n                                    <Grid item xs={4}>\n                                            <TextField \n                                            type=\"color\"\n                                            value={values.backgroundColor}\n                                            onChange={e => setValues({...values, backgroundColor: e.target.value})}\n                                                id=\"color\"\n                                                name=\"color\"\n                                                label=\"Choose color for the display background of the event\"\n                                                fullWidth\n                                                autoComplete\n                                            />\n                                        </Grid>\n\n                                    </Grid>\n\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"outlined\"\n                                        color=\"secondary\"\n                                        className={classes.submit}\n                                    >\n                                        Add Record\n                                    </Button>\n\n                                        \n                                    </form>\n\n                                </Container>\n\n                    </Paper>\n                </DashboardAdmin>\n            </div>\n        )\n    \n}\n\nconst mapStateToProps = state => ({\n  announcement: state.announcement,\n  errors: state.errors,\n});\n\nconst mapDispatchToProps = { addAnnouncement }; \n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEventForm);\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { updateAnnouncement } from '../../actions/announcementActions';\nimport moment from 'moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker,} from '@material-ui/pickers';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\n// Object Styles for the components \nconst styles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n         ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n      },\n\n      paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n      closeIcon: {\n          float: 'right',\n          color: 'red'\n      },\n      formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n      submit:{\n        marginTop: theme.spacing(3),\n      },\n      close: {\n          padding: theme.spacing() / 2,\n      },\n         link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n    input: {\n    display: 'none',\n  },\n}));\n\n\nfunction UpdateEventForm(props){\n        const classes = styles();\n\n        /* States*/\n\n        const [values, setValues] = useState({\n            title: '',\n            venue: '',\n            description: '',\n            bgColor:'',\n\n        });\n\n        const [poster, getPoster] = useState({\n            poster: null,\n            fileName: ''\n        });\n\n         const [selectedDate, setSelectedDate] = useState(new Date());\n         const [selectedTime, setSelectedTime] = useState(new Date());\n\n         const [errors, getErrors] = useState({});\n        \n         const [errorAll, setErrorAll] = useState(false);\n\n        /* Event Handlers*/\n        const handleDate = date => {\n            setSelectedDate(date);\n        }\n\n        const handleTime = time => {\n            setSelectedTime(time);\n        }\n\n        const handleSubmit = e => {\n            e.preventDefault();\n\n            // const fullDate = `${selectedDate.getFullYear()}-${selectedDate.getMonth() + 1}-${selectedDate.getDate()}`;\n            const dateDate = moment(selectedDate).format('YYYY-MM-DD');\n            const dateTime = moment(selectedTime).format('HH:mm:ss');       \n\n            const date = `${dateDate} ${dateTime}`;\n\n            const newAnnouncement = { \n                ...values,\n                date,\n                dateDate,\n                dateTime,\n                setBy: 'SOA Admin'\n            }\n\n             const fd = new FormData();\n            fd.append('poster', poster.poster);\n            fd.append('title', values.title);\n            fd.append('venue', values.venue);\n            fd.append('description', values.description);\n            fd.append('fileName', poster.fileName);\n            fd.append('bgColor', values.bgColor);\n            fd.append('date', date);\n            fd.append('dateDate', dateDate);\n            fd.append('dateTime', dateTime);\n            fd.append('setBy', 'SOA Admin');\n\n            // console.log(newAnnouncement);\n            // console.log(_formData);\n            props.updateAnnouncement(props.match.params.id, fd);\n\n        }\n\n        // Closing Event for the Error message \n        const handleClose = (event, reason) => {\n          if (reason === 'clickaway') {\n            return;\n          }\n\n          setErrorAll(false);\n        };\n\n        useEffect(_ => {\n          axios.get(`/api/announcements/${props.match.params.id}`)\n          .then(res => {\n            setValues({\n            title: res.data.title,\n            venue: res.data.venue,\n            description: res.data.description,\n            bgColor: res.data.backgroundColor,\n            // fileName: res.data.fileName,\n            // poster: res.data.poster\n\n            });\n\n            setSelectedDate(res.data.date);\n            setSelectedTime(res.data.date);\n          }\n\n            )\n          .catch(err => err)\n        },[]);\n\n        // Component Effect for a successful Adding of Announcement\n        useEffect(_ => {\n           if(props.announcement.updated)\n              props.history.push('/ad/announceevent');\n\n        },[props.announcement.updated]);\n\n        // Component Effect for the errors\n        useEffect(_ => {\n          if(props.errors)\n              getErrors(props.errors)\n\n          if(props.errors.all)\n            setErrorAll(true)\n        },[props.errors])\n\n     \n        return (\n            <div>\n                <DashboardAdmin>\n                <FormConfirmationMsg open={errorAll} onClose={handleClose} variant=\"error\" message={errors.all}/>\n\n                <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n                    <Link color=\"inherit\" href=\"/ad/announceevent\" className={classes.link}>\n                      <ViewListIcon className={classes.icon} />\n                      Menu\n                    </Link>\n\n                    <Link\n                      color=\"textPrimary\"\n                      href=\"/ad/announceevent/addevent\"\n                      aria-current=\"page\"\n                      className={classes.link}\n                    >\n                    <ListAltIcon className={classes.icon} />\n                      Add\n                    </Link>\n                </Breadcrumbs>\n\n                    <Paper className={classes.root}>\n                          \n                                <Container maxWidth=\"lg\">\n\n                                  <Typography variant=\"h4\" align=\"center\">\n                                        Announce Event Form\n                                    </Typography>\n                                      <br></br>\n\n                                    <form noValidate onSubmit={handleSubmit} encType=\"multipart/form-data\">\n\n                                    <Typography variant=\"h6\">\n                                     Input the details needed.\n                                    </Typography>\n\n                                        <Grid item xs={12}>\n                                            <TextField \n                                            value={values.title}\n                                            onChange={e => setValues({...values, title: e.target.value})}\n                                                id=\"title\"\n                                                name=\"title\"\n                                                label=\"Announcement/Event Title\"\n                                                fullWidth\n                                                autoComplete\n                                            />\n                                        </Grid>\n                                        <span style={{ color: \"red\" }}>\n                                               {errors.title}\n                                         </span>\n                                        <br />\n                                         <Grid item xs={12}>\n                                            <FormControl fullWidth className={classes.formControl}>\n                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                        <KeyboardDatePicker\n                                                          value={selectedDate}\n                                                          onChange={handleDate}\n                                                          disableToolbar\n                                                          variant=\"inline\"\n                                                          format=\"yyyy-MM-dd\"\n                                                          margin=\"normal\"\n                                                          id=\"date-picker-inline\"\n                                                          label=\"Date of the event\"\n                                                          KeyboardButtonProps={{\n                                                            'aria-label': 'change date',\n                                                          }}\n                                                        />\n                                                </MuiPickersUtilsProvider>\n                                          </FormControl>\n                                        </Grid>\n                                         <span style={{ color: \"red\" }}>\n                                               {errors.date}\n                                         </span>\n                                        \n                                        <br />\n\n                                         <Grid item xs={12}>\n                                            <FormControl fullWidth className={classes.formControl}>\n                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                    <KeyboardTimePicker\n                                                     format= \"hh:mm a\"\n                                                      value={selectedTime}\n                                                      onChange={handleTime}\n                                                      margin=\"normal\"\n                                                      id=\"time-picker\"\n                                                      label=\"Time picker\"\n                                                      KeyboardButtonProps={{\n                                                        'aria-label': 'change time',\n                                                      }}\n                                                      keyboardIcon={<AccessTimeIcon />}\n                                                    />\n                                                </MuiPickersUtilsProvider>\n                                            </FormControl>\n                                         </Grid>\n                                         <br/>\n\n                                        <Grid item xs={12}>\n                                            <TextField \n                                                value={values.venue}\n                                                onChange={e => setValues({...values, venue: e.target.value})}\n                                                id=\"venue\"\n                                                name=\"venue\"\n                                                label=\"Where the event will happen\"\n                                                fullWidth\n                                                autoComplete\n                                            />\n                                        </Grid>\n                                         <span style={{ color: \"red\" }}>\n                                               {errors.venue}\n                                         </span>\n                                        <br />\n\n                                <Grid container spacing={1} alignItems=\"flex-end\">\n\n                                    <Grid item xs={1}>\n\n                                      {/* \n                                         onChange={e => setObj({...obj, file: e.target.files[0], fileName: e.target.files[0].name})} \n\n                                        value={obj.fileName}\n\n                                      */}\n                                        <input\n                                        onChange={e => getPoster({...poster, poster: e.target.files[0], fileName: e.target.files[0].name})} \n                                        className={classes.input} id=\"poster\" name=\"poster\" type=\"file\" />\n                                          <label htmlFor=\"poster\">\n                                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                              <CloudUploadIcon />\n                                            </IconButton> \n                                         </label>\n\n                                      </Grid>\n\n                                      <Grid item xs={11}>\n                                        <TextField \n                                        value={poster.fileName}\n                                        id=\"input-with-icon-grid\"\n                                        label=\"Poster for the event\"\n                                        helperText=\"Note: .png and .jpg is required\"\n                                        fullWidth\n                                          InputProps={{\n                                               readOnly: true,\n                                              }}\n                                           InputLabelProps={{\n                                                shrink: true,\n                                           }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                 <span style={{ color: \"red\" }}>\n                                               {errors.poster}\n                                         </span>\n\n                                <br />\n\n                                <Grid container spacing={1} alignItems=\"flex-end\">\n\n                                <Grid item xs={8}>\n                                      <TextField \n                                            value={values.description}\n                                            onChange={e => setValues({...values, description: e.target.value})}\n                                                id=\"description\"\n                                                name=\"description\"\n                                                label=\"Description of the Event\"\n                                                fullWidth\n                                                autoComplete\n                                                multiline\n                                            />\n                                    </Grid>\n                                   \n                                    <br/>\n                                      <span style={{ color: \"red\" }}>\n                                               {errors.description}\n                                         </span>\n\n                                    <Grid item xs={4}>\n                                            <TextField \n                                            type=\"color\"\n                                            value={values.bgColor}\n                                            onChange={e => setValues({...values, bgColor: e.target.value})}\n                                                id=\"color\"\n                                                name=\"color\"\n                                                label=\"Choose color for the display background of the event\"\n                                                fullWidth\n                                                autoComplete\n                                            />\n                                        </Grid>\n\n                                    </Grid>\n\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"outlined\"\n                                        color=\"secondary\"\n                                        className={classes.submit}\n                                    >\n                                        Add Record\n                                    </Button>\n\n                                        \n                                    </form>\n\n                                </Container>\n\n                    </Paper>\n                </DashboardAdmin>\n            </div>\n        )\n    \n}\n\nconst mapStateToProps = state => ({\n  announcement: state.announcement,\n  errors: state.errors,\n});\n\nconst mapDispatchToProps = { updateAnnouncement }; \n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateEventForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass OrgAddFormSuccessMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant=\"success\"\n            message=\"Organization Added.\"\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default OrgAddFormSuccessMsg;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass OrgUpdateFormSuccessMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant=\"success\"\n            message=\"Organization Updated.\"\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default OrgUpdateFormSuccessMsg;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass OrgListAdminDeleteMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant=\"success\"\n            message=\"Organization Deleted.\"\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default OrgListAdminDeleteMsg;","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\n\nimport { getOrgDesc, deleteOrgDesc } from '../../actions/orgDescActions';\n\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\nimport OrgAddFormSuccessMsg from './OrgAddFormSuccessMsg';\nimport OrgUpdateFormSuccessMsg from './OrgUpdateFormSuccessMsg';\nimport OrgListAdminDeleteMsg from './OrgListAdminDeleteMsg';\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n     root2: {\n    width: '100%',\n    paddingBottom: '2 0px',\n      flexGrow: 1,\n  },\n    reportButton: {\n    paddingTop:15,\n  },\n   formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n});\n\nfunction OrgListAdmin(props){\n    const classes = props;\n\n    //////////States/////////////\n      // Pagination Controls \n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    //Campus fetching states\n  const [campuses, getCampuses] = useState([]);\n  const [loadingCampuses, setLoadingCampuses] = useState(true);\n\n    // Search State \nconst [searchCampus, setSearchCampus] = useState('');\nconst [searchDept, setSearchDept] = useState('');\n\n// Data Table Loading\nconst [loading, setLoading] = useState(true);\n\n//Success Message state\nconst [open, setOpen] = useState(false);\nconst [openDelete, setOpenDelete] = useState(false);\nconst [openUpdate, setOpenUpdate] = useState(false);\n\n  /////////////Evente Handlers/////////////////\n\n  //Getting the pages, Material UI Funcs\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\nconst handleChangeCampuses = e => {\n    setSearchCampus(e.target.value);\n};\n\nconst handleChangeDept = e => {\n    setSearchDept(e.target.value);\n};\n\n const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleCloseDelete = (event, reason) => {\n    if(reason === 'clickaway'){\n      return;\n    }\n    setOpenDelete(false)\n  };\n\n  const handleCloseUpdate = (event, reason) => {\n    if(reason === 'clickaway'){\n      return;\n    }\n    setOpenUpdate(false);\n  };\n\n  // Event for deleting a organization by specific id \nconst deleteOrganization = id => {\n  if(window.confirm(\"Are you sre to delete this organization?\")){\n      props.deleteOrgDesc(id);\n      setOpenDelete(true)\n  }\n};\n\n// Component Effects \n\n// useEffect for getting the campuses\nuseEffect( _ => {\n\n    const id = setInterval( _ => {\n        (async _ => {\n            const res = await axios.get('/api/campuses');\n            getCampuses(res.data);\n            setLoadingCampuses(false)\n        })();\n    }, 2000)\n\n    return _ => {\n        clearInterval(id);\n    }\n\n},[]);\n\n// UseEffect for getting the organization records \nuseEffect( _ => {\n\n    const id = setInterval( _ => {\n\n        props.getOrgDesc();\n        setLoading(false)\n\n    }, 2000)\n\n    return _ => {\n        clearInterval(id);\n    }\n\n},[]);\n\nuseEffect( _ => {\n    if(props.orgDesc.added)\n        setOpen(true)\n},[props.orgDesc.added]);\n\nuseEffect( _ => {\n  if(props.orgDesc.updated)\n      setOpenUpdate(true)\n},[props.orgDesc.updated]);\n\n  //Array of the reports in the lost item reports \n  //Amd filters it by chosen campus\n  const rows = props.orgDesc.records.sort((a, b) => (a.created_at > b.created_at ? -1 : 1))\n    .filter(row => row.campus === searchCampus)\n\n  //Empty row that says the rows for pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n        return (\n            <div>\n                <DashboardAdmin>\n\n                <OrgAddFormSuccessMsg open={open} onClose={handleClose} />\n                <OrgUpdateFormSuccessMsg open={openUpdate} onClose={handleCloseUpdate} />\n                <OrgListAdminDeleteMsg open={openDelete} onClose={handleCloseDelete} />\n\n                    <Button \n                        href=\"/ad/organizationlist/addrecord\"\n                        className={classes.reportButton} \n                        variant=\"outlined\" \n                        color=\"secondary\"\n                        >\n                        Add Record\n                    </Button>\n                    &nbsp;\n                    <Button \n                        href=\"/ad/organizationlist/accountlist\"\n                        className={classes.reportButton} \n                        variant=\"outlined\" \n                        color=\"primary\"\n                        >\n                        Account List\n                    </Button>\n\n                    <br/>\n                    <br/>\n\n                    {/* Form Filters */} \n                    <Paper className={classes.root2}>\n\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6}>\n                             <FormControl fullWidth>\n                                  <TextField\n                                      id=\"standard-select-currency-native\"\n                                      select\n                                      label=\"Search by campus\"\n                                      value={searchCampus}\n                                      onChange={handleChangeCampuses}\n                                      SelectProps={{\n                                        native: true,\n                                      }}\n                                    >\n                                      {   loadingCampuses \n                                      ?\n                                          <option></option> \n                                          :\n\n                                          <Fragment>\n                                              <option></option>\n                                              {campuses.map((campus,id) => {\n                                                return(\n                                                <option key={id} value={campus.campusname}>{campus.campusname}</option>\n                                                )\n                                              })}\n                                          </Fragment>\n                                      }\n                                    </TextField>\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                id=\"searchDept\"\n                                name=\"searchDept\"\n                                label=\"Search by department\"\n                                fullWidth\n                                className=\"classes.formControl\"\n                                value={searchDept}\n                                autoComplete=\"searchDept\"\n                                onChange={handleChangeDept}\n                             />\n                        </Grid>\n                    </Grid>\n                        \n                    </Paper>\n\n                    <br /> \n\n             {/* Table Component for the records of the organization descriptions */ }\n                    <Paper className={classes.root}>\n                        <div className={classes.tableWrapper}>\n\n                            <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Campus</StyledTableCell>\n                                <StyledTableCell align=\"left\">Department</StyledTableCell>\n                                <StyledTableCell align=\"left\">Organization Name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Org President Name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Org Adviser Name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Members Count</StyledTableCell>\n                                <StyledTableCell align=\"left\">Officers Count</StyledTableCell>\n                                <StyledTableCell align=\"left\">Organization Description</StyledTableCell>\n                                <StyledTableCell align=\"left\">Actions</StyledTableCell>\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { loading \n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :   \n                                    //Data to be displayed when the data is fetched\n                                    <Fragment>\n                                    {\n                                       searchCampus === '' || rows.length === 0 ?\n                                       <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                       <ArrowUpwardIcon /><br></br>\n                                       Pls search at the top to filter by campus...\n                                     </TableCell>\n                                      :\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      //Filter the row by what will be typed in the search filter for department then map the result\n                                      .filter(row => row.department.toLowerCase().search(searchDept.toLowerCase()) !== -1)\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.campus}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{row.department}</TableCell>\n                                          <TableCell align=\"left\">{row.orgname}</TableCell>\n                                          <TableCell align=\"left\">{row.orgpresname}</TableCell>\n                                          <TableCell align=\"left\">{row.orgadvisername}</TableCell>\n                                          <TableCell align=\"left\">{row.quantitymembers}</TableCell>\n                                          <TableCell align=\"left\">{row.quantityofficers}</TableCell>\n                                          <TableCell align=\"left\">{row.description}</TableCell>\n                                          <TableCell align=\"left\">\n\n                                          <Tooltip title=\"Update\" placement=\"top\">\n                                             <IconButton href={\"/ad/organizationlist/updaterecord/\" + row.id} aria-label=\"edit\" color=\"primary\">\n                                              <EditIcon />\n                                            </IconButton>\n                                          </Tooltip>   \n\n                            \n                                          <Tooltip title=\"Delete\" placement=\"top\">\n                                             <IconButton aria-label=\"delete\" color=\"secondary\" onClick={ _ => deleteOrganization(row.id)}>\n                                              <DeleteIcon />\n                                            </IconButton>\n                                          </Tooltip>   \n                                                \n                                          </TableCell>\n                                        \n                                        </TableRow>\n                                      ))\n                                    }\n                                    </Fragment>\n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n                        </div>\n                    </Paper>\n\n                </DashboardAdmin>\n            </div>\n        )\n    \n};\n\nOrgListAdmin.propTypes = { \n    history: PropTypes.object.isRequired,\n    orgDesc: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    orgDesc: state.orgDesc,\n});\n\nconst mapDisPatchToProps = { getOrgDesc, deleteOrgDesc };\n\nexport default connect(mapStateToProps, mapDisPatchToProps)(withStyles(styles)(OrgListAdmin));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { setApprovedAdmin, setDeclinedAdmin } from '../../actions/requestActivitiesActions';\n\nimport { withStyles, makeStyles, useTheme} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField'\n\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Button from '@material-ui/core/Button';\n\nimport Slide from '@material-ui/core/Slide';\n\n//Confirmation Message\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\nconst Transition = props => {\n    return <Slide direction=\"up\" {...props} />\n}\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        // ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2 ),\n        paddingBottom: theme.spacing(2),\n    },\n     root2: {\n    width: '100%',\n    paddingBottom: '2 0px',\n      flexGrow: 1,\n  },\n    link: {\n    display: 'flex',\n      },\n       icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n      },\n    reportButton: {\n    paddingTop:15,\n    },\n       formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n}));\n\nfunction RequestedActivitiesAdmin(props){\n        const classes = useStyles();\n\n    //states\n\n    // Dummy State \n      const [activities, getActivities] = useState([]);\n      const [countData, getCountData] = useState(0);\n      const [loading, setLoading] = useState(true);\n      const [error, setError] = useState(false);\n\n  // Pagination Controls \n      const [page, setPage] = useState(0);\n      const [rowsPerPage, setRowsPerPage] = useState(5);\n\n      const [id, setId] = useState();\n      const [username, setUsername] = useState('');\n      const [orgname, setOrgName] = useState('');\n      // This state will have the value of the title of the request activity\n      const [notification, setNotification] = useState('');\n\n      // if the clicked event handler is Decline \n      const [reason, setReason] = useState('');\n\n      // Data for the status of the request_activity \n      const [approved,] = useState('ApprovedFinal');\n      const [declined,] = useState('DeclinedFinal');\n\n     const [approvedModal, openApprovedModal] = useState(false);\n      const [declinedModal, openDeclinedModal] = useState(false);\n\n      const [openApproved, setOpenApproved] = useState(false);\n      const [openDeclined, setOpenDeclined] = useState(false);\n    \n    //Event Handlers\n\n     //Getting the pages, Material UI Funcs\n          const handleChangePage = (event, newPage) => {\n            setPage(newPage);\n          };\n\n          const handleChangeRowsPerPage = event => {\n            setRowsPerPage(parseInt(event.target.value, 10));\n            setPage(0);\n          };\n\n      const handleApprovedModalClose = _ =>  {\n          openApprovedModal(false);\n      }\n\n      const handleDeclinedModalClose = _ => {\n          openDeclinedModal(false);\n      }\n\n      const handleCloseApproved = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setOpenApproved(false);\n          };\n\n      const handleCloseDeclined = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setOpenDeclined(false);\n      };\n\n     const handleApproved = (id, username, orgname, notif) => {\n          setId(id);\n          setUsername(username);\n          setOrgName(orgname);\n          setNotification(notif);\n\n          openApprovedModal(true);\n      };\n\n       const handleDeclined = (id, username, orgname, notif) => {\n          setId(id);\n          setUsername(username);\n          setOrgName(orgname);\n          setNotification(notif);\n\n          openDeclinedModal(true);\n      }\n\n      const handleReason = e => {\n        setReason(e.target.value);\n      }\n\n\n      const approvedFinal = _ => {\n        const approvedBody = {\n          status: approved\n        };\n\n        const notifBody = {\n          username,\n          orgname,\n          notification,\n        }\n        props.setApprovedAdmin(id,approvedBody, notifBody);\n        openApprovedModal(false);\n        // console.log(id, approvedBody, notifBody);\n\n      }\n\n      const declinedFinal = _ => {\n        const declinedBody = {\n          status: declined\n        }\n\n        const notifBody = {\n          username,\n          orgname,\n          notification,\n          reason,\n        }\n\n        props.setDeclinedAdmin(id, declinedBody, notifBody);\n        openDeclinedModal(false);\n        // console.log(id, declinedBody, notifBody);\n      }\n\n\n    //component Effect\n    useEffect(_ => {\n            axios.get('/api/requestactivities/getrequestactivitiesadmin')\n            .then(res => {\n                getActivities(res.data.rows);\n                getCountData(res.data.count)\n                setLoading(false);\n            })\n            .catch(err => {\n                if(err){\n                setError(true);\n                }\n            });\n    },[countData, approvedFinal, declinedFinal]);\n\n      // Effect is the request activity is now approved by the soa head\n    useEffect(_ => {\n        if (props.requestActivities.approvedByAdmin) {\n             setOpenApproved(true)\n        }\n    },[props.requestActivities.approvedByAdmin]);\n\n    // Effect if the request activity is declined\n    useEffect(_ => {\n        if (props.requestActivities.declinedByAdmin) {\n            setOpenDeclined(true)\n        }\n    },[props.requestActivities.declinedByAdmin]);\n\n\n    const rows = activities.sort((a, b) => a.created_at > b.created_at ? -1 : 1)\n                    .filter(row => row.status === 'Approved1');\n\n    //Empty row that says the rows for pagination\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n        return (\n            <div>\n                <DashboardAdmin>\n\n                                   {/* Component for Approved Confirmation message  */}\n                <FormConfirmationMsg open={openApproved} onClose={handleCloseApproved} variant=\"success\" message=\"Request Activity Approved\" />\n                  \n                   {/* Component for Declined Confirmation Message  */}\n                <FormConfirmationMsg open={openDeclined} onClose={handleCloseDeclined} variant=\"info\" message=\"Request Activity Declined\" />\n                    \n\n                  {/* Modal for approve and declined action  */}\n\n                   {/* For Approved Modal */}\n\n                   <Dialog\n                   open={approvedModal}\n                   TransitionComponent={Transition}\n                   keepMounted\n                   onClose={handleApprovedModalClose}\n                   aria-labelledby=\"alert-dialog-slide-title\"\n                   aria-describedby=\"alert-dialog-slide-description\"\n                   >\n                       <DialogTitle id=\"alert-dialog-slide-title\">\n                           {\"Approved Request Activity\"}\n                        </DialogTitle>\n\n                        <DialogContent>\n\n                          <DialogContentText id=\"alert-dialog-slide-description\">\n                              Are you sure to approve this requested activity?\n                              </DialogContentText>\n                          </DialogContent>  \n\n                          <DialogActions>\n                            <Button onClick={approvedFinal} variant=\"outlined\" color=\"primary\">\n                              Yes\n                            </Button>\n                            <Button onClick={handleApprovedModalClose} variant=\"outlined\" color=\"secondary\">\n                              No\n                            </Button>\n                          </DialogActions>\n                   </Dialog>\n\n                   {/* For Approved Modal */}\n\n                    <Dialog\n                       open={declinedModal}\n                       TransitionComponent={Transition}\n                       keepMounted\n                       onClose={handleDeclinedModalClose}\n                       aria-labelledby=\"alert-dialog-slide-title\"\n                       aria-describedby=\"alert-dialog-slide-description\"\n                       >\n                           <DialogTitle id=\"alert-dialog-slide-title\">\n                               {\"Decline Request Activity\"}\n                            </DialogTitle>\n\n                            <DialogContent>\n\n                              <DialogContentText id=\"alert-dialog-slide-description\">\n                                  Tell the reason why it is declined before sending bakc to org.\n                                  </DialogContentText>\n\n                                  <TextField\n                                    onChange={handleReason}\n                                    autoFocus\n                                    margin=\"dense\"\n                                    id=\"reason\"\n                                    label=\"Reason\"\n                                    type=\"text\"\n                                    fullWidth\n                                  />\n                              </DialogContent>  \n\n                              <DialogActions>\n                                <Button onClick={declinedFinal} variant=\"outlined\" color=\"primary\">\n                                  send\n                                </Button>\n                                <Button onClick={handleDeclinedModalClose} variant=\"outlined\" color=\"secondary\">\n                                  cancel\n                                </Button>\n                              </DialogActions>\n                       </Dialog>\n\n\n                     <Typography variant=\"h6\">\n                        Request Activity List\n                    </Typography>\n\n                    <span>\n                    Activities already approved by their corresponing SOA Head\n                    </span>\n\n                     <Paper className={classes.root}>                        \n                        <div className={classes.tableWrapper}>\n\n                         <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Organization Name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Organization Campus</StyledTableCell>\n                                <StyledTableCell align=\"left\">Activity Title</StyledTableCell>\n                                <StyledTableCell align=\"left\">Description</StyledTableCell>\n                                <StyledTableCell align=\"left\">File</StyledTableCell>\n                                <StyledTableCell align=\"left\">Action</StyledTableCell>\n\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { loading \n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :   \n                                    <Fragment>\n                                    {\n                                        rows.length === 0\n                                        ?\n                                    <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                       <br></br>\n                                       No Request activity for today.\n                                     </TableCell>\n                                        :\n                                        <Fragment>\n                                        {\n                                            error\n                                            ?\n                                            <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                               <br></br>\n                                               Something went wrong. Please try refreshin the page of try again later...\n                                             </TableCell>\n                                            :\n                                              //Data to be displayed when the data is fetched\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.orgname}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{row.campus}</TableCell>\n                                          <TableCell align=\"left\">{row.activity_title}</TableCell>\n                                          <TableCell align=\"left\">{row.description}</TableCell>\n                                          <TableCell align=\"left\">\n                                            <a href={row.file} target=\"_blank\">\n                                              <GetAppIcon />\n                                            </a>\n                                            {row.fileName}\n                                          </TableCell>\n                                          <TableCell align=\"left\">\n                                              <Button variant=\"contained\" \n                                              color=\"primary\" \n                                              onClick={_ => handleApproved(row.id, row.username, row.orgname, row.activity_title)}\n                                              >\n                                                Accept\n                                              </Button>\n                                              <br />\n                                              |\n                                              <Button \n                                              onClick={_ => handleDeclined(row.id, row.username, row.orgname, row.activity_title)}\n                                              variant=\"contained\" \n                                              color=\"secondary\">\n                                                Decline\n                                              </Button>\n                                          </TableCell>\n                                        </TableRow>\n                                      ))\n\n                                        }\n                                        </Fragment>\n                                      \n                                    }\n                                    \n                                    </Fragment>\n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n                           </div>\n                     </Paper>\n\n                </DashboardAdmin>\n            </div>\n        )\n    \n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    requestActivities: state.requestActivities\n});\n\nconst mapDispatchToProps = { setApprovedAdmin, setDeclinedAdmin };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestedActivitiesAdmin);\n","import React from 'react';\nimport {\n  Link,\n} from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';  \n\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nimport reports from '../img/reports.png';\nimport fileSharing from '../img/files-sharing.jpg';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n\n      card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      cardMedia: {\n        paddingTop: '56.25%', // 16:9\n      },\n      cardContent: {\n        flexGrow: 1,\n      },\n      link: {\n        textDecoration: 'none'\n      }\n}));\n\nfunction FilesAndReports(props){\n\n        const classes = useStyles();\n\n        return (\n            <div>\n                <DashboardAdmin>\n\n                        <div className={classes.root}>\n\n                            <Grid container spacing={3}>\n\n                                <Grid item sm={6} xs={12}>\n                                    <Card className={classes.card}>\n\n                                        <CardMedia\n                                          className={classes.cardMedia}\n                                          image={reports}\n                                          title=\"Organizational Reports\"\n                                        />\n\n                                        <CardContent className={classes.cardContent}>\n\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                  University Organizational Reports\n                                            </Typography>\n\n                                            <Typography component=\"p\">\n                                                The archived reports of each student organization in the university.\n                                                Only you as an admin can see it.\n                                          </Typography>\n\n                                        </CardContent>\n\n                                        <CardActions>\n                                            <Link to=\"/ad/filesandreports/viewArchivedReports\" className={classes.link}>\n                                                <Button size=\"small\" variant=\"outlined\" color=\"secondary\">\n                                                    View Reports\n                                                </Button>\n                                            </Link>\n                                        </CardActions>\n                                        \n                                    </Card>\n                                </Grid>\n\n                                <Grid item sm={6} xs={12}>\n                                    <Card className={classes.card}>\n\n                                        <CardMedia\n                                          className={classes.cardMedia}\n                                          image={fileSharing}\n                                          title=\"Organizational Reports\"\n                                        />\n\n                                        <CardContent className={classes.cardContent}>\n\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                  File Sharing\n                                            </Typography>\n\n                                            <Typography component=\"p\">\n                                                Share downloadable files in all students and \n                                                student organization of the university\n                                          </Typography>\n\n                                        </CardContent>\n\n                                        <CardActions>\n                                         <Link to=\"/ad/filesandreports/shareFiles\" className={classes.link}>\n                                                <Button size=\"small\" variant=\"outlined\" color=\"secondary\">\n                                                    Share Files\n                                                </Button>\n                                            </Link>\n                                        </CardActions>\n                                        \n                                    </Card>\n                                </Grid>\n\n                          </Grid>\n\n                        </div>\n                        \n\n                </DashboardAdmin>\n            </div>\n        )\n    \n}\n\nexport default FilesAndReports;\n","import axios from 'axios';\n\nimport { \n\tGET_ID_REPLACEMENTS,\n\tADD_ID_REPLACEMENT,\n\t// ID_FETCHED_BY_ID,\n\tUPDATE_ID_REPLACEMENT,\n\tID_REPLACEMENT_LOADING,\n\tGET_ERRORS\n} from './types';\n\n//ACtion for getting all ther data of reports\nexport const getIdReplacements = _ => dispatch => {\n\tdispatch(setIdReplacementsLoading);\n\taxios.get('/api/idreplacements/getidrecords')\n\t.then(res => dispatch({\n\t\ttype: GET_ID_REPLACEMENTS,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => console.log(err));\n};\n\n\n//Action for getting the idreplacement data with is specific id\n// export const getIdReplacementsById = id => dispatch => {\n// \tdispatch(setIdReplacementsLoading);\n// \taxios.get(`/api/idreplacements/getidrecords/${id}`)\n// \t.then(res => dispatch({\n// \t\ttype:ID_FETCHED_BY_ID,\n// \t\tpayload: res.data\n// \t}))\n// \t.catch(err => dispatch({\n// \t\ttype: GET_ERRORS,\n// \t\tpayload: err.response.data\n// \t}));\n// };\n\n// Action for POST at idreplacements\nexport const addIdReplacment = replacement => dispatch => {\n\taxios.post('/api/idreplacements/addidrecords', replacement)\n\t.then(res => dispatch({\n\t\ttype:ADD_ID_REPLACEMENT,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n\t\tpayload: err.response.data\n\t}));\n};\n\n//Update the idreplacement data by its specific ID\nexport const updateIdReplacement = (id, replacement) => dispatch => {\n\taxios.post(`/api/idreplacements/updateidrecord/${id}`, replacement)\n\t.then(res => dispatch({\n\t\ttype: UPDATE_ID_REPLACEMENT,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => dispatch({\n\t\ttype:GET_ERRORS,\n\t\tpayload: err.response.data\n\t}))\n};\n\nexport const setIdReplacementsLoading = _ => {\n\treturn { type: ID_REPLACEMENT_LOADING }\n};","import React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { getIdReplacements } from '../../actions/idreplacementActions';\nimport moment from 'moment';\n\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Button from '@material-ui/core/Button';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\n//Confirmation Message\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2 ),\n        paddingBottom: theme.spacing(2),\n    },\n     root2: {\n    width: '100%',\n    paddingBottom: '2 0px',\n      flexGrow: 1,\n  },\n    link: {\n    display: 'flex',\n      },\n       icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n      },\n    reportButton: {\n    paddingTop:15,\n    },\n       formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n});\n\nfunction IDReplacement(props){\n        const classes = props;\n\n        //////////States///////////\n\n         // Pagination Controls \n      const [page, setPage] = useState(0);\n      const [rowsPerPage, setRowsPerPage] = useState(5);\n\n      // Search Name State \n      const [searchName, setSearchName] = useState('');\n\n      const [loading, setLoading] = useState(true);\n\n    // state for the confirmation message of adding a new records\n      const [openAdded, setOpenAdded] = useState(false);  \n\n      const [openUpdated, setOpenUpdated] = useState(false);  \n\n\n        /////////////Event Handlers//////////\n\n          //Getting the pages, Material UI Funcs\n          const handleChangePage = (event, newPage) => {\n            setPage(newPage);\n          };\n\n          const handleChangeRowsPerPage = event => {\n            setRowsPerPage(parseInt(event.target.value, 10));\n            setPage(0);\n          };\n\n        const handleSearchName = e => {\n            setSearchName(e.target.value);\n        };\n\n        // Event for openAdded state \n        const handleClose = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setOpenAdded(false);\n          };\n\n        // Event for openUpdated state\n        const handleClose1 = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setOpenUpdated(false);\n          };\n\n\n        //////////Component Effects//////\n\n        // useEffect for getting the records in idreplacement\n        useEffect( _ => {\n\n          const id = setInterval( _ => {\n              props.getIdReplacements();\n              setLoading(false);\n          },2000)\n\n            return _ => {\n              clearInterval(id)\n            }\n            \n        },[]);\n\n        // useEffect for a successful adding of a record\n        useEffect( _ => {\n          if(props.idreplacement.added){\n              setOpenAdded(true);\n          }\n        }, [props.idreplacement.added]);\n\n        // useEffect for a successful adding of a record\n        useEffect( _ => {\n          if(props.idreplacement.replaced){\n              setOpenUpdated(true);\n          }\n        }, [props.idreplacement.replaced]);\n\n          //Array of the reports in the lost item reports \n  //Amd filters it by chosen campus\n  const rows = props.idreplacement.records.sort((a, b) => a.created_at > b.created_at ? -1 : 1);\n\n  //Empty row that says the rows for pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n        return (\n            <div>\n                <DashboardAdmin>\n\n                <FormConfirmationMsg open={openAdded} onClose={handleClose} variant=\"success\" message=\"Record Added.\" />\n                <FormConfirmationMsg open={openUpdated} onClose={handleClose1} variant=\"success\" message=\"Record Updated.\" />\n\n\n            {/* Button that will redirect to registering a account*/}\n                 <Button \n                        href=\"/ad/idreplacement/addidreplacement\"\n                        className={classes.reportButton} \n                        variant=\"outlined\" \n                        color=\"secondary\"\n                        >\n                        Add ID_R Record\n                    </Button>\n\n                {/* Search Component */}\n                <div  style={{paddingBottom: 10, paddingTop: 10}}>\n                    <Paper className={classes.root}>\n                         <FormControl fullWidth>\n                                  <TextField\n                                      id=\"name\"\n                                      name=\"name\"\n                                      label=\"Search by Name\"\n                                      value={searchName}\n                                      onChange={handleSearchName}\n                                    />\n                            </FormControl>\n                    </Paper>\n\n                </div>\n\n                    <Paper className={classes.root}>\n                        <div className={classes.tableWrapper}>\n\n                        <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Name of student</StyledTableCell>\n                                <StyledTableCell align=\"left\">College Year</StyledTableCell>\n                                <StyledTableCell align=\"left\">SR-Code</StyledTableCell>\n                                <StyledTableCell align=\"left\">Campus</StyledTableCell>\n                                <StyledTableCell align=\"left\">Department</StyledTableCell>\n                                <StyledTableCell align=\"left\">ID_R Reason</StyledTableCell>\n                                <StyledTableCell align=\"left\">ID_R Count</StyledTableCell>\n                                <StyledTableCell align=\"left\">Remarks</StyledTableCell>\n                                <StyledTableCell align=\"left\">Date Recorded</StyledTableCell>\n                                <StyledTableCell align=\"left\">Action</StyledTableCell>\n\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { loading \n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :   \n                                    //Data to be displayed when the data is fetched\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      .filter(row => row.name.toLowerCase().search(searchName.toLowerCase()) !== -1 )\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.name}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{row.year}</TableCell>\n                                          <TableCell align=\"left\">{row.src}</TableCell>\n                                          <TableCell align=\"left\">{row.campus}</TableCell>\n                                          <TableCell align=\"left\">{row.department}</TableCell>\n                                          <TableCell align=\"left\">{row.idreason}</TableCell>\n                                          <TableCell align=\"left\">{row.count > 1 ? `${row.count} marks` : `${row.count} mark` }</TableCell>\n                                          <TableCell align=\"left\">{row.otherinfo}</TableCell>\n                                          <TableCell align=\"left\">{moment(row.created_at).format('YYYY-MM-DD')}</TableCell>\n                                          <TableCell align=\"left\">\n\n                                              <Tooltip title=\"Update\" placement=\"top\">\n                                                 <IconButton href={`/ad/idreplacement/updateidreplacement/${row.id}`} aria-label=\"edit\" color=\"primary\">\n                                                  <EditIcon />\n                                                </IconButton>\n                                              </Tooltip>   \n\n                                          </TableCell>\n                                        </TableRow>\n                                      ))\n                                    \n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n                        </div>\n                    </Paper>\n\n                </DashboardAdmin>\n            </div>\n        )\n    \n};\n\n\nconst mapStateToProps = state => ({\n    idreplacement: state.idreplacement\n});\n\nconst mapDispatchToProps = { getIdReplacements };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(IDReplacement));;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { addOrgDesc } from '../../actions/orgDescActions';\nimport axios from 'axios';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\n\n// Object Styles for the components \nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n         ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n      },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n          width: 600,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        },\n      },\n      paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n      closeIcon: {\n          float: 'right',\n          color: 'red'\n      },\n      formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n      submit:{\n        marginTop: theme.spacing(3),\n      },\n      close: {\n          padding: theme.spacing() / 2,\n      },\n         link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n});\n\nfunction OrgAddForm(props){\n\n\tconst classes = props;\n\n\t//////////States///////////\n\n\t// Getting the data of campuses \n\tconst [campuses, getCampuses] = useState([]);\n\tconst [loadingCampuses, setLoadingCampuses] = useState(true);\n\n\t// Value States\n\tconst [campus, setCampus] = useState('');\n\tconst [department, setDept] = useState('');\n\tconst [orgname, setOrgName] = useState('');\n\tconst [orgpresname, setOrgPresName] = useState('');\n\tconst [orgadvisername, setOrgAdviserName] = useState('');\n\tconst [quantitymembers, setQuantityMembers] = useState('');\n\tconst [quantityofficers, setQuantityOfficers] = useState('');\n\tconst [description, setDescription] = useState('');\n\n\t// Error MSG state\n\tconst [errors, getErrors] = useState({}); \n\n\t////////////Event Handlers//////////////\n\t// For campus State \n\tconst handleCampus = e => {\n\t    setCampus(e.target.value);\n\t};\n\n\tconst handleDept = e => {\n\t\tsetDept(e.target.value);\n\t};\n\n\tconst handleOrgName = e => {\n\t\tsetOrgName(e.target.value)\n\t};\n\n\tconst handleOrgPresName = e => {\n\t\tsetOrgPresName(e.target.value)\n\t};\n\n\tconst handleOrgAdviserName = e => {\n\t\tsetOrgAdviserName(e.target.value)\n\t};\n\n\tconst handleQuantityMembers = e => {\n\t\tsetQuantityMembers(e.target.value);\n\t};\n\n\tconst handleQuantityOfficers = e => {\n\t\tsetQuantityOfficers(e.target.value);\n\t};\n\n\tconst handleDescription = e => {\n\t\tsetDescription(e.target.value)\n\t};\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tconst newOrgRecord = {\n\t\t\tcampus,\n\t\t\tdepartment,\n\t\t\torgname,\n\t\t\torgpresname,\n\t\t\torgadvisername,\n\t\t\tquantitymembers,\n\t\t\tquantityofficers,\n\t\t\tdescription\n\n\t\t};\n\n\t\tprops.addOrgDesc(newOrgRecord);\n\t};\n\n\t///////////////Component Effects///////////////\n\n\t// Effect for loading the campuses \n\tuseEffect( _ => {\n\t\tconst id = setInterval( _ => {\n\t\t\t(async _ => {\n\t\t\t\tconst res = await axios.get('/api/campuses');\n\t\t\t\t getCampuses(res.data);\n\t   \t\t\t setLoadingCampuses(false);\n\t\t\t})();\n\t\t}, 2000)\n\n\t\treturn _ => {\n\t\t\tclearInterval(id);\n\t\t}\n\t},[]);\n\n\t//useEffect for getting the errors\n\tuseEffect( _ => {\n\t\tif(props.errors){\n\t\t\tgetErrors(props.errors)\n\t\t}\n\t},[props.errors]);\n\n\t// useEffect for a successfull adding of organization \n\tuseEffect( _ => {\n\t\tif(props.orgDesc.added){\n\t\t\tprops.history.push('/ad/organizationlist');\t\n\t\t}\n\t},[props.orgDesc.added]);\n\n\treturn (\n\t\t <DashboardAdmin>\n\n\t\t \t<Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n\t\t        <Link color=\"inherit\" href=\"/ad/organizationlist\" className={classes.link}>\n\t\t          <ViewListIcon className={classes.icon} />\n\t\t          Menu\n\t\t        </Link>\n\n\t\t        <Link\n\t\t          color=\"textPrimary\"\n\t\t          href=\"/ad/organizationlist/addrecord\"\n\t\t          aria-current=\"page\"\n\t\t          className={classes.link}\n\t\t        >\n\t\t        <ListAltIcon className={classes.icon} />\n\t\t          Add\n\t\t        </Link>\n\t\t    </Breadcrumbs>\n\n\t\t    \t<div className={classes.root}>\n\n\t\t    \t\t<main className={classes.layout}>\n\n\t                    <Paper \n\t                    className={classes.paper} \n\t                    style={{ paddingTop: '10px', paddingBottom:'30px'}}\n\t                    >\n\t\t                     <Typography variant=\"h4\" align=\"center\">\n\t                            Organization Registration Form\n\t                        </Typography>\n                        <br></br>\n\n                        <Container maxWidth=\"md\">\n\n                        \t<Typography variant=\"h6\">\n\t                            Input the details needed.\n\t                        </Typography>\n\n\t                        {/* Whole Form Component */}\t\n\t                        <form noValidate onSubmit={handleSubmit}>\n\t                        \t<Grid container spacing={3}>\n\t                        \t\t{/* Whole Form Component */}\t\n\t                        \t\t<Grid item xs={12} sm={6}>\n\t                        \t\t\t<FormControl fullWidth className={classes.formControl}>\n\n\t                        \t\t\t\t<InputLabel htmlFor=\"campus-simple\">Campus</InputLabel>\n\n\t                        \t\t\t\t<Select\n\t                        \t\t\t\t\tvalue={campus}\n\t                        \t\t\t\t\tonChange={handleCampus}\n\n\t                        \t\t\t\t\tinputProps={{\n\t                        \t\t\t\t\t\tname: 'campus',\n\t                        \t\t\t\t\t\tid:'campus-simple'\n\t                        \t\t\t\t\t}}\n\t                        \t\t\t\t>\n\t                        \t\t\t\t{\n\t                        \t\t\t\t\tloadingCampuses ? \n\t                        \t\t\t\t\t     <MenuItem></MenuItem>\n\t                        \t\t\t\t\t     :\n\t                        \t\t\t\t\t campuses.map((campus, id) => {\n\t                        \t\t\t\t\t \treturn <MenuItem key={id} value={campus.campusname}>{campus.campusname} </MenuItem>\n\t                        \t\t\t\t\t })\n\t                        \t\t\t\t}\n\t                        \t\t\t\t</Select>\n\n\t                        \t\t\t</FormControl>\n\n\t                        \t\t\t  <span style={{ color: \"red\" }}>\n\t\t\t\t                                {errors.campus}\n\t\t\t\t                          </span>\n\n\t                        \t\t</Grid>\n\t                        \t\t{/* Whole Form Component */}\t\n\t                        \t\t<Grid item xs={12} sm={6}>\n\t                        \t\t\t<TextField \n\t                        \t\t\tvalue={department}\n\t                        \t\t\tonChange={handleDept}\n\t                        \t\t\tid=\"department\"\n\t                        \t\t\tname=\"department\"\n\t                        \t\t\tlabel=\"Department\"\n\t                        \t\t\tfullWidth\n\t                        \t\t\tautoComplete=\"department\"\n\t                        \t\t\t/>\n\t                        \t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t                                {errors.department}\n\t\t\t\t                          </span>\n\t                        \t\t</Grid>\n\n\t                        \t{/*\tOrganization Name */}\n\t                        \t<Grid item xs={12}>\n\t                        \t\t<TextField \n\t                        \t\tvalue={orgname}\n\t                        \t\tonChange={handleOrgName}\n\t                        \t\tid=\"orgname\"\n\t                        \t\tname=\"orgname\"\n\t                        \t\tlabel=\"Organization Name\"\n\t                        \t\tfullWidth\n\t                        \t\tautoComplete=\"orgname\"\n\t                        \t\t/>\n\t                        \t\t<span style={{ color: \"red\" }}>\n\t\t\t\t                           {errors.orgname}\n\t\t\t\t                       </span>\n\t                        \t</Grid>\n\n\t                        \t{/*\tOrganization Adviser Name */}\n\t                        \t\t<Grid item xs={12}>\n\t                        \t\t\t<TextField \n\t                        \t\t\t\tvalue={orgpresname}\n\t                        \t\t\t\tonChange={handleOrgPresName}\n\t                        \t\t\t\tid=\"orgpresname\"\n\t                        \t\t\t\tname=\"orgpresname\"\n\t                        \t\t\t\tlabel=\"Organization Pres. Name\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t\tautoComplete=\"orgpresname\"\n\t                        \t\t\t/>\n\t                        \t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t                                {errors.orgpresname}\n\t\t\t\t                          </span>\n\t                        \t\t</Grid>\n\n\t                        \t{/*\tOrganization Adviser Name */}\n\t                        \t\t<Grid item xs={12}>\n\t                        \t\t\t<TextField \n\t                        \t\t\t\tvalue={orgadvisername}\n\t                        \t\t\t\tonChange={handleOrgAdviserName}\n\t                        \t\t\t\tid=\"orgadvisername\"\n\t                        \t\t\t\tname=\"orgadvisername\"\n\t                        \t\t\t\tlabel=\"Organization Adviser Name\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t\tautoComplete=\"orgadvisername\"\n\t                        \t\t\t/>\n\t                        \t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t                                {errors.orgadvisername}\n\t\t\t\t                          </span>\n\t                        \t\t</Grid>\n\n\t                        \t{/*\tQuantity of Members and Officers */}\n\t                        \t\t<Grid item xs={12} sm={6}>\n\t                        \t\t\t<TextField \n\t                        \t\t\t\tvalue={quantitymembers}\n\t                        \t\t\t\tonChange={handleQuantityMembers}\n\t                        \t\t\t\tid=\"quantitymembers\"\n\t                        \t\t\t\tname=\"quantitymembers\"\n\t                        \t\t\t\tlabel=\"Members Quantity\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t\tautoComplete=\"quantitymembers\"\n\t                        \t\t\t\ttype=\"number\"\n\t                        \t\t\t/>\n\t                        \t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t                                {errors.quantitymembers}\n\t\t\t\t                          </span>\n\t                        \t\t</Grid>\n\n\t                        \t\t<Grid item xs={12} sm={6}>\n\t                        \t\t\t<TextField \n\t                        \t\t\t\tvalue={quantityofficers}\n\t                        \t\t\t\tonChange={handleQuantityOfficers}\n\t                        \t\t\t\tid=\"quantityofficers\"\n\t                        \t\t\t\tname=\"quantityofficers\"\n\t                        \t\t\t\tlabel=\"Officers Quantity\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t\tautoComplete=\"quantityofficers\"\n\t                        \t\t\t\ttype=\"number\"\n\t                        \t\t\t/>\n\t                        \t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t                                {errors.quantityofficers}\n\t\t\t\t                          </span>\n\t                        \t\t</Grid>\n\n\n\t                        \t\t<Grid item xs={12}>\t\n\t                        \t\t\t<TextField \n\t                        \t\t\t\tvalue={description}\n\t                        \t\t\t\tonChange={handleDescription}\n\t                        \t\t\t\tid=\"description\"\n\t                        \t\t\t\tname=\"description\"\n\t                        \t\t\t\tlabel=\"Description of the Organization\"\n\t                        \t\t\t\tmultiline\n\t                        \t\t\t\trowsMax=\"4\"\n\t                        \t\t\t\tclassName={classes.formControl}\n\t                        \t\t\t\tmargin=\"normal\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t/>\n\t                        \t\t</Grid>\n\n\t                        \t\t<Button\n\t                        \t\t\ttype=\"submit\"\n\t                        \t\t\tvariant=\"outlined\"\n\t                        \t\t\tcolor=\"secondary\"\n\t                        \t\t\tclassName={classes.submit}\n\t                        \t\t>\n\t                        \t\t\tAdd Record\n\t                        \t\t</Button>\n\t                        \t\t\n\t                        \t</Grid>\n\t                        </form>\n\n                        </Container>\n\n\t                    </Paper>\n\n\t                </main>\n\n               </div>\n\n\n          </DashboardAdmin>\n\t\t);\n};\n\nOrgAddForm.propTypes = { \n\tclasses: PropTypes.object.isRequired,\n\torgDesc: PropTypes.object.isRequired,\n\terrors: PropTypes.object.isRequired,\n\taddOrgDesc: PropTypes.func.isRequired,\n\thistory: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n\torgDesc: state.orgDesc,\n\terrors: state.errors\n});\n\nconst mapDispatchToProps = { addOrgDesc }\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(OrgAddForm)));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass OrgUpdateFormErrorMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant=\"error\"\n            message={this.props.errMsg}\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default OrgUpdateFormErrorMsg;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport axios from 'axios';\nimport { updateOrgDesc } from '../../actions/orgDescActions';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\nimport OrgUpdateFormErrorMsg from './OrgUpdateFormErrorMsg';\n\n// Object Styles for the components \nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n         ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n      },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n          width: 600,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        },\n      },\n      paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n      closeIcon: {\n          float: 'right',\n          color: 'red'\n      },\n      formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n      submit:{\n        marginTop: theme.spacing(3),\n      },\n      close: {\n          padding: theme.spacing() / 2,\n      },\n         link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n});\n\nfunction OrgAddForm(props){\n\n\tconst classes = props;\n\n\t//////////States///////////\n\n\t// Getting the data of campuses \n\tconst [campuses, getCampuses] = useState([]);\n\tconst [loadingCampuses, setLoadingCampuses] = useState(true);\n\n\t// Value States\n\tconst [campus, setCampus] = useState('');\n\tconst [department, setDept] = useState('');\n\tconst [orgname, setOrgName] = useState('');\n\tconst [orgpresname, setOrgPresName] = useState('');\n\tconst [orgadvisername, setOrgAdviserName] = useState('');\n\tconst [quantitymembers, setQuantityMembers] = useState('');\n\tconst [quantityofficers, setQuantityOfficers] = useState('');\n\tconst [description, setDescription] = useState('');\n\n\t// Error MSG state\n\tconst [errors, getErrors] = useState({}); \n\tconst [errorAll, setErrorAll] = useState(false);\n\n\t////////////Event Handlers//////////////\n\t// For campus State \n\tconst handleCampus = e => {\n\t    setCampus(e.target.value);\n\t};\n\n\tconst handleDept = e => {\n\t\tsetDept(e.target.value);\n\t};\n\n\tconst handleOrgName = e => {\n\t\tsetOrgName(e.target.value)\n\t};\n\n\tconst handleOrgPresName = e => {\n\t\tsetOrgPresName(e.target.value)\n\t};\n\n\tconst handleOrgAdviserName = e => {\n\t\tsetOrgAdviserName(e.target.value)\n\t};\n\n\tconst handleQuantityMembers = e => {\n\t\tsetQuantityMembers(e.target.value);\n\t};\n\n\tconst handleQuantityOfficers = e => {\n\t\tsetQuantityOfficers(e.target.value);\n\t};\n\n\tconst handleDescription = e => {\n\t\tsetDescription(e.target.value)\n\t};\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tconst newOrgRecord = {\n\t\t\tcampus,\n\t\t\tdepartment,\n\t\t\torgname,\n\t\t\torgpresname,\n\t\t\torgadvisername,\n\t\t\tquantitymembers,\n\t\t\tquantityofficers,\n\t\t\tdescription\n\n\t\t};\n\n\t\t// props.addOrgDesc(newOrgRecord);\n\n\t\tprops.updateOrgDesc(props.match.params.id,newOrgRecord)\n\t};\n\n\t const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setErrorAll(false);\n  };\n\n\t///////////////Component Effects///////////////\n\n\t// Effect for loading the campuses \n\tuseEffect( _ => {\n\t\tconst id = setInterval( _ => {\n\t\t\t(async _ => {\n\t\t\t\tconst res = await axios.get('/api/campuses');\n\t\t\t\t getCampuses(res.data);\n\t   \t\t\t setLoadingCampuses(false);\n\t\t\t})();\n\t\t}, 2000)\n\n\t\treturn _ => {\n\t\t\tclearInterval(id);\n\t\t}\n\t},[]);\n\n\t// useEffect for getting the data with its specific param id\n\tuseEffect( _ => {\n\n\t\t\t(async _ => {\n\t\t\t\tconst res = await axios.get(`/api/orgdesc/getorgdesc/${props.match.params.id}`);\n\t\t\t\t\tsetCampus(res.data.campus);\n\t\t\t\t\tsetDept(res.data.department);\n\t\t\t\t\tsetOrgName(res.data.orgname);\n\t\t\t\t\tsetOrgPresName(res.data.orgpresname);\n\t\t\t\t\tsetOrgAdviserName(res.data.orgadvisername);\n\t\t\t\t\tsetQuantityMembers(res.data.quantitymembers);\n\t\t\t\t\tsetQuantityOfficers(res.data.quantityofficers);\n\t\t\t\t\tsetDescription(res.data.description);\n\t\t\t})();\n\t},[]);\n\n\t//useEffect for getting the errors\n\tuseEffect( _ => {\n\t\tif(props.errors){\n\t\t\tgetErrors(props.errors)\n\t\t}\n\n\t\tif(props.errors.all){\n\t\t\tsetErrorAll(true)\n\t\t}\n\t},[props.errors]);\n\n\t// useEffect for a successfull adding of organization \n\tuseEffect( _ => {\n\t\tif(props.orgDesc.updated){\n\t\t\tprops.history.push('/ad/organizationlist');\t\n\t\t}\n\t},[props.orgDesc.updated]);\n\n\treturn (\n\t\t <DashboardAdmin>\n\n\t\t <OrgUpdateFormErrorMsg open={errorAll} onClose={handleClose} errMsg={errors.all}  />\n\n\t\t \t<Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n\t\t        <Link color=\"inherit\" href=\"/ad/organizationlist\" className={classes.link}>\n\t\t          <ViewListIcon className={classes.icon} />\n\t\t          Menu\n\t\t        </Link>\n\n\t\t        <Link\n\t\t          color=\"textPrimary\"\n\t\t          href={\"/ad/organizationlist/updaterecord/\" + props.match.params.id}\n\t\t          aria-current=\"page\"\n\t\t          className={classes.link}\n\t\t        >\n\t\t        <ListAltIcon className={classes.icon} />\n\t\t          Add\n\t\t        </Link>\n\t\t    </Breadcrumbs>\n\n\t\t    \t<div className={classes.root}>\n\n\t\t    \t\t<main className={classes.layout}>\n\n\t                    <Paper \n\t                    className={classes.paper} \n\t                    style={{ paddingTop: '10px', paddingBottom:'30px'}}\n\t                    >\n\t\t                     <Typography variant=\"h4\" align=\"center\">\n\t                            Organization Registration Form\n\t                        </Typography>\n                        <br></br>\n\n                        <Container maxWidth=\"md\">\n\n                        \t<Typography variant=\"h6\">\n\t                            Input the details needed.\n\t                        </Typography>\n\n\t                        {/* Whole Form Component */}\t\n\t                        <form noValidate onSubmit={handleSubmit}>\n\t                        \t<Grid container spacing={3}>\n\t                        \t\t{/* Whole Form Component */}\t\n\t                        \t\t<Grid item xs={12} sm={6}>\n\t                        \t\t\t<FormControl fullWidth className={classes.formControl}>\n\n\t                        \t\t\t\t<InputLabel htmlFor=\"campus-simple\">Campus</InputLabel>\n\n\t                        \t\t\t\t<Select\n\t                        \t\t\t\t\tvalue={campus}\n\t                        \t\t\t\t\tonChange={handleCampus}\n\n\t                        \t\t\t\t\tinputProps={{\n\t                        \t\t\t\t\t\tname: 'campus',\n\t                        \t\t\t\t\t\tid:'campus-simple'\n\t                        \t\t\t\t\t}}\n\t                        \t\t\t\t>\n\t                        \t\t\t\t{\n\t                        \t\t\t\t\tloadingCampuses ? \n\t                        \t\t\t\t\t     <MenuItem></MenuItem>\n\t                        \t\t\t\t\t     :\n\t                        \t\t\t\t\t campuses.map((campus, id) => {\n\t                        \t\t\t\t\t \treturn <MenuItem key={id} value={campus.campusname}>{campus.campusname} </MenuItem>\n\t                        \t\t\t\t\t })\n\t                        \t\t\t\t}\n\t                        \t\t\t\t</Select>\n\n\t                        \t\t\t</FormControl>\n\n\t                        \t\t\t  <span style={{ color: \"red\" }}>\n\t\t\t\t                                {errors.campus}\n\t\t\t\t                          </span>\n\n\t                        \t\t</Grid>\n\t                        \t\t{/* Whole Form Component */}\t\n\t                        \t\t<Grid item xs={12} sm={6}>\n\t                        \t\t\t<TextField \n\t                        \t\t\tvalue={department}\n\t                        \t\t\tonChange={handleDept}\n\t                        \t\t\tid=\"department\"\n\t                        \t\t\tname=\"department\"\n\t                        \t\t\tlabel=\"Department\"\n\t                        \t\t\tfullWidth\n\t                        \t\t\tautoComplete=\"department\"\n\t                        \t\t\t/>\n\t                        \t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t                                {errors.department}\n\t\t\t\t                          </span>\n\t                        \t\t</Grid>\n\n\t                        \t{/*\tOrganization Name */}\n\t                        \t<Grid item xs={12}>\n\t                        \t\t<TextField \n\t                        \t\tvalue={orgname}\n\t                        \t\tonChange={handleOrgName}\n\t                        \t\tid=\"orgname\"\n\t                        \t\tname=\"orgname\"\n\t                        \t\tlabel=\"Organization Name\"\n\t                        \t\tfullWidth\n\t                        \t\tautoComplete=\"orgname\"\n\t                        \t\t/>\n\t                        \t\t<span style={{ color: \"red\" }}>\n\t\t\t\t                           {errors.orgname}\n\t\t\t\t                       </span>\n\t                        \t</Grid>\n\n\t                        \t{/*\tOrganization Adviser Name */}\n\t                        \t\t<Grid item xs={12}>\n\t                        \t\t\t<TextField \n\t                        \t\t\t\tvalue={orgpresname}\n\t                        \t\t\t\tonChange={handleOrgPresName}\n\t                        \t\t\t\tid=\"orgpresname\"\n\t                        \t\t\t\tname=\"orgpresname\"\n\t                        \t\t\t\tlabel=\"Organization Pres. Name\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t\tautoComplete=\"orgpresname\"\n\t                        \t\t\t/>\n\t                        \t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t                                {errors.orgpresname}\n\t\t\t\t                          </span>\n\t                        \t\t</Grid>\n\n\t                        \t{/*\tOrganization Adviser Name */}\n\t                        \t\t<Grid item xs={12}>\n\t                        \t\t\t<TextField \n\t                        \t\t\t\tvalue={orgadvisername}\n\t                        \t\t\t\tonChange={handleOrgAdviserName}\n\t                        \t\t\t\tid=\"orgadvisername\"\n\t                        \t\t\t\tname=\"orgadvisername\"\n\t                        \t\t\t\tlabel=\"Organization Adviser Name\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t\tautoComplete=\"orgadvisername\"\n\t                        \t\t\t/>\n\t                        \t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t                                {errors.orgadvisername}\n\t\t\t\t                          </span>\n\t                        \t\t</Grid>\n\n\t                        \t{/*\tQuantity of Members and Officers */}\n\t                        \t\t<Grid item xs={12} sm={6}>\n\t                        \t\t\t<TextField \n\t                        \t\t\t\tvalue={quantitymembers}\n\t                        \t\t\t\tonChange={handleQuantityMembers}\n\t                        \t\t\t\tid=\"quantitymembers\"\n\t                        \t\t\t\tname=\"quantitymembers\"\n\t                        \t\t\t\tlabel=\"Members Quantity\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t\tautoComplete=\"quantitymembers\"\n\t                        \t\t\t\ttype=\"number\"\n\t                        \t\t\t/>\n\t                        \t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t                                {errors.quantitymembers}\n\t\t\t\t                          </span>\n\t                        \t\t</Grid>\n\n\t                        \t\t<Grid item xs={12} sm={6}>\n\t                        \t\t\t<TextField \n\t                        \t\t\t\tvalue={quantityofficers}\n\t                        \t\t\t\tonChange={handleQuantityOfficers}\n\t                        \t\t\t\tid=\"quantityofficers\"\n\t                        \t\t\t\tname=\"quantityofficers\"\n\t                        \t\t\t\tlabel=\"Officers Quantity\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t\tautoComplete=\"quantityofficers\"\n\t                        \t\t\t\ttype=\"number\"\n\t                        \t\t\t/>\n\t                        \t\t\t<span style={{ color: \"red\" }}>\n\t\t\t\t                                {errors.quantityofficers}\n\t\t\t\t                          </span>\n\t                        \t\t</Grid>\n\n\n\t                        \t\t<Grid item xs={12}>\t\n\t                        \t\t\t<TextField \n\t                        \t\t\t\tvalue={description}\n\t                        \t\t\t\tonChange={handleDescription}\n\t                        \t\t\t\tid=\"description\"\n\t                        \t\t\t\tname=\"description\"\n\t                        \t\t\t\tlabel=\"Description of the Organization\"\n\t                        \t\t\t\tmultiline\n\t                        \t\t\t\trowsMax=\"4\"\n\t                        \t\t\t\tclassName={classes.formControl}\n\t                        \t\t\t\tmargin=\"normal\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t/>\n\t                        \t\t</Grid>\n\n\t                        \t\t\t\n\n\t                        \t\t<Button\n\t                        \t\t\ttype=\"submit\"\n\t                        \t\t\tvariant=\"outlined\"\n\t                        \t\t\tcolor=\"secondary\"\n\t                        \t\t\tclassName={classes.submit}\n\t                        \t\t>\n\t                        \t\t\tAdd Record\n\t                        \t\t</Button>\n\t                        \t\t\n\t                        \t</Grid>\n\t                        </form>\n\n                        </Container>\n\n\t                    </Paper>\n\n\t                </main>\n\n               </div>\n\n\n          </DashboardAdmin>\n\t\t);\n};\n\nOrgAddForm.propTypes = { \n\tclasses: PropTypes.object.isRequired,\n\torgDesc: PropTypes.object.isRequired,\n\terrors: PropTypes.object.isRequired,\n\thistory: PropTypes.object.isRequired,\n\tupdateOrgDesc: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n\torgDesc: state.orgDesc,\n\terrors: state.errors\n});\n\nconst mapDispatchToProps = { updateOrgDesc }\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(OrgAddForm)));\n","import axios from 'axios';\n\nimport {\n\tGET_ORG_ACCNTS,\n\tREGISTER_ORG_ACCNT,\n\tACCNTS_LOADING,\n\tGET_ERRORS,\n} from './types';\n\nexport const getAccntRecords = _ => dispatch => {\n\tdispatch(setAccountsLoading);\n\taxios.get('/api/org/getorgaccnts')\n\t.then(res => dispatch({\n\t\ttype: GET_ORG_ACCNTS,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => console.log(err));\n};\n\n// The actions for adding a account in the database \nexport const addAccntRecords = data => dispatch => {\n\taxios.post('/api/org/registerorg', data)\n\t.then(res => dispatch({\n\t\ttype: REGISTER_ORG_ACCNT,\n\t\tpayload: res.data\n\t}))\n\t.catch(err => dispatch({\n\t\ttype: GET_ERRORS,\n        payload: err.response.data,\n\t}));\n};\n\nexport const setAccountsLoading = _ => {\n\treturn { type: ACCNTS_LOADING };\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass OrgAccountListSuccessfulMsg extends React.Component {\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.props.open}\n          autoHideDuration={6000}\n          onClose={this.props.onClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.props.onClose}\n            variant=\"success\"\n            message=\"Organization Account Registered.\"\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default OrgAccountListSuccessfulMsg;","import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { getAccntRecords } from '../../actions/orgActions';\nimport moment from 'moment';\n\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\nimport Button from '@material-ui/core/Button';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\nimport OrgAccountListSuccessfulMsg from './OrgAccountListSuccessfulMsg';\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n// TablePaginationActions.propTypes = {\n//   count: PropTypes.number.isRequired,\n//   onChangePage: PropTypes.func.isRequired,\n//   page: PropTypes.number.isRequired,\n//   rowsPerPage: PropTypes.number.isRequired,\n// };\n\n// Style for the main Component \nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2 ),\n        paddingBottom: theme.spacing(2),\n    },\n     root2: {\n    width: '100%',\n    paddingBottom: '2 0px',\n      flexGrow: 1,\n  },\n    link: {\n    display: 'flex',\n      },\n       icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n      },\n    reportButton: {\n    paddingTop:15,\n    },\n       formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n});\n\nfunction OrgAccountList(props){\n        const classes = props;\n\n        /////////States///////////\n         // Pagination Controls \n      const [page, setPage] = useState(0);\n      const [rowsPerPage, setRowsPerPage] = useState(5);\n\n      //Campus Fetching State\n      const [campuses, getCampuses] = useState([]);\n      const [loadingCampuses, setLoadingCampuses] = useState(true);\n\n      //Search State\n      const [searchCampus, setSearchCampus] = useState('');\n\n        // Data Table Loading\n        const [loading, setLoading] = useState(true);\n\n        // Successfult message state \n        const [open, setOpen] = useState(false);\n\n        ////////////Event Handlers/////////////\n\n          //Getting the pages, Material UI Funcs\n          const handleChangePage = (event, newPage) => {\n            setPage(newPage);\n          };\n\n          const handleChangeRowsPerPage = event => {\n            setRowsPerPage(parseInt(event.target.value, 10));\n            setPage(0);\n          };\n\n          const handleChangeCampuses = e => {\n            setSearchCampus(e.target.value);\n          };\n\n           const handleClose = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setOpen(false);\n              };\n\n        /////////////Components Effect///////////////\n\n        // useEffect for getting the campuses\n        useEffect( _ => {\n\n            const id = setInterval( _ => {\n                (async _ => {\n                    const res = await axios.get('/api/campuses');\n                    getCampuses(res.data);\n                    setLoadingCampuses(false)\n                })();\n            }, 2000)\n\n            return _ => {\n                clearInterval(id);\n            }\n\n        },[]);\n\n        // useEffect for getting the registered accountlist\n        useEffect( _ => {\n\n            const id = setInterval( _ => {\n                props.getAccntRecords();\n                setLoading(false);\n            }, 2000);\n\n            return _ => {\n                clearInterval(id)\n            }\n\n        },[]);\n\n        // useEffect if an account is succesully registered \n        useEffect(_ => {\n            if(props.org.registered){\n                setOpen(true);\n            }\n        },[props.org.registered]);\n\n\n          //Array of the reports in the lost item reports \n  //Amd filters it by chosen campus\n  const rows = props.org.accounts.sort((a, b) => (a.created_at > b.created_at ? -1 : 1))\n    .filter(row => row.campus === searchCampus)\n\n  //Empty row that says the rows for pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n        return (\n            <div>\n                <DashboardAdmin>\n\n                <OrgAccountListSuccessfulMsg open={open} onClose={handleClose} />\n\n                <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n                    <Link color=\"inherit\" href=\"/ad/organizationlist\" className={classes.link}>\n                      <ViewListIcon className={classes.icon} />\n                      Menu\n                    </Link>\n\n                    <Link\n                      color=\"textPrimary\"\n                      href=\"/ad/organizationlist/accountlist\"\n                      aria-current=\"page\"\n                      className={classes.link}\n                    >\n                    <ListAltIcon className={classes.icon} />\n                      Account List\n                    </Link>\n                </Breadcrumbs>\n\n            {/* Button that will redirect to registering a account*/}\n                 <Button \n                        href=\"/ad/organizationlist/accountlist/registerorg\"\n                        className={classes.reportButton} \n                        variant=\"outlined\" \n                        color=\"secondary\"\n                        >\n                        Register Account\n                    </Button>\n\n                {/* Search Component */}\n                <div  style={{paddingBottom: 10, paddingTop: 10}}>\n                    <Paper className={classes.root}>\n                         <FormControl fullWidth>\n                                  <TextField\n                                      id=\"standard-select-currency-native\"\n                                      select\n                                      label=\"Search by campus\"\n                                      value={searchCampus}\n                                      onChange={handleChangeCampuses}\n                                      SelectProps={{\n                                        native: true,\n                                      }}\n                                    >\n                                      {   loadingCampuses \n                                      ?\n                                          <option></option> \n                                          :\n\n                                          <Fragment>\n                                              <option></option>\n                                              {campuses.map((campus,id) => {\n                                                return(\n                                                <option key={id} value={campus.campusname}>{campus.campusname}</option>\n                                                )\n                                              })}\n                                          </Fragment>\n                                      }\n                                    </TextField>\n                            </FormControl>\n                    </Paper>\n\n                </div>\n\n                {/* Data table Component */}\n                    <Paper className={classes.root}>\n                        <div className={classes.tableWrapper}>\n\n                             <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Organization Name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Campus</StyledTableCell>\n                                <StyledTableCell align=\"left\">Username Registered</StyledTableCell>\n                                <StyledTableCell align=\"left\">Date Registered</StyledTableCell>\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { loading \n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :   \n                                    //Data to be displayed when the data is fetched\n                                    <Fragment>\n                                    {\n                                       searchCampus === '' || rows.length === 0 ?\n                                       <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                       <ArrowUpwardIcon /><br></br>\n                                       Pls search at the top to filter by campus...\n                                     </TableCell>\n                                      :\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.orgname}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{row.campus}</TableCell>\n                                          <TableCell align=\"left\">{row.username}</TableCell>\n                                          <TableCell align=\"left\">{moment(row.created_at).format('YYYY-MM-DD')}</TableCell>\n                                        </TableRow>\n                                      ))\n                                    }\n                                    </Fragment>\n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n                            \n                        </div>\n                    </Paper>\n\n\n                </DashboardAdmin>\n            </div>\n        );\n    \n};\n\n\nconst mapStateToProps = state => ({\n    org: state.org\n});\n\nconst mapDispatchToProps = { getAccntRecords };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(OrgAccountList));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addAccntRecords } from '../../actions/orgActions';\nimport { getOrgDesc } from '../../actions/orgDescActions';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\n\n// Object Styles for the components \nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n         ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n      },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n          width: 600,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        },\n      },\n      paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n      closeIcon: {\n          float: 'right',\n          color: 'red'\n      },\n      formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n      submit:{\n        marginTop: theme.spacing(3),\n      },\n      close: {\n          padding: theme.spacing() / 2,\n      },\n         link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n});\n\n\nfunction OrgAccountListAddForm(props){\n        const classes = props;\n\n        /////////States/////////////\n\n        // Value States\n        //Other way to get values of state and put it in an object\n        const [values, setValues] = useState({\n         // Data values\n         orgname: '',\n         username:'',\n         password:'',\n\n        // Password Input Textfield component \n        showPassword: false,\n        // State to check if the registered organizationlist is fetch\n        orgLoading: true,\n       \n        });\n        // Error State \n        const [errors, getErrors] = useState({});\n\n        const handleChange = prop => e => {\n            setValues({...values, [prop]: e.target.value})\n        };\n\n        const handleClickShowPassword = () => {\n            setValues({ ...values, showPassword: !values.showPassword });\n          };\n\n        const handleMouseDownPassword = (event) => {\n            event.preventDefault();\n          };\n\n        const handleSubmit = e => {\n            e.preventDefault();\n\n            const datas = { \n                orgname: values.orgname.orgname,\n                campus: values.orgname.campus,\n                username: values.username,\n                password: values.password,\n                type: 'org',\n            };\n\n             props.addAccntRecords(datas);          \n            \n        };\n\n        ///////////////useEffects//////////////////\n\n        useEffect( _ => {\n\n                props.getOrgDesc();\n                setValues({...values, orgLoading: false})\n\n        },[]);\n\n        // useEffect if the input forms are done correctly \n        useEffect(_ => {\n            if(props.org.registered){\n                    props.history.push('/ad/organizationlist/accountlist/')\n            }\n        },[props.org.registered]);\n\n        //useEffect for getting the errors\n        useEffect( _ => {\n            if(props.errors){\n                getErrors(props.errors)\n            }\n        },[props.errors]);\n\n\n        const orgArr = props.orgDesc.sort((a,b) => a.created_at > b.created_at ? -1 : 1);\n\n        const orgArrFilter = orgArr.filter(org => org.orgname === values.orgname.orgname);\n\n        return (\n            <div>\n                <DashboardAdmin>\n\n                 <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n                    <Link color=\"inherit\" href=\"/ad/organizationlist\" className={classes.link}>\n                      <ViewListIcon className={classes.icon} />\n                      Menu\n                    </Link>\n\n                    <Link\n                      color=\"inherit\"\n                      href=\"/ad/organizationlist/accountlist\"\n                 \n                      className={classes.link}\n                    >\n                    <ListAltIcon className={classes.icon} />\n                      Account List\n                    </Link>\n\n                     <Link\n                      color=\"textPrimary\"\n                      href=\"/ad/organizationlist/accountlist/registerorg\"\n                      aria-current=\"page\"\n                      className={classes.link}\n                    >\n                    <ViewListIcon className={classes.icon} />\n                      Register\n                    </Link>\n\n\n                </Breadcrumbs>\n                    <div className={classes.root}>\n                        \n                        <main className={classes.layout}>\n\n                            <Paper\n                             className={classes.paper}\n                             style={{ paddingTop: '10px', paddingBottom:'30px'}}\n                            >\n\n                            <Typography variant=\"h4\" align=\"center\">\n                                Organization Account Registration Form\n                            </Typography>\n                             <br></br>\n\n                             <Container maxWidth=\"md\">\n\n                                <form noValidate onSubmit={handleSubmit}>\n\n                                <Grid container spacing={3}>\n\n                                      <Typography variant=\"h6\">\n                                            Input the details needed.\n                                        </Typography>\n\n                                   {/* Fragment to control the mapping of all registered  orgnames */}\n                                        <Fragment>\n\n                                        <Grid item xs={12}>\n                                            <FormControl fullWidth className={classes.formControl}>\n\n                                                <InputLabel htmlFor=\"orgname-simple\">Organization</InputLabel>\n\n                                                <Select\n                                                    value={values.orgname}\n                                                    onChange={handleChange('orgname')}\n                                                    inputProps={{\n                                                        name: 'orgname',\n                                                        id:'orgname-simple'\n                                                    }}\n                                                >\n                                                {\n                                                    values.orgLoading ? \n                                                         <MenuItem></MenuItem>\n                                                         :\n                                                         // To access all the object data and use it in other components\n                                                         // setthe response object as the value of the select component \n                                                         // and get the object data\n                                                     orgArr.map(org => {\n                                                        return <MenuItem  value={org}>{org.orgname}</MenuItem>\n                                                         })\n                                                }\n                                                </Select>\n\n                                            </FormControl>\n                                             <span style={{ color: \"red\" }}>\n                                                {errors.orgname}\n                                             </span>\n\n                                        </Grid>\n\n                                        <Grid item xs={12}>\n                                         {\n                                            values.orgname === ''\n                                            ? \n                                            <Fragment></Fragment>\n                                            : \n\n                                            orgArrFilter.map(org => (\n\n                                                 <Fragment>\n                                                       <TextField\n                                                        id=\"campus\"\n                                                        name=\"campus\"\n                                                        value={org.campus}\n                                                          InputProps={{\n                                                            readOnly: true,\n                                                          }}\n                                                        fullWidth\n                                                    />\n                                                    </Fragment>\n                                                ))\n                                         }\n                                        </Grid>\n\n\n                                        </Fragment>\n\n                                        <Grid item xs={12}>\n                                            <TextField\n                                                value={values.username}\n                                                onChange={handleChange('username')}\n                                                id=\"username\"\n                                                name=\"username\"\n                                                label=\"Username\"\n                                                fullWidth\n                                            />\n\n                                            <span style={{ color: \"red\" }}>\n                                                {errors.username}\n                                             </span>\n                                        </Grid>\n\n                                        <Grid item xs={12}>\n                                        <TextField \n                                            fullWidth\n                                            id=\"password\"\n                                            name=\"password\"\n                                            label=\"Password\"\n                                            type={values.showPassword ? 'text' : 'password'}\n                                            value={values.password}\n                                            onChange={handleChange('password')}\n                                            InputProps={{\n                                                endAdornment:(\n                                                     <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            edge=\"end\"\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={handleClickShowPassword}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                        >\n                                                            {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                    )\n                                            }}\n\n                                        />\n\n                                            <span style={{ color: \"red\" }}>\n                                                {errors.password}\n                                             </span>\n\n                                        </Grid>\n\n                                </Grid>\n                                <br />\n                                <Button \n                                    type=\"submit\"\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.submit}\n                                >\n                                Register\n                                </Button>\n\n                                </form>\n\n                             </Container>\n                                \n                            </Paper>\n\n                        </main>\n\n                    </div>\n\n\n                </DashboardAdmin>\n            </div>\n        )\n    \n};\n\nconst mapStateToProps = state => ({\n  orgDesc: state.orgDesc.records,\n  org: state.org,\n  errors: state.errors\n});\n\nconst mapDispatchToProps = { addAccntRecords,  getOrgDesc };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(OrgAccountListAddForm));","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { addIdReplacment } from '../../actions/idreplacementActions';\n \nimport { withStyles } from '@material-ui/core/styles';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\n\n// Object Styles for the components \nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n         ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n      },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n          width: 600,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        },\n      },\n      paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n      closeIcon: {\n          float: 'right',\n          color: 'red'\n      },\n      formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n      submit:{\n        marginTop: theme.spacing(3),\n      },\n      close: {\n          padding: theme.spacing() / 2,\n      },\n         link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n});\n\nconst IDReplacementAddForm = (props) => {\n\n\tconst classes = props;\n\n\t////////States///////\n\n\t// Value States\n\tconst [values, setValues] = useState({\n\t\t// State for the Name textField \n\t\tname:'',\n\t\t//State for Year TextField\n\t\tyear:'',\n\t\t// State for SR-Code TextField\n\t\tsrc:'',\n\t\t// State for Campus TextField\n\t\tcampus:'',\n\t\t// State for Department TextField\n\t\tdepartment:'',\n\t\t//State for Id Reason TextField\n\t\tidreason: '',\n\t\t//State for Count TextField\n\t\tcount: '',\n\t\t// Other Info Optional TextField\n\t\totherinfo: ''\n\n\t});\n\n\t// Getting the data for campuses and departments \n\tconst [campuses, getCampuses] = useState([]);\n\tconst [loadingCampuses, setLoadingCampuses] = useState(true);\n\tconst [departments, getDepartments] =  useState([]);\n\tconst [loadingDepartments, setLoadingDepartments] = useState(true);\n\n\t// Errors State \n\tconst [errors, getErrors] = useState({});\n\n\t///////Event Handlers/////\n\n\tconst handleChange = prop => e => {\n\t\tsetValues({...values, [prop]: e.target.value})\n\t};\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tprops.addIdReplacment(values);\n\t};\n\n\t/////Component Effects/////\n\n\tuseEffect( _ => {\n\n\t\tconst id = setInterval( _ => {\n\n\t\t\t(async _ => {\n\t\t\t\tconst res = await axios.get('/api/campuses');\n\t\t\t\t getCampuses(res.data);\n\t   \t\t\t setLoadingCampuses(false);\n\t\t\t})();\n\n\t\t\t(async _ => {\n\t\t\t\tconst res = await axios.get('/api/departments');\n\t\t\t\tgetDepartments(res.data);\n\t\t\t\tsetLoadingDepartments(false);\n\t\t\t})();\n\n\t\t}, 2000 );\n\n\t\treturn _ => {\n\t\t\tclearInterval(id);\n\t\t}\n\n\t},[]);\n\n\n\t// Effect when the form is done successfully \n\tuseEffect( _ => {\n\t\tif(props.idreplacement.added){\n\t\t\t\n\t\t\tprops.history.push('/ad/idreplacement');\n\t\t}\n\t},[props.idreplacement.added]);\n\n\t// Effect for rendering Error messages \n\tuseEffect( _ => {\n\t\tif(props.errors)\n\t\t\tgetErrors(props.errors)\n\t},[props.errors]);\n\n  return (\n    <div>\n\n    <DashboardAdmin>\n\n\t\t \t<Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n\t\t        <Link color=\"inherit\" href=\"/ad/idreplacement\" className={classes.link}>\n\t\t          <ViewListIcon className={classes.icon} />\n\t\t          Menu\n\t\t        </Link>\n\n\t\t        <Link\n\t\t          color=\"textPrimary\"\n\t\t          href=\"/ad/idreplacement/addidreplacement\"\n\t\t          aria-current=\"page\"\n\t\t          className={classes.link}\n\t\t        >\n\t\t        <ListAltIcon className={classes.icon} />\n\t\t          Add\n\t\t        </Link>\n\t\t    </Breadcrumbs>\n\n\t\t    \t<div className={classes.root}>\n\n\t\t    \t\t<main className={classes.layout}>\n\n\t\t    \t\t\t<Paper className={classes.paper}\n\t\t    \t\t\tstyle={{ paddingTop: '10px', paddingBottom:'30px'}}\n\t\t    \t\t\t>\n\n\t\t    \t\t\t\t<Typography variant=\"h4\" align=\"center\">\n\t                            Organization Registration Form\n\t                        </Typography>\n                        \t<br></br>\n\n                        \t<Container maxWidth=\"md\">\n\n                        \t<form noValidate onSubmit={handleSubmit}>\n\n                        \t\t<Typography variant=\"h6\">\n\t                           \t Input the details needed.\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\tonChange={handleChange('name')}\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\tlabel=\"Name of the student\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tautoComplete\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n                                       {errors.name}\n                                 </span>\n\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth className={classes.formControl}>\n\n\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"year-simple\">Year of Program</InputLabel>\n\n\t\t\t\t\t\t\t\t\t\t<Select \n\t\t\t\t\t\t\t\t\t\t\tvalue={values.year}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('year')}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tname:'year',\n\t\t\t\t\t\t\t\t\t\t\t\tid:'year-simple'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"1st Year\">1st Year</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"2nd Year\">2nd Year</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"3rd Year\">3rd Year</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"4th Year\">4th Year</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"5th Year\">5th Year</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"Longer than 5th\">Longer than 5th</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n                                       {errors.year}\n                                 </span>\n\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField \n\t                        \t\t\t\tvalue={values.src}\n\t                        \t\t\t\tonChange={handleChange('src')}\n\t                        \t\t\t\tid=\"src\"\n\t                        \t\t\t\tname=\"src\"\n\t                        \t\t\t\tlabel=\"SR-Code of the student\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t\n\t                        \t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n                                       {errors.src}\n                                 </span>\n\t\t\t\t\t\t\t\t<br/>\n\n\n\t\t\t\t\t\t\t\t<Grid container spacing={3}>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth className={classes.formControl}>\n\n\t                        \t\t\t\t<InputLabel htmlFor=\"campus-simple\">Campus of the Student</InputLabel>\n\n\t                        \t\t\t\t<Select\n\t                        \t\t\t\t\tvalue={values.campus}\n\t                        \t\t\t\t\tonChange={handleChange('campus')}\n\n\t                        \t\t\t\t\tinputProps={{\n\t                        \t\t\t\t\t\tname: 'campus',\n\t                        \t\t\t\t\t\tid:'campus-simple'\n\t                        \t\t\t\t\t}}\n\t                        \t\t\t\t>\n\t                        \t\t\t\t{\n\t                        \t\t\t\t\tloadingCampuses ? \n\t                        \t\t\t\t\t     <MenuItem></MenuItem>\n\t                        \t\t\t\t\t     :\n\t                        \t\t\t\t\t campuses.map((campus, id) => {\n\t                        \t\t\t\t\t \treturn <MenuItem key={id} value={campus.campusname}>{campus.campusname} </MenuItem>\n\t                        \t\t\t\t\t })\n\t                        \t\t\t\t}\n\t                        \t\t\t\t</Select>\n\n\t                        \t\t\t</FormControl>\n\n\t                        \t<span style={{ color: \"red\" }}>\n                                       {errors.campus}\n                                 </span>\n\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth className={classes.formControl}>\n\n\t                        \t\t\t\t<InputLabel htmlFor=\"department-simple\">Department</InputLabel>\n\n\t                        \t\t\t\t<Select\n\t                        \t\t\t\t\tvalue={values.department}\n\t                        \t\t\t\t\tonChange={handleChange('department')}\n\n\t                        \t\t\t\t\tinputProps={{\n\t                        \t\t\t\t\t\tname: 'department',\n\t                        \t\t\t\t\t\tid:'department-simple'\n\t                        \t\t\t\t\t}}\n\t                        \t\t\t\t>\n\t                        \t\t\t\t{\n\t                        \t\t\t\t\tloadingDepartments ? \n\t                        \t\t\t\t\t     <MenuItem></MenuItem>\n\t                        \t\t\t\t\t     :\n\t                        \t\t\t\t\t departments.map((campus, id) => {\n\t                        \t\t\t\t\t \treturn <MenuItem key={id} value={campus.department}>{campus.department} </MenuItem>\n\t                        \t\t\t\t\t })\n\t                        \t\t\t\t}\n\t                        \t\t\t\t</Select>\n\n\t                        \t\t\t</FormControl>\n\n\t                        \t\t<span style={{ color: \"red\" }}>\n                                       {errors.department}\n                                 </span>\n\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth className={classes.formControl}>\n\n\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"idreason-simple\">ID Replacement Reason</InputLabel>\n\n\t\t\t\t\t\t\t\t\t\t<Select \n\t\t\t\t\t\t\t\t\t\t\tvalue={values.idreason}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('idreason')}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tname:'idreason',\n\t\t\t\t\t\t\t\t\t\t\t\tid:'idreason-simple'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"New Student\">New Student</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"Transferee\">Transferee</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"Shifter\">Shifter</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"Lost ID\">Lost ID</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n                                       {errors.idreason}\n                                 </span>\n\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth className={classes.formControl}>\n\n\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"count-simple\">Count of ID Replacement Record</InputLabel>\n\n\t\t\t\t\t\t\t\t\t\t<Select \n\t\t\t\t\t\t\t\t\t\t\tvalue={values.count}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('count')}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tname:'count',\n\t\t\t\t\t\t\t\t\t\t\t\tid:'count-simple'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"1st\">1st</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"2nd\">2nd</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"3rd\">3rd</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"More...\">More...</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n                                       {errors.count}\n                                 </span>\n\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField \n\t                        \t\t\t\tvalue={values.otherinfo}\n\t                        \t\t\t\tonChange={handleChange('otherinfo')}\n\t                        \t\t\t\tid=\"otherinfo\"\n\t                        \t\t\t\tname=\"otherinfo\"\n\t                        \t\t\t\tlabel=\"Other Information/Remarks (Optional)\"\n\t                        \t\t\t\tmultiline\n\t                        \t\t\t\trowsMax=\"4\"\n\t                        \t\t\t\tclassName={classes.formControl}\n\t                        \t\t\t\tmargin=\"normal\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t<Button\n\t                        \t\t\ttype=\"submit\"\n\t                        \t\t\tvariant=\"outlined\"\n\t                        \t\t\tcolor=\"secondary\"\n\t                        \t\t\tclassName={classes.submit}\n\t                        \t\t>\n\t                        \t\t\tAdd Record\n\t                        \t\t</Button>\n\n\t                        \t</form>\n\t\t\t\t\t\t\t\t\n                        \t</Container>\n\n\t\t    \t\t\t</Paper> \n\n\t\t    \t\t</main>\n\n\t\t    \t</div>\n\n    </DashboardAdmin>\n\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n\tidreplacement: state.idreplacement,\n\terrors: state.errors\n});\n\nconst mapDispatchToProps = { addIdReplacment };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(IDReplacementAddForm));","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { updateIdReplacement } from '../../actions/idreplacementActions';\n \nimport { withStyles } from '@material-ui/core/styles';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\n// Object Styles for the components \nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n         ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n      },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n          width: 600,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        },\n      },\n      paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n      closeIcon: {\n          float: 'right',\n          color: 'red'\n      },\n      formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n      submit:{\n        marginTop: theme.spacing(3),\n      },\n      close: {\n          padding: theme.spacing() / 2,\n      },\n         link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n});\n\nconst IDReplacementAddForm = (props) => {\n\n\tconst classes = props;\n\n\t////////States///////\n\n\t// Value States\n\tconst [values, setValues] = useState({\n\t\t// State for the Name textField \n\t\tname: '',\n\t\t//State for Year TextField\n\t\tyear: '',\n\t\t// State for SR-Code TextField\n\t\tsrc: '',\n\t\t// State for Campus TextField\n\t\tcampus: '',\n\t\t// State for Department TextField\n\t\tdepartment: '',\n\t\t//State for Id Reason TextField\n\t\tidreason: '',\n\t\t//State for Count TextField\n\t\tcount: '',\n\t\t// Other Info Optional TextField\n\t\totherinfo: ''\n\n\t});\n\n\t// Getting the data for campuses and departments \n\tconst [campuses, getCampuses] = useState([]);\n\tconst [loadingCampuses, setLoadingCampuses] = useState(true);\n\tconst [departments, getDepartments] =  useState([]);\n\tconst [loadingDepartments, setLoadingDepartments] = useState(true);\n\n\t// Errors State \n\tconst [errors, getErrors] = useState({});\n\tconst [errorAll, setErrorAll] = useState(false);\n\n\t///////Event Handlers/////\n\n\tconst handleChange = prop => e => {\n\t\tsetValues({...values, [prop]: e.target.value})\n\t};\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tconsole.log(values);\n\t\tprops.updateIdReplacement(props.match.params.id,values);\n\t};\n\n\t// Closing Event for the Error message \n\tconst handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setErrorAll(false);\n  };\n\n\n\t/////Component Effects/////\n\n\tuseEffect( _ => {\n\n\t\tconst id = setInterval( _ => {\n\n\t\t\t(async _ => {\n\t\t\t\tconst res = await axios.get('/api/campuses');\n\t\t\t\t getCampuses(res.data);\n\t   \t\t\t setLoadingCampuses(false);\n\t\t\t})();\n\n\t\t\t(async _ => {\n\t\t\t\tconst res = await axios.get('/api/departments');\n\t\t\t\tgetDepartments(res.data);\n\t\t\t\tsetLoadingDepartments(false);\n\t\t\t})();\n\n\n\t\t}, 2000 );\n\n\t\treturn _ => {\n\t\t\tclearInterval(id);\n\t\t}\n\n\t},[]);\n\n\t// useEffect for getting the data in the getIdReplacementsById\n\tuseEffect( _ => {\n\t\taxios.get(`/api/idreplacements/getidrecords/${props.match.params.id}`)\n\t\t.then(res => setValues({\n\t\tname: res.data.name,\n\t\tyear: res.data.year,\n\t\tsrc: res.data.src,\n\t\tcampus: res.data.campus,\n\t\tdepartment: res.data.department,\n\t\tidreason: res.data.idreason,\n\t\tcount: res.data.count,\n\t\totherinfo: res.data.otherinfo\n\t\t}))\n\t\t.catch(err => err)\n\t},[])\n\n\n\t// Effect when the updating is done successfully \n\tuseEffect( _ => {\n\t\tif(props.idreplacement.replaced){\n\t\t\t\n\t\t\tprops.history.push('/ad/idreplacement');\n\t\t}\n\t},[props.idreplacement.replaced]);\n\n\t// Effect for rendering Error messages \n\tuseEffect( _ => {\n\t\tif(props.errors)\n\t\t\tgetErrors(props.errors)\n\n\t\tif(props.errors.all)\n\t\t\tsetErrorAll(true)\n\n\t},[props.errors]);\n\n  return (\n    <div>\n\n    <DashboardAdmin>\n\n    \t<FormConfirmationMsg open={errorAll} onClose={handleClose} variant=\"error\" message={errors.all}/>\n\n\t\t \t<Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n\t\t        <Link color=\"inherit\" href=\"/ad/idreplacement\" className={classes.link}>\n\t\t          <ViewListIcon className={classes.icon} />\n\t\t          Menu\n\t\t        </Link>\n\n\t\t        <Link\n\t\t          color=\"textPrimary\"\n\t\t          href=\"/ad/idreplacement/addidreplacement\"\n\t\t          aria-current=\"page\"\n\t\t          className={classes.link}\n\t\t        >\n\t\t        <ListAltIcon className={classes.icon} />\n\t\t          Add\n\t\t        </Link>\n\t\t    </Breadcrumbs>\n\n\t\t    \t<div className={classes.root}>\n\n\t\t    \t\t<main className={classes.layout}>\n\n\t\t    \t\t\t<Paper className={classes.paper}\n\t\t    \t\t\tstyle={{ paddingTop: '10px', paddingBottom:'30px'}}\n\t\t    \t\t\t>\n\n\t\t    \t\t\t\t<Typography variant=\"h4\" align=\"center\">\n\t                            Organization Registration Form\n\t                        </Typography>\n                        \t<br></br>\n\n                        \t<Container maxWidth=\"md\">\n\n                        \t<form noValidate onSubmit={handleSubmit}>\n\n                        \t\t<Typography variant=\"h6\">\n\t                           \t Input the details needed.\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<TextField \n\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\tonChange={handleChange('name')}\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\tlabel=\"Name of the student\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tautoComplete\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n                                       {errors.name}\n                                 </span>\n\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth className={classes.formControl}>\n\n\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"year-simple\">Year of Program</InputLabel>\n\n\t\t\t\t\t\t\t\t\t\t<Select \n\t\t\t\t\t\t\t\t\t\t\tvalue={values.year}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('year')}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tname:'year',\n\t\t\t\t\t\t\t\t\t\t\t\tid:'year-simple'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"1st Year\">1st Year</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"2nd Year\">2nd Year</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"3rd Year\">3rd Year</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"4th Year\">4th Year</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"5th Year\">5th Year</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"Longer than 5th\">Longer than 5th</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n                                       {errors.year}\n                                 </span>\n\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField \n\t                        \t\t\t\tvalue={values.src}\n\t                        \t\t\t\tonChange={handleChange('src')}\n\t                        \t\t\t\tid=\"src\"\n\t                        \t\t\t\tname=\"src\"\n\t                        \t\t\t\tlabel=\"SR-Code of the student\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t\n\t                        \t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n                                       {errors.src}\n                                 </span>\n\t\t\t\t\t\t\t\t<br/>\n\n\n\t\t\t\t\t\t\t\t<Grid container spacing={3}>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth className={classes.formControl}>\n\n\t                        \t\t\t\t<InputLabel htmlFor=\"campus-simple\">Campus of the Student</InputLabel>\n\n\t                        \t\t\t\t<Select\n\t                        \t\t\t\t\tvalue={values.campus}\n\t                        \t\t\t\t\tonChange={handleChange('campus')}\n\n\t                        \t\t\t\t\tinputProps={{\n\t                        \t\t\t\t\t\tname: 'campus',\n\t                        \t\t\t\t\t\tid:'campus-simple'\n\t                        \t\t\t\t\t}}\n\t                        \t\t\t\t>\n\t                        \t\t\t\t{\n\t                        \t\t\t\t\tloadingCampuses ? \n\t                        \t\t\t\t\t     <MenuItem></MenuItem>\n\t                        \t\t\t\t\t     :\n\t                        \t\t\t\t\t campuses.map((campus, id) => {\n\t                        \t\t\t\t\t \treturn <MenuItem key={id} value={campus.campusname}>{campus.campusname} </MenuItem>\n\t                        \t\t\t\t\t })\n\t                        \t\t\t\t}\n\t                        \t\t\t\t</Select>\n\n\t                        \t\t\t</FormControl>\n\n\t                        \t<span style={{ color: \"red\" }}>\n                                       {errors.campus}\n                                 </span>\n\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth className={classes.formControl}>\n\n\t                        \t\t\t\t<InputLabel htmlFor=\"department-simple\">Department</InputLabel>\n\n\t                        \t\t\t\t<Select\n\t                        \t\t\t\t\tvalue={values.department}\n\t                        \t\t\t\t\tonChange={handleChange('department')}\n\n\t                        \t\t\t\t\tinputProps={{\n\t                        \t\t\t\t\t\tname: 'department',\n\t                        \t\t\t\t\t\tid:'department-simple'\n\t                        \t\t\t\t\t}}\n\t                        \t\t\t\t>\n\t                        \t\t\t\t{\n\t                        \t\t\t\t\tloadingDepartments ? \n\t                        \t\t\t\t\t     <MenuItem></MenuItem>\n\t                        \t\t\t\t\t     :\n\t                        \t\t\t\t\t departments.map((campus, id) => {\n\t                        \t\t\t\t\t \treturn <MenuItem key={id} value={campus.department}>{campus.department} </MenuItem>\n\t                        \t\t\t\t\t })\n\t                        \t\t\t\t}\n\t                        \t\t\t\t</Select>\n\n\t                        \t\t\t</FormControl>\n\n\t                        \t\t<span style={{ color: \"red\" }}>\n                                       {errors.department}\n                                 </span>\n\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth className={classes.formControl}>\n\n\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"idreason-simple\">ID Replacement Reason</InputLabel>\n\n\t\t\t\t\t\t\t\t\t\t<Select \n\t\t\t\t\t\t\t\t\t\t\tvalue={values.idreason}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('idreason')}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tname:'idreason',\n\t\t\t\t\t\t\t\t\t\t\t\tid:'idreason-simple'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"New Student\">New Student</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"Transferee\">Transferee</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"Shifter\">Shifter</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"Lost ID\">Lost ID</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n                                       {errors.idreason}\n                                 </span>\n\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<FormControl fullWidth className={classes.formControl}>\n\n\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"count-simple\">Count of ID Replacement Record</InputLabel>\n\n\t\t\t\t\t\t\t\t\t\t<Select \n\t\t\t\t\t\t\t\t\t\t\tvalue={values.count}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('count')}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tname:'count',\n\t\t\t\t\t\t\t\t\t\t\t\tid:'count-simple'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"1st\">1st</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"2nd\">2nd</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"3rd\">3rd</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"More...\">More...</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>\n                                       {errors.count}\n                                 </span>\n\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField \n\t                        \t\t\t\tvalue={values.otherinfo}\n\t                        \t\t\t\tonChange={handleChange('otherinfo')}\n\t                        \t\t\t\tid=\"otherinfo\"\n\t                        \t\t\t\tname=\"otherinfo\"\n\t                        \t\t\t\tlabel=\"Other Information/Remarks (Optional)\"\n\t                        \t\t\t\tmultiline\n\t                        \t\t\t\trowsMax=\"4\"\n\t                        \t\t\t\tclassName={classes.formControl}\n\t                        \t\t\t\tmargin=\"normal\"\n\t                        \t\t\t\tfullWidth\n\t                        \t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t<Button\n\t                        \t\t\ttype=\"submit\"\n\t                        \t\t\tvariant=\"outlined\"\n\t                        \t\t\tcolor=\"secondary\"\n\t                        \t\t\tclassName={classes.submit}\n\t                        \t\t>\n\t                        \t\t\tAdd Record\n\t                        \t\t</Button>\n\n\t                        \t</form>\n\t\t\t\t\t\t\t\t\n                        \t</Container>\n\n\t\t    \t\t\t</Paper> \n\n\t\t    \t\t</main>\n\n\t\t    \t</div>\n\n    </DashboardAdmin>\n\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n\tidreplacement: state.idreplacement,\n\terrors: state.errors\n});\n\nconst mapDispatchToProps = { updateIdReplacement };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(IDReplacementAddForm));","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\n\nimport moment from 'moment';\nimport clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport { red } from '@material-ui/core/colors';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport DashboardAdmin from '../layouts/DashboardAdmin';\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n   card: {\n   float: 'center',\n    maxWidth: 500,\n  },\n  media: {\n    textAlign: \"center\"\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n    \n}));\n\nfunction AdminEventSingle(props){\n\n    const classes = useStyles();\n\n    const [event, setEvent] = useState({});\n\n    useEffect(_ => {\n        axios.get(`/api/announcements/${props.match.params.id}`)\n        .then(res => setEvent(res.data))\n        .catch(err => console.log(err));\n    },[]);\n\n\n        return (\n            <div>\n                <DashboardAdmin>\n                    <Container style={{paddingTop: 20}}>\n\n                     <Paper className={classes.root}>\n\n\n                    <Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n                        <Link color=\"inherit\" href=\"/ad\" className={classes.link}>\n                          <DateRangeIcon className={classes.icon} />\n                          Calendar\n                        </Link>\n\n                        <Link\n                          color=\"textPrimary\"\n                          href={`/ad/calendar/${props.match.params.id}`}\n                          aria-current=\"page\"\n                          className={classes.link}\n                        >\n                        <EventNoteIcon className={classes.icon} />\n                          Event\n                        </Link>\n                    </Breadcrumbs>\n\n\n\n                    <Grid container spacing={3}>\n                            <Grid item xs>\n                            </Grid>\n\n                            <Grid item xs={6}>\n                                 \n                                    <Card className={classes.card}>\n                                      <CardHeader\n                                        avatar={\n                                          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                            SOA\n                                          </Avatar>\n                                        }\n                                        // action={\n                                        //   <IconButton aria-label=\"settings\">\n                                        //     <MoreVertIcon />\n                                        //   </IconButton>\n                                        // }\n                                        title={event.title}\n                                        subheader={`${moment(event.dateDate).format('MMMM D YYYY')} by: ${event.setBy}`}\n                                      />\n\n                                  <CardMedia className={classes.media}>\n                                        <img style={{height: \"340px\", width: \"450px\"}} src={`${event.poster}`}/>\n                                  </CardMedia>\n\n                                      <CardContent>\n                                         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                          Venue: {event.venue}\n                                        </Typography>\n\n                                        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                          {event.description}\n                                        </Typography>\n                                      </CardContent>\n                                      <CardActions disableSpacing>\n                                      \n                                      </CardActions>\n                                   \n                                    </Card>\n                                    \n                            </Grid>\n\n                            <Grid item xs>\n                            </Grid>\n\n\n                          </Grid>\n\n                     </Paper>\n                    </Container>\n\n                </DashboardAdmin>\n            </div>\n        )\n}\n\nexport default AdminEventSingle;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\n\nimport moment from 'moment';\nimport Paper from '@material-ui/core/Paper';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport { red } from '@material-ui/core/colors';\n\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\n\nimport DashboardAdmin from '../layouts/DashboardAdmin';\n\n// Material UI styles \nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    button: {\n        margin: theme.spacing.unit,\n      },\n    input: {\n        display: 'none',\n      },\n    link: {\n    display: 'flex',\n  },\n   icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n   card: {\n   float: 'center',\n    maxWidth: 500,\n  },\n  media: {\n    textAlign: \"center\"\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n    \n}));\n\nfunction AdminEvents(props){\n\n    const classes = useStyles();\n    //State for the events\n    const [events, setEvents] = useState([]);\n    const [ifError, setIfError] = useState(false);\n\n    //Component Effect\n    useEffect(_ => {\n        axios.get(`/api/announcements/getByDate/${props.match.params.dateDate}`)\n        .then(res => setEvents(res.data))\n        .catch(err => {\n            if(err)\n                setIfError(true)\n        });\n    },[]);\n\n        return (\n            <div>\n                <DashboardAdmin>\n\n                        <Container style={{paddingTop: 20}}>\n\n\n                     <Paper className={classes.root}>\n\n\t\t\t\t\t<Breadcrumbs aria-label=\"breadcrumb\"  style={{ paddingBottom: '20px'}}>\n\t\t\t\t        <Link color=\"inherit\" href=\"/ad\" className={classes.link}>\n\t\t\t\t          <DateRangeIcon className={classes.icon} />\n\t\t\t\t          Calendar\n\t\t\t\t        </Link>\n\n\t\t\t\t        <Link\n\t\t\t\t          color=\"textPrimary\"\n\t\t\t\t          href={`/ad/calendar/listOfEvents/${props.match.params.dateDate}`}\n\t\t\t\t          aria-current=\"page\"\n\t\t\t\t          className={classes.link}\n\t\t\t\t        >\n\t\t\t\t        <EventNoteIcon className={classes.icon} />\n\t\t\t\t          Events\n\t\t\t\t        </Link>\n\t\t\t\t    </Breadcrumbs>\n\n                        <Fragment>\n                     {/*check if Theres an error\n\n                             <Typography variant=\"h1\" component=\"h2\" color=\"textSecondary\">\n                                            There's an error. Please refresh the page...\n                                        </Typography>\n                     */}\n                            {\n                                ifError\n                                ?\n                                <Grid container spacing={3}>\n                                     <Grid item xs>\n                                     </Grid>\n\n                                     <Grid item xs={6}>\n                                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"center\">\n                                            <WarningIcon style={{color: 'red'}} /> <br />\n                                            There's an error. Please refresh the page...\n                                        </Typography>\n                                     </Grid>\n\n                                    <Grid item xs>\n                                    </Grid>\n                                </Grid>\n                                :\n                                <Fragment>\n                                    {\n                                        events.length === 0 \n                                        ?\n                                          <Grid container spacing={3}>\n                                             <Grid item xs>\n                                             </Grid>\n\n                                             <Grid item xs={6}>\n                                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"center\">\n                                                    <SentimentVerySatisfiedIcon style={{color: 'green'}} /> <br />\n                                                    There are no events for this date. Please other dates for events.\n                                                </Typography>\n                                             </Grid>\n\n                                            <Grid item xs>\n                                            </Grid>\n                                        </Grid>\n\n                                        :\n\n                                    <Fragment>\n                                        {\n\n                                        events.map(event => (\n\n                            <Grid container spacing={3}>\n                                        <Grid item xs>\n                                        </Grid>\n\n                                        <Grid item xs={6}>\n                                             \n                                                <Card className={classes.card}>\n                                                  <CardHeader\n                                                    avatar={\n                                                      <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                                        SOA\n                                                      </Avatar>\n                                                    }\n                                                    // action={\n                                                    //   <IconButton aria-label=\"settings\">\n                                                    //     <MoreVertIcon />\n                                                    //   </IconButton>\n                                                    // }\n                                                    title={event.title}\n                                                    subheader={`${moment(event.dateDate).format('MMMM D YYYY')} by: ${event.setBy}`}\n                                                  />\n\n                                              <CardMedia className={classes.media}>\n                                                    <img style={{height: \"340px\", width: \"450px\"}} src={`${event.poster}`}/>\n                                              </CardMedia>\n\n                                                  <CardContent>\n                                                     <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                      Venue: {event.venue}\n                                                    </Typography>\n\n                                                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                                      {event.description}\n                                                    </Typography>\n                                                  </CardContent>\n                                                  <CardActions disableSpacing>\n                                                  \n                                                  </CardActions>\n                                               \n                                                </Card>\n                                                \n                                        </Grid>\n\n                                        <Grid item xs>\n                                        </Grid>\n\n\n                                 </Grid>\n\n                                            ))\n\n                                    }\n                                    </Fragment>\n\n\n                                    }\n                                </Fragment>\n                            }\n\n                        </Fragment>\n                     </Paper>\n                        \n\t\t\t\t  \t</Container>\n\n                </DashboardAdmin>\n            </div>\n        )\n}\n\nexport default AdminEvents;\n","import React, {useState, useEffect, Fragment } from 'react';\nimport {\n  Link,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getReports } from '../../actions/reportsActions';\nimport { getOrgDesc } from '../../actions/orgDescActions';\n\nimport moment from 'moment';\n\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'; \n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n// Style for the main Component \nconst useStyles = makeStyles(theme => ({\n     root2: {\n    width: '100%',\n    paddingBottom: '2 0px',\n      flexGrow: 1,\n  },\n    link: {\n    display: 'flex',\n      },\n       icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n      },\n    reportButton: {\n    paddingTop:15,\n    },\n       formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n   link: {\n    display: 'flex',\n    textDecoration: 'none',\n     color: '#8c8c8c',\n      '&:hover': {\n   \t\t textDecoration: 'underline',\n     \t }\n\t  },\n\t  textPrimary: {\n \t\tdisplay: 'flex',\n\t    textDecoration: 'none',\n\t    color: '#737373',\n\t      '&:hover': {\n\t   \t\t textDecoration: 'underline',\n\t     \t }\n\t  },\n\t  icon: {\n\t    marginRight: theme.spacing(0.5),\n\t    width: 20,\n\t    height: 20,\n\t  },\n}));\n\nfunction ViewOrgReports(props){\n\n\tconst classes = useStyles();\n\n\t//States\n\t // Pagination Controls \n     const [page, setPage] = useState(0);\n     const [rowsPerPage, setRowsPerPage] = useState(10);\n\n     const [searchByOrg, setSearchByOrg] = useState('');\n\n\t//Event Handlers\n\t//Getting the pages, Material UI Funcs\n    const handleChangePage = (event, newPage) => {\n          setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n          setRowsPerPage(parseInt(event.target.value, 10));\n          setPage(0);\n       };\n\n\n\t//Component Effects\n\n\tuseEffect(_ => {\n\t\tprops.getReports();\n\t\tprops.getOrgDesc();\n\t},[]);\n\n\t const orgArr = props.orgDesc.sort((a,b) => a.created_at > b.created_at ? -1 : 1);\n\n\t           //Array of the reports in the lost item reports \n  //Amd filters it by chosen campus\n  const rows = props.reports.records.sort((a, b) => (a.created_at > b.created_at ? -1 : 1));\n\n  //Empty row that says the rows for pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  console.log(searchByOrg);\n\n  return (\n    <div>\n             <DashboardAdmin>\n\n             \t<Breadcrumbs aria-label=\"breadcrumb\">\n\t\t\t      \t\t<Link to=\"/ad/filesandreports\" className={classes.link}>\n\t\t\t      \t\t\t<HomeIcon className={classes.icon}/>\n\t\t\t      \t\t\tMenu\n\t\t\t      \t\t</Link>\n\n\t\t\t\t\t        <Link\n\t\t\t\t\t          to={' '}\n\t\t\t\t\t          aria-current=\"page\"\n\t\t\t\t\t          className={classes.textPrimary}\n\t\t\t\t\t        >\n\t\t\t\t\t        <ArchiveIcon className={classes.icon}/>\n\t\t\t\t\t        Archived\n\t\t\t\t\t        </Link>\n\n\t\t\t      \t</Breadcrumbs>\n\n\t\t\t      \t  {/* Search Component */}\n\t\t\t      \t  <Paper>\n\t\t\t      \t    <FormControl fullWidth className={classes.formControl}>\n\n                                                <InputLabel htmlFor=\"orgname-simple\">Organization</InputLabel>\n\n                                                <Select\n                                                    value={searchByOrg}\n                                                    onChange={e => setSearchByOrg(e.target.value)}\n                                                    inputProps={{\n                                                        name: 'orgname',\n                                                        id:'orgname-simple'\n                                                    }}\n                                                >\n                                                {\n                                                    props.orgDesc.loading ? \n                                                         <MenuItem></MenuItem>\n                                                         :\n                                                         // To access all the object data and use it in other components\n                                                         // setthe response object as the value of the select component \n                                                         // and get the object data\n                                                     orgArr.map(org => {\n                                                        return <MenuItem  value={org.orgname}>{org.orgname}</MenuItem>\n                                                         })\n                                                }\n                                                </Select>\n\n                           </FormControl>\n                        </Paper>\n               <br />\n\n\t\t\t\t   \t<Paper>\n\t\t\t\t    \t <div className={classes.tableWrapper}>\n\n                             <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>Organization Name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Campus</StyledTableCell>\n                                <StyledTableCell align=\"left\">Report Title</StyledTableCell>\n                                <StyledTableCell align=\"left\">Report Description</StyledTableCell>\n                                <StyledTableCell align=\"left\">File</StyledTableCell>\n                                <StyledTableCell align=\"left\">Date Submitted</StyledTableCell>\n                              </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { props.reports.loading\n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :   \n                                    //Data to be displayed when the data is fetched\n                                    <Fragment>\n                                    {\n                                       searchByOrg === '' || rows.length === 0 ?\n                                       <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                       <ArrowUpwardIcon /><br></br>\n                                       Pls search at the top to filter by campus...\n                                     </TableCell>\n                                      :\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      .filter(row => row.orgname === searchByOrg)\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.orgname}\n                                          </TableCell>\n                                          <TableCell align=\"left\">{row.campus}</TableCell>\n                                          <TableCell align=\"left\">{row.reportTitle}</TableCell>\n                                          <TableCell align=\"left\">{row.reportDesc}</TableCell>\n                                          <TableCell align=\"left\">\n                                          <a href={row.file}>\n                                          \t<GetAppIcon />\n                                            </a>\n                                          </TableCell>\n\n\n                                          <TableCell align=\"left\">{moment(row.created_at).format('YYYY-MM-DD')}</TableCell>\n                                        </TableRow>\n                                      ))\n                                    }\n                                    </Fragment>\n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n                            \n                        </div>\n\t\t\t\t    </Paper>\n\n    \t\t</DashboardAdmin>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\treports: state.reports,\n\torgDesc: state.orgDesc.records,\n})\n\nconst mapDispatchToProps = { getReports, getOrgDesc };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewOrgReports);","import React, { useState, useEffect, useMemo, forwardRef} from 'react';\nimport { connect } from 'react-redux';\nimport { Link as Router } from \"react-router-dom\";\nimport { shareFiles } from '../../actions/fileSharingActions';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ViewListIcon from '@material-ui/icons/ViewList';\n\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n//Admin Dashboard Component\nimport DashboardAdmin from '../layouts/DashboardAdmin';\n\nconst LinkRouter = (props) => <Link {...props} component={Router} />;\n\nconst useStyles = makeStyles(theme => ({\n\t root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n         ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n      },\n\n      paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n          marginTop: theme.spacing(6),\n          marginBottom: theme.spacing(6),\n          padding: theme.spacing(3),\n        },\n      },\n      closeIcon: {\n          float: 'right',\n          color: 'red'\n      },\n      formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n        paddingBottom: 20\n      },\n      submit:{\n        marginTop: theme.spacing(3),\n      },\n      close: {\n          padding: theme.spacing() / 2,\n      },\n     link: {\n\t    display: 'flex',\n\t  },\n   icon: {\n     marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n    input: {\n    display: 'none',\n  },\n   margin: {\n    margin: theme.spacing(1),\n  },\n  breadcrumb: {\n  \tpaddingBottom: 20\n  },\n  button: {\n  \tpaddingBottom: 20\n  }\n}));\n\nfunction ShareFiles(props) {\n\n\tconst classes = useStyles();\n\n\t//State\n\tconst [obj, setObj] = useState({\n\t\tfile: null,\n\t\tfileName: '',\n\t\tstud: ''\n\t});\n\n\tconst [errors, getErrors] = useState({});\n\n\t//Event Handlers\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tconst fd = new FormData();\n\t\tfd.append('file', obj.file);\n\t\tfd.append('fileName', obj.fileName);\n\t\tfd.append('stud', obj.stud);\n\n\t\tprops.shareFiles(fd);\n\t}\n\n\t//Component Effect\n\n\tuseEffect(_ => {\n\t\tif(props.errors)\n\t\t\tgetErrors(props.errors)\n\t},[props.errors]);\n\n\tuseEffect(_ => {\n\t\tif(props.fileSharing)\n\t\t\tprops.history.push('/ad/filesandreports/shareFiles/list');\n\t}, [props.fileSharing]);\n\n\t// console.log(props);\n\n  return (\n    <div>\n    \t<DashboardAdmin>\n\n    \t\t<Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumb}>\n\t\t\t      \t <LinkRouter className={classes.link} color=\"inherit\" to=\"/ad/filesandreports/\">\n\t\t\t      \t <ViewListIcon classes={classes.icon} />\n\t                  Menu\n\t                </LinkRouter>\n\n\t                <LinkRouter className={classes.link} color=\"textPrimary\" to=\"/ad/filesandreports/shareFiles\">\n\t                <ShareIcon classes={classes.icon} />\n\t                  Share Files\n\t                </LinkRouter>\n\n\t\t\t      \t</Breadcrumbs>\n\n\t\t\t      \t<LinkRouter to=\"/ad/filesandreports/shareFiles/list\">\n\t\t\t\t      \t<Button color=\"secondary\" variant=\"outlined\">\n\t\t\t\t      \t\tView List\n\t\t\t\t      \t</Button>\n\t\t\t      \t</LinkRouter>\n\t\t\t      \t\n\t\t\t      \t<br />\n\t\t\t      \t<br />\n\t\t\t      \t\n\n\t\t    \t<Paper className={classes.root}>\n\n\t\t    \t\t<Grid container spacing={2}> \n\n\n\t\t\t\t\t      \t    \t\t<Grid item md={2} xs={0}>\n\t\t\t\t\t      \t    \t\t</Grid>\n\n\t\t\t\t\t      \t    \t\t<Grid  item xs={12} md={8}>\n\t\t\t      \t    \t\t\t\t\n\t\t\t\t      \t    \t\t\t\t\t\t\t\n\t\t\t      \t    \t\t\t\t\t\t\t <Typography variant=\"h6\">\n\t\t\t\t\t                          \t\t  Input the details needed.\n\t\t\t\t\t                        \t\t</Typography>\n\n\t\t\t\t\t                        \t\t<form noValidate onSubmit={handleSubmit}>\n\n\t\t\t\t\t                                {/* File Upload TextField */}\n\t\t\t\t\t\t\t                                <div className={classes.margin}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        <Grid container spacing={1} alignItems=\"flex-end\">\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          <Grid item xs={1}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          {/* \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t onChange={e => setObj({...obj, file: e.target.files[0], fileName: e.target.files[0].name})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input onChange={e => setObj({...obj, file: e.target.files[0], fileName: e.target.files[0].name}) }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.input} id=\"file\" name=\"file\" type=\"file\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      <label htmlFor=\"file\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          <CloudUploadIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        </IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t     </label>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          </Grid>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          <Grid item xs={11}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            <TextField \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            value={obj.fileName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            id=\"input-with-icon-grid\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            label=\"Enter the file here\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            helperText=\"Note: .docx and .pdf file types only\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            fullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t              InputProps={{\n\t\t\t\t\t\t\t                                               readOnly: true,\n\t\t\t\t\t\t\t                                              }}\n\t\t\t\t\t\t\t                                           InputLabelProps={{\n\t\t\t\t\t\t\t                                           \t\tshrink: true,\n\t\t\t\t\t\t\t                                           }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            />\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            {/*\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        Native Input file for\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        <input type=\"file\" name=\"file\" value={fileName} onChange={handleChangeFile}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t               \t*/ }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        \n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        </Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        </Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t             <span style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t                                               {errors.file}\n\t\t\t\t\t\t\t                                         </span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    </div> \n\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    <FormControl className={classes.formControl}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        <InputLabel id=\"demo-simple-select-helper-label\">Who will recieve the files</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        <Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t         onChange={e => setObj({...obj, stud: e.target.value})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t         value={obj.stud}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          labelId=\"demo-simple-select-helper-label\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          id=\"demo-simple-select-helper\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          <MenuItem value=\"\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t            <em>None</em>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          </MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          <MenuItem value={\"student\"}>Students</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t          <MenuItem value={\"org\"}>Student Organizations</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        </Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      </FormControl>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      <span style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t                                               {errors.stud}\n\t\t\t\t\t\t\t                                         </span>\n\t\t\t\t\t\t\t                                         <br />\n\n\t\t\t\t\t                        \t\t<span>*** Please double check everythin before you submit</span>\n\n\t\t\t\t\t                        \t\t\t<Button\n\t\t\t\t\t\t\t                                type=\"submit\"\n\t\t\t\t\t\t\t                                fullWidth\n\t\t\t\t\t\t\t                                variant=\"contained\"\n\t\t\t\t\t\t\t                                color=\"primary\"\n\t\t\t\t\t\t\t                                className={classes.submit}\n\t\t\t\t\t\t\t\t                            >\n\t\t\t\t\t\t\t\t                                submit\n\t\t\t\t\t\t\t\t                            </Button>\n\t\t\t\t\t                        \t\t</form>\n\n\n\t\t\t\t\t\t\t\t      \t    \t\t\n\t\t\t\t\t\t\t\t     \t\t \t\t\n\t\t\t\t\t      \t    \t\t</Grid>\n\n\t\t\t\t\t      \t    \t\t<Grid item md={2} xs={0}>\n\t\t\t\t\t      \t    \t\t</Grid>\n\n\n\t\t\t      \t    \t</Grid>\n\t\t    \t\t\n\t\t    \t</Paper>\n\n    \t</DashboardAdmin>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\tfileSharing: state.fileSharing.shared,\n\terrors: state.errors\n});\n\nconst mapDispatchToProps = { shareFiles };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShareFiles);","import React, { useState, useEffect, useMemo, forwardRef, Fragment} from 'react';\nimport { connect } from \"react-redux\";\nimport { Link as Router } from \"react-router-dom\";\nimport  { getRecords, shareFilesFalse, deleteFiles, deleteFilesFalse } from '../../actions/fileSharingActions';\nimport moment from 'moment';\n\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nimport DashboardAdmin from '../layouts/DashboardAdmin';\nimport FormConfirmationMsg from './FormConfirmationMsg';\n\nconst Transition = props => {\n    return <Slide direction=\"up\" {...props} />\n}\n\n//Header of the Table\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: 'rgb(138, 28, 28)',\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\n// Style for TablePaginationActions Component \nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\n// Table Functions for table pagination \nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  // Table Pagination Component \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n     root2: {\n    width: '100%',\n    paddingBottom: '2 0px',\n      flexGrow: 1,\n  },\n    reportButton: {\n    paddingTop:15,\n  },\n   formControl: {\n        // margin: theme.spacing.unit,\n        minWidth: '100% ',\n      },\n tableWrapper: {\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 500,\n  },\n  breadcrumb: {\n  \tpaddingBottom: 20\n  },\n   link: {\n\t    display: 'flex',\n\t  },\n   icon: {\n     marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst LinkRouter = (props) => <Link {...props} component={Router} />;\n\nfunction ViewSharedFiles(props){\n\tconst classes = useStyles();\n\n\t//State\n\tconst [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    const [shared, setShared] = useState(false);\n    const [id, getId] = useState(null);\n\n          //Delete modal State\n    const [deleteModal, openDeleteModal] = useState(false);\n    const [openDelete, setOpenDelete] = useState(false);\n\n\t//Event Handlers\n\t  //Getting the pages, Material UI Funcs\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleDelete = id => {\n  \tgetId(id);\n\n  \topenDeleteModal(true);\n  };\n\n   const handleDeleteModalClose = _ => {\n          openDeleteModal(false)\n    };\n\n            // Event for openAdded state \n        const handleClose = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setShared(false);\n                props.shareFilesFalse();\n          };\n\n\n            // Event for openAdded state \n        const handleCloseDeleted = (event, reason) => {\n                if (reason === 'clickaway') {\n                  return;\n                }\n\n                setOpenDelete(false);\n                props.deleteFilesFalse();\n          };\n\n      //Final action for deleting a file\n    const deleteFinal = _ => {\n    \tprops.deleteFiles(id);\n\n    \topenDeleteModal(false);\n    \tsetOpenDelete(true);\n    }\n\n\t//Component Effect\n\tuseEffect(_ => {\n\t\tif(props.fileSharing.shared)\n\t\t\tsetShared(true);\n\n\t\tsetTimeout(function (){ props.shareFilesFalse()}, 6000)\n\t\t\n\t},[props.fileSharing.shared])\n\n\tuseEffect(_ => {\n\t\tprops.getRecords();\n\t},[props.fileSharing.deleted])\n\n\tuseEffect(_ => {\n\t\tif(props.fileSharing.deleted)\n\t\t\tsetOpenDelete(true)\n\n\t\tsetTimeout( function(){ props.deleteFilesFalse() }, 6000)\n\n\t},[props.fileSharing.deleted])\n\n\t  //Array of the reports in the lost item reports \n  //Amd filters it by chosen campus\n  const rows = props.fileSharing.records.sort((a, b) => (a.created_at > b.created_at ? -1 : 1));\n\n  //Empty row that says the rows for pagination\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  \t// console.log(props);\n\n\treturn (\n\t\t<div>\n\t\t\t <DashboardAdmin>\n\n\t\t\t <Dialog\n                   open={deleteModal}\n                   TransitionComponent={Transition}\n                   keepMounted\n                   onClose={handleDeleteModalClose}\n                   aria-labelledby=\"alert-dialog-slide-title\"\n                   aria-describedby=\"alert-dialog-slide-description\"\n                   >\n                       <DialogTitle id=\"alert-dialog-slide-title\">\n                           {\"Delete Announcement\"}\n                        </DialogTitle>\n\n                        <DialogContent>\n\n                          <DialogContentText id=\"alert-dialog-slide-description\">\n                              Are you sure to delete this shared file?\n                              </DialogContentText>\n                          </DialogContent>  \n\n                          <DialogActions>\n                            <Button onClick={deleteFinal} variant=\"outlined\" color=\"primary\">\n                              Yes\n                            </Button>\n                            <Button onClick={handleDeleteModalClose} variant=\"outlined\" color=\"secondary\">\n                              No\n                            </Button>\n                          </DialogActions>\n                   </Dialog>\n\n                <FormConfirmationMsg open={shared} onClose={handleClose} variant=\"success\" message=\"Shared file Added.\"  />\n                <FormConfirmationMsg open={openDelete} onClose={handleCloseDeleted} variant=\"success\" message=\"Shared file Deleted.\"  />\n\n\n\t\t\t <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumb}>\n\t\t\t      \t <LinkRouter className={classes.link} color=\"inherit\" to=\"/ad/filesandreports/\">\n\t\t\t      \t <ViewListIcon classes={classes.icon} />\n\t                  Menu\n\t                </LinkRouter>\n\n\t                <LinkRouter className={classes.link} color=\"inherit\" to=\"/ad/filesandreports/shareFiles\">\n\t                <ShareIcon classes={classes.icon} />\n\t                  Share Files\n\t                </LinkRouter>\n\n\t                <LinkRouter className={classes.link} color=\"inherit\" to=\"/ad/filesandreports/shareFiles/list\">\n\t                <ListAltIcon classes={classes.icon} />\n\t                  List\n\t                </LinkRouter>\n\n\t\t\t      \t</Breadcrumbs>\n\n\t\t\t \t  <Paper className={classes.root2}>\n                        <div className={classes.tableWrapper}>\n\n                            <Table className={classes.table} aria-label=\"custom pagination table\">\n                            {/* Table Head of the datas  */}\n                            <TableHead>\n                              <TableRow>\n                                <StyledTableCell>File name</StyledTableCell>\n                                <StyledTableCell align=\"left\">Shared to:</StyledTableCell>\n                                <StyledTableCell align=\"left\">Date</StyledTableCell>\n                                <StyledTableCell align=\"left\">Actions</StyledTableCell>\n                               </TableRow>\n                            </TableHead>\n\n                          {/* Body for displaying the reports */}\n                                <TableBody>\n                                  { props.fileSharing.loading\n                                    ? \n                                      //When the data is still loading\n                                      <TableRow>\n                                      <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                        <CircularProgress color=\"secondary\" /><br/>\n                                        <span>Loading ...</span>\n                                      </TableCell>\n                                    </TableRow>\n                                    :   \n                                    //Data to be displayed when the data is fetched\n                                    <Fragment>\n                                    {\n                                       rows.length === 0 ?\n                                       <TableCell rowSpan={5} colSpan={8} style={{textAlign: 'center',}}>\n                                       No data to display...\n                                     </TableCell>\n                                      :\n                                      (rowsPerPage > 0\n                                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        : rows\n                                      )\n                                      //Filter the row by what will be typed in the search filter for department then map the result\n                                      .map(row => (\n                                        <TableRow>\n                                          <TableCell component=\"th\" scope=\"row\">\n                                            {row.fileName}\n                                          </TableCell>\n                                          <TableCell align=\"left\">\n                                          {\n                                          \trow.stud === 'student'\n                                          \t?\n                                          \t\"Students\"\n                                          \t:\n                                          \t\"Student Organizations\"\n                                          }\n                                          </TableCell>\n                                          <TableCell align=\"left\">{moment(row.created_at).format('YYYY-MM-DD')}</TableCell>\n                                          <TableCell align=\"left\">\n\n                                          <Tooltip title=\"Delete\" placement=\"top\">\n                                                 <IconButton onClick={_ => handleDelete(row.id)} aria-label=\"edit\" color=\"secondary\">\n                                                  <DeleteIcon />\n                                                </IconButton>\n                                              </Tooltip>   \n\n                                          </TableCell>\n                                        \t\n                                        </TableRow>\n                                      ))\n                                    }\n                                    </Fragment>\n                                  }\n\n                                  {emptyRows > 0 && (\n                                    <TableRow style={{ height: 53 * emptyRows }}>\n                                      <TableCell colSpan={6} />\n                                    </TableRow>\n                                  )}\n                                </TableBody>\n                                <TableFooter>\n                                  <TableRow>\n\n                                    {/* Table Pagination controls  */}\n                                    <TablePagination\n                                      rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                                      colSpan={3}\n                                      count={rows.length}\n                                      rowsPerPage={rowsPerPage}\n                                      page={page}\n                                      SelectProps={{\n                                        inputProps: { 'aria-label': 'rows per page' },\n                                        native: true,\n                                      }}\n                                      onChangePage={handleChangePage}\n                                      onChangeRowsPerPage={handleChangeRowsPerPage}\n                                      ActionsComponent={TablePaginationActions}\n                                    />\n\n                                  </TableRow>\n                                </TableFooter>\n                              </Table>\n\n                        </div>\n\t\t\t \t  </Paper>\n\n\t\t\t </DashboardAdmin>\n\t\t</div>\n\t\t)\n\n}\n\nconst mapStateToProps = state => ({\n\tfileSharing: state.fileSharing\n});\n\nconst mapDispatchToProps = { getRecords, shareFilesFalse, deleteFiles, deleteFilesFalse };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewSharedFiles);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n//For Implementing Redux components\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n//Private Routing function\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            auth.isAuthenticated === true\n                // if \n                ? (\n                    //if the user is authenticated\n                    <Component {...props} />\n                )\n                // else \n                : (\n                    //if not, it will stay in the login route\n                    <Redirect to=\"/\" />\n                )\n        }\n    />\n);\n\n//PropTypes \nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\n// mapstatetoprops \nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n//Components\nimport Index from './components/Index';\n// Student Dashboard Components\nimport StudentIndex from './components/st/StudentIndex';\nimport LostAndFoundContent from './components/st/LostAndFoundContent';\nimport LostItemForm from './components/st/LostItemForm';\nimport LostItemReports from './components/st/LostItemReports';\nimport FoundTable from './components/st/FoundTable';\nimport StudentCalendar from './components/st/StudentCalendar';\nimport StudentEventSingle from './components/st/StudentEventSingle';\nimport StudentEvents from './components/st/StudentEvents';\nimport Activities from './components/st/Activities';\nimport JoinActivity from './components/st/JoinActivity';\n\n// Student Organization Dashboard Components\nimport OrgIndex from './components/org/OrgIndex';\nimport ActivityRequestReports from './components/org/ActivityRequestReports';\nimport RequestActivityComponent from './components/org/RequestActivityComponent';\nimport OrgNotifications from './components/org/OrgNotifications';\nimport CalendarOrg from './components/org/CalendarOrg';\nimport OrgEventSingle from './components/org/OrgEventSingle';\nimport OrgEvents from './components/org/OrgEvents';\nimport Assessment from './components/org/Assessment';\nimport AddAssessment from './components/org/AddAssessment';\nimport CheckRegisteredStudentsOrg from './components/org/CheckRegisteredStudentsOrg';\nimport UpdateAssessment from './components/org/UpdateAssessment';\nimport SendOrgReports from './components/org/SendOrgReports';\n\n// SOA Head Dashboard Components\nimport HeadIndex from './components/h/HeadIndex';\nimport AnnounceEvent from './components/h/AnnounceEvents';\nimport LostAndFound from './components/h/LostAndFound';\nimport OrgList from './components/h/OrgList';\nimport RequestedActivities from './components/h/RequestedActivities';\nimport ActivityAssessment from './components/h/ActivityAssessment';\nimport LostOrFound from './components/h/LostOrFound';\nimport Found from './components/h/Found';\nimport AddFound from './components/h/AddFound';\nimport HeadEventSingle from './components/h/HeadEventSingle';\nimport HeadEvents from './components/h/HeadEvents';\nimport AddEventFormHead from './components/h/AddEventFormHead';\nimport UpdateEventFormHead from './components/h/UpdateEventFormHead';\nimport CheckRegisteredStudents from './components/h/CheckRegisteredStudents';\n\n// SOA Admin Dashboard Components\nimport AdminIndex from './components/ad/AdminIndex';\nimport AnnounceEvents from './components/ad/AnnounceEvents';\nimport AddEventForm from './components/ad/AddEventForm';\nimport UpdateEventForm from './components/ad/UpdateEventForm';\nimport OrgListAdmin from './components/ad/OrgListAdmin';\nimport RequestedActivitesAdmin from './components/ad/RequestedActivitiesAdmin';\nimport FilesAndReports from './components/ad/FilesAndReports';\nimport IDReplacement from './components/ad/IDReplacement';\nimport OrgAddForm from './components/ad/OrgAddForm';\nimport OrgUpdateForm from './components/ad/OrgUpdateForm';\nimport OrgAccountList from './components/ad/OrgAccountList';\nimport OrgAccountListAddForm from './components/ad/OrgAccountListAddForm';\nimport IDReplacementAddForm from './components/ad/IDReplacementAddForm';\nimport IDReplacementUpdateForm from './components/ad/IDReplacementUpdateForm';\nimport AdminEventSingle from './components/ad/AdminEventSingle';\nimport AdminEvents from './components/ad/AdminEvents';\nimport ViewOrgReports from  './components/ad/ViewOrgReports';\nimport ShareFiles from './components/ad/ShareFiles';\nimport ViewSharedFiles from './components/ad/ViewSharedFiles';\n//PrivateRoute\nimport PrivateRoute from './private-route/PrivateRoute';\n\n//Authentication\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n\n      <Router>\n        <Route exact path=\"/\" component={Index} />\n\n        {/* Private Routes  */}\n        <Switch>\n          {/* Student Route Pages  */}\n          <PrivateRoute exact path=\"/st\" component={StudentIndex} />\n          <PrivateRoute exact path=\"/st/lostandfoundpage\" component={LostAndFoundContent} />\n          <PrivateRoute exact path=\"/st/lostandfoundpage/reportlostitem\" component={LostItemForm} />\n          <PrivateRoute exact path=\"/st/lostandfoundpage/reportslist\" component={LostItemReports} />\n          <PrivateRoute exact path=\"/st/lostandfoundpage/foundreportslist\" component={FoundTable} />\n          <PrivateRoute exact path=\"/st/events\" component={StudentCalendar} />\n          <PrivateRoute exact path=\"/st/events/:id\" component={StudentEventSingle} />\n          <PrivateRoute exact path=\"/st/listOfEvents/:dateDate\" component={StudentEvents} />\n          <PrivateRoute exact path=\"/st/activities\" component={Activities} />\n          <PrivateRoute exact path=\"/st/activities/:id/:activity\" component={JoinActivity} />\n\n          {/* Student Organization Route Pages  */}\n          <PrivateRoute exact path=\"/org\" component={OrgIndex} />\n          <PrivateRoute exact path=\"/org/activitysections\" component={ActivityRequestReports} />\n          <PrivateRoute exact path=\"/org/activitysections/requestactivities\" component={RequestActivityComponent} />\n          <PrivateRoute exact path=\"/org/notifications\" component={OrgNotifications} />\n          <PrivateRoute exact path=\"/org/calendar\" component={CalendarOrg} />\n          <PrivateRoute exact path=\"/org/calendar/:id\" component={OrgEventSingle} />\n          <PrivateRoute exact path=\"/org/calendar/listOfEvents/:dateDate\" component={OrgEvents} />\n          <PrivateRoute exact path=\"/org/assessment\" component={Assessment} />\n          <PrivateRoute exact path=\"/org/assessment/addActivity\" component={AddAssessment} />\n          <PrivateRoute exact path=\"/org/assessment/:activityId/:activityTitle\" component={CheckRegisteredStudentsOrg} />\n          <PrivateRoute exact path=\"/org/assessment/:id\" component={UpdateAssessment} />\n          <PrivateRoute exact path=\"/org/sendArchive\" component={SendOrgReports} />\n\n          {/* Head Organization Route Pages  */}\n          <PrivateRoute exact path=\"/h\" component={HeadIndex} />\n          <PrivateRoute exact path=\"/h/announceevent\" component={AnnounceEvent} />\n          <PrivateRoute exact path=\"/h/lostandfound\" component={LostOrFound} />\n          <PrivateRoute exact path=\"/h/lostandfound/lostreports\" component={LostAndFound} />\n          <PrivateRoute exact path=\"/h/lostandfound/foundreports\" component={Found} />\n          <PrivateRoute exact path=\"/h/lostandfound/foundreports/addfoundrecord\" component={AddFound} />\n          <PrivateRoute exact path=\"/h/organizationlist\" component={OrgList} />\n          <PrivateRoute exact path=\"/h/requestedactivities\" component={RequestedActivities} />\n          <PrivateRoute exact path=\"/h/activityassessment\" component={ActivityAssessment} />\n          <PrivateRoute exact path=\"/h/calendar/:id\" component={HeadEventSingle} />\n          <PrivateRoute exact path=\"/h/calendar/listOfEvents/:dateDate\" component={HeadEvents} />\n          <PrivateRoute exact path=\"/h/announceevent/addEvent\" component={AddEventFormHead} />\n          <PrivateRoute exact path=\"/h/announceevent/updateEvent/:id\" component={UpdateEventFormHead} />\n          <PrivateRoute exact path=\"/h/activityassessment/:activityId/:activityTitle\" component={CheckRegisteredStudents} />\n\n          {/* Administration Page  */}\n          <PrivateRoute exact path=\"/ad\" component={AdminIndex} />\n          <PrivateRoute exact path=\"/ad/announceevent\" component={AnnounceEvents} />\n          <PrivateRoute exact path=\"/ad/announceevent/addevent\" component={AddEventForm} />\n          <PrivateRoute exact path=\"/ad/announceevent/updateevent/:id\" component={UpdateEventForm} />\n          <PrivateRoute exact path=\"/ad/organizationlist\" component={OrgListAdmin} />\n          <PrivateRoute exact path=\"/ad/organizationlist/addrecord\" component={OrgAddForm} />\n          <PrivateRoute exact path=\"/ad/organizationlist/updaterecord/:id\" component={OrgUpdateForm} />\n          <PrivateRoute exact path=\"/ad/organizationlist/accountlist\" component={OrgAccountList} />\n          <PrivateRoute exact path=\"/ad/organizationlist/accountlist/registerorg\" component={OrgAccountListAddForm} />\n          <PrivateRoute exact path=\"/ad/requestedactivities\" component={RequestedActivitesAdmin} />\n          <PrivateRoute exact path=\"/ad/filesandreports\" component={FilesAndReports} />\n          <PrivateRoute exact path=\"/ad/idreplacement\" component={IDReplacement} />\n          <PrivateRoute exact path=\"/ad/idreplacement/addidreplacement\" component={IDReplacementAddForm} />\n          <PrivateRoute exact path=\"/ad/idreplacement/updateidreplacement/:id\" component={IDReplacementUpdateForm} />\n          <PrivateRoute exact path=\"/ad/calendar/:id\" component={AdminEventSingle} />\n          <PrivateRoute exact path=\"/ad/calendar/listOfEvents/:dateDate\" component={AdminEvents} />\n          <PrivateRoute exact path=\"/ad/filesandreports/viewArchivedReports\" component={ViewOrgReports} />\n          <PrivateRoute exact path=\"/ad/filesandreports/shareFiles\" component={ShareFiles} />\n          <PrivateRoute exact path=\"/ad/filesandreports/shareFiles/list\" component={ViewSharedFiles} />\n\n\n\n        </Switch>\n\n      </Router>\n\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}